Please subscribe to my channel and click on the bell icon to get the regular updates of my channel and do not forget to like, comment and share. Welcome to SAS with ServiceNow. This is ServiceNow System Administrator training. This training has been recorded in Orlando version of ServiceNow. Course Journey Let me start with course journey. The topics of this training are Introduction of the course Platform overview and architecture User interface and branding List and filters Forms Task management Notifications Service management Service catalog Tables and fields Access control list Data import CMDB Integration Events Update sets Platform stats Training in ServiceNow Custom application development And last we will recap the whole training with all the topics we are learning. Introduction of the course About this course This course is about ServiceNow Admin training and ServiceNow fundamentals. This is a starting point of ServiceNow journey. This training will help you to prepare for ServiceNow Admin exam and interviews. After this course Once you will complete the training, you will have knowledge of ServiceNow platform features. You will be able to perform configuration and customization in ServiceNow platform. You will be able to get yourself ready ServiceNow Admin certification exam. You will be able to understand platform architecture. You will be able to begin your ServiceNow journey and grow your career in ServiceNow. Platform overview and architecture ServiceNow Platform ServiceNow is an American company which has a product called ServiceNow Platform. This company provides an application platform as a service, which is called APaaS. It is a cloud-based computing model which provides the infrastructure needed to develop, run and manage applications. ServiceNow Platform is not limited to any business functions of any organization and can be utilized in different areas of an organization like IT, HR, Finance, Security. Organizations can utilize ServiceNow to automate manual, repeatable processes and standardize their service delivery. ServiceNow was known to be a ticketing tool. However, now it is an automation platform in which you can automate different business processes. ServiceNow Architecture ServiceNow Platform is an application platform as a service. That means it is a single platform to automate business processes across the enterprise by providing the infrastructure needed to develop, run and manage applications. It is a single data model which is built on a flexible table schema and delivers a common set of core capabilities and reusable components. ServiceNow Platform has a multi-instance architecture rather than multi-tenant architecture, which is used by other cloud companies. In multi-tenant, your data is co-mingled with other customers on databases. These large and complex databases that require hardware and software maintenance on a regular basis, which can lead to availability issues for customers. These cloud companies have to take any action that affects this multi-tenant database and affects all other customers whose data is residing on that database infrastructure. ServiceNow Cloud is built on an advanced architecture called multi-instances. In this architecture, your organization's data, applications and customizations reside in a unique software stack called an instance. Your organization may have more than one instance. Each instance is isolated from every other instance, but they can still communicate with each other. ServiceNow provides high advanced availability data centers. In any situation, there is an operational failure or outage. Your instance traffic can be quickly rerouted to redundant servers to provide continuous availability. ServiceNow provides four weekly full backups of your data with six days of different daily backups. This is multi-tenant architecture in which all three companies have shared app infra of the service provider. And this is multi-instance architecture, which is provided by ServiceNow in which every organization has their own instance whose maintenance will be different from others. Backup It is very important to know how ServiceNow makes sure that they are taking the right backup of your instances. As I mentioned earlier, ServiceNow provides four weekly full backup of your data and six days of daily differential backups. We need backup as it might happen that you can break something in your instance and ServiceNow can restore everything back in your instance with the help of backup. This backup is also used in cloning activity as lower instances are copied from production instances. You can see on the screen we have main instance and you have backup instance. Security ServiceNow can also be integrated with single sign-on services that are compliant with SAML 2.0 standard. You can further secure your applications and fields using role-based access, which we will learn later. Platform Interface Ways of interacting with ServiceNow ServiceNow provides three ways to interact with the platform. User Interface, which is also called as native UI. ServiceNow Mobile Apps, which are mobile applications to access ServiceNow platform and its features from mobile. And last is Service Portal, which is a kind of advanced UI for ServiceNow platform. All of these interfaces access the same single system of record and common data model of the ServiceNow platform. Example, you have one instance, one ServiceNow instance. Now all these interfaces can access the same instance with the same data. Native UI. This is the native UI of ServiceNow. Native UI is the main way to interact with the applications and information in ServiceNow instance. ServiceNow platform user interface features include real-time form updates, user presence, enhanced activity streams, and an application navigator designed with tabs for favorites and history. This is my ServiceNow personal developer instance. I have got this instance from ServiceNow free as they provide demo instances for admins and developers to practice practically in ServiceNow. And this is the native UI. Supported browsers. ServiceNow supports most of the major browsers like Chrome, Microsoft Edge, Firefox, and Apple Safari. If I can talk about my personal experience, then Chrome and Safari are the best. Mobile apps. ServiceNow offers three different mobile applications. ServiceNow Agent, Now Mobile, and ServiceNow Onboarding. ServiceNow administrators can configure these applications as per the business requirement. These applications help employees and users working in ServiceNow to work more efficiently and productively on the go. ServiceNow Agent app is developed for agents working in ServiceNow as a fulfiller so that they can access the request raised by different users and respond to them quickly. Now Mobile targets employees and users who request different services in ServiceNow. ServiceNow Onboarding app is developed for managing new hires. It helps to facilitate the tasks required to be done before employees start in the organization. Users can download these applications from the app store of iOS and Android. Service Portal. Service Portal provides a user-friendly self-service experience. It is an advanced UI of ServiceNow platform which provides access to specific features by using different widgets which can be customized and developed by ServiceNow developers. Users can search knowledge articles, request for any service, and much more on ServicePortal. You can open ServiceNow Portal by adding SP in the URL. So after domain name of ServiceNow, if you add SP slash SP, press enter, you will be able to see Service Portal which is an advanced UI. Now here users can search anything like Outlook. So they can search for any information they are looking for. They can also access the catalog that means they can request something directly from ServicePortal. They can see their own request. If they have raised some incidents or request in ServiceNow platform, they can see them. You can also go to home from here. So here you can click and request for any service. You can search for knowledge base. You can get some help and you can just go for the community. These are the different links which users can access. Now these features, now these options are available as for the access given to the user. And you can see we have a lot of other options on the top. So this is ServicePortal interface. Supported authentication. ServiceNow can support different types of user authentication. First is local database in which user and password is saved in ServiceNow instance in the related user record. And user needs to put username and the password on welcome screen which I just showed you earlier. The next supported authentication is single sign-on in which the user is authenticated with details provided by identity provider. For example, you have Okta which is an identity provider which you can configure in ServiceNow and user has to log in via single sign-on. Then we have LDAP in which user is authenticated via lightweight active directory account. OAuth 2.0 which is also supported and it's an open authentication. And it is authenticated by a client ID and secret. A client ID and secret is provided by ServiceNow to the consumer. However, consumer will hit ServiceNow in order to authenticate. He will send client ID and secret. And ServiceNow will identify the user and will authenticate with the help of OAuth client ID and secret. Digest token. Related username and password in the form of a token is also supported and that is digest token. Lastly, we have multi-factor in which authentication is done via an OTP code provided by Google Authenticator. Role-based access. Once you are logged in into ServiceNow, the next level of access is based on the roles provided to the users. These roles are assigned to the users on the basis of their functions responsibility. As an example, ITIL, admin, knowledge admin, approver. The information which can be accessed by the user is based on these roles. This ensures that people have access to the information which they are allowed to access. It is very important to protect sensitive data. Components. In order to understand how role-based access works in the platform, it is important to first understand its components. User. A user is an individual that has been granted access to your ServiceNow instance. Group. A group is a set of users who are part of the same team or may share same responsibility. Members of groups perform similar tasks or need access to similar information for various purposes in the platform such as approving change request, resolving incidents, receiving email notifications or administering the service catalog. Users working in ServiceNow are typically assigned to one or more groups. Role. A role is a collection of permissions which can be assigned to a group so that whole group members can have the same access related to that role in ServiceNow platform. Example ITIL, Admin, etc. ServiceNow has an out-of-the-box user table which stores data of users. In Application Navigator, go to Users module. Under System Security, maybe under System Administration, you will find Users. If you will click here, you will see all the users of your ServiceNow instance. Let's open one of the user record, maybe this one. You can see the details of the user and the local database which we were talking about, that is this one. So here I have the user ID and here I have password. Once I will set the password and user ID for a particular user, user can log in with the help of that username and the password if he can see that welcome screen. ServiceNow also has an out-of-the-box group table which stores the data of different groups of teams in the organization. In the Application Navigator, you need to type groups and at the bottom, you will see under System Security or maybe under User Administration, you will see groups. Once you will click on groups, you will see the list of groups available in your instance. Now as of now, these are out-of-the-box groups. When I say out-of-the-box, OOB, that means that particular feature element is already provided by ServiceNow. Nobody has created it manually. ServiceNow has given the ready instance to you. Whatever comes with ServiceNow platform, that is out-of-the-box. So here you have list of groups. Let's open one of the group record. The name of the group is Application Development. Here is the manager and here are the details of this particular group. Now at the bottom, you can see we have some details, more details about this group. That means here you have roles. So if you want to provide some access to this particular group, you can add roles. Here we have group membership. That means in this particular group, you have these six members. Now this is what group is. Here we have groups. If you have any child groups under this particular group, you can also assign skills and any locations. So these are the details related to a group. Then we have roles, which is also an out-of-the-box table of ServiceNow, which stores different roles, which can be assigned to different users and is created for different types of access in the system. For roles, you can again go to system security. Under system security, you will see roles module. Click on that module. You will see the list of roles available in your system. Now, as of now, I have not done any customization. So these 336 roles are out-of-the-box roles. Let's open one of the roles, maybe admin one. When you will click on that particular role, you will be able to see details of the role. Here the name of the role, and it says about the description that this is system administrator role. This role has access to all system features, functions, data, regardless of security constraint. Here you can see what roles this particular role contains. You can see here what applications we have assigned this role to, then what modules, custom tables, subscribed users. Here are some other information which you can see just to see the details of the roles, that what additional elements, what additional functionalities have been assigned to this particular role. Roles assigned to a group. Once you are done with defining a role with relevant permissions, it can be assigned to a group or user. As a best practice, you should always add roles to groups rather than individual users, which will be easy from a maintenance perspective. As an example, you have X group, where we have added two roles, role X and role Y. Role X might have different permissions, like permission one, permission two, permission three. And role Y can have different permissions too, like permission one, again permission two. In that case, X group, the members of X group will have all these five permissions. And the reason behind it, because you have added these two roles in the group. So even if you add 100 group members into this X group, all those 100 members will have all these five permissions. So in that case, it is pretty much easy to maintain the groups and roles. And if you don't want to give access to any particular person, or maybe five people, let's say an example. In that case, you just need to remove those five people from X group. In that case, all these five permissions will be removed as well. Otherwise, if you will add individual roles to individual users, then you have to remove the roles separately from all five users individually. And that's pretty much, I would say, not good from maintenance perspective. Base system roles. ServiceNow comes with baseline roles for out of the box applications and features. As an example, admin role, which will provide you the access for the whole platform. And this role is basically added to all the administrators and developers of ServiceNow instances. Then we have approver underscore user. That is also one of the type of role which provides access to approve the tasks. Title role, which provides read and write access to ITSM applications like incident, change and problem. Catalog underscore admin, which provides access to manage service catalog and many more roles. Users can still log in into ServiceNow even if they don't have any role assigned to them and access some of the applications and elements like homepage, raising of incident and request, accessing the service catalog. These users are also called as self-service users. ServiceNow has one of the major features that is impersonate. That means you can get the view of any user if you have proper rights. As I have admin access, I'm going to impersonate a user who does not have any role. So let me search for that user first. Or maybe let me create it. So we will go to user table. So I'm going to users module. And here I have new button. So let me create a new user. I'm clicking on new. And here I will give the ID, which is demo user. First name I can give demo, last name I can give user. I don't have to fill other details. Password if I want for now. So I will give demo. Maybe I will just, I won't say that password. But I will just give a random password for now. And I'm going to save this. Now I'm not going to give any role to this particular user. And this user has not been added to any group as well. As you can see at the bottom, we have groups and roles. So no roles, no groups as of now. What I'm going to do, I'm going to impersonate this user. But before that, let me show you, because I have logged in as an admin. I can see all these applications. Almost all the applications where I have access to as an administrator. Now I will impersonate. To impersonate, you need to click on your profile. And here you will find these options. Now one of the options is impersonate user. Click on impersonate. Here it will ask you to search for the users. Now I can search, maybe I will type demo. Here is the user. It is showing its first name, last name, and also the user ID. So I will click here. And now this will show me the view that how that user will really see it. So you can see. Now in the left hand side, do you think I have same application? The answer is no. So you can see I have different dashboard here. I cannot change the dashboard here. Because I don't have any role into my account. I have just these few applications which are basically allowed me, allowed to see. So I can quickly see these applications. However, I cannot access anything else. So this is what a self-service user is. Now let me show you an ITIL user who has pretty much more access than self-service user. So I will click here. Rather than end impersonation, I will click on impersonate user. And I will search for ITIL. This should be an ITIL user. So I do have an ITIL user here. I will click on that. Now this time it will impersonate ITIL user which I have in my ServiceNow instance. And you can see the access is pretty much different what we had in self-service user where we didn't have a single role into that particular account. But here because it's an ITIL user, so he has ITIL role in his account. So in that case, I have access to more modules. You can see pretty much more modules. I have access to these applications as well like incident change, problem, configuration and many more. I have access to this different homepages as well. And here you can see I can select as well. There self-service user does not have that option. But he can select any homepage. But we have this functionality available for ITIL user. So this is how access level varies in different users' account. If it is a self-service user, if it is a ITIL user, the access level, the visibility of the modules and applications and homepage will be different from others' users. User interface, in this section, we will learn about elements of ServiceNow UI, how role-based access works, application navigator, favorites and navigation. User interface, when you access ServiceNow URL, then you get ServiceNow login screen where you need to enter username and the password. Once you log in, you will see the native interface of ServiceNow. This native interface shows different elements and functionalities. Here is my instance URL. And this is welcome screen. Let's log in to my personal developer instance. I will put username and password. Click on login. Now, as of now, I have logged in as an admin. And I'm able to see all the applications of the platform which are allowed for admins. So you can see in the left-hand side, I'm able to see almost all the applications wherever allowed for admins. ServiceNow UI version. ServiceNow has two UI versions, UI 16 and UI 15. Users can switch between these two versions as per their personal choice. Let me show you in my personal developer instance. In order to switch between these two versions, you can click on the settings on the right top, and then you will see a pop-up. On the right top of this pop-up, you will see switch to UI 15 button. When you will click this button, you will be able to change the UI version. And this version will be changed to UI 15. This is UI 15. Now, you can also change back to UI 16 with the same options. You have to click on settings. You will see this option switch to UI 16. Once you will click that, you will go back to UI 16. Now it depends on the user what kind of UI you want to work upon. So if you like UI 16, you can work on UI 16. If user wants to work on UI 15, they can work on UI 15 as well. UI elements. ServiceNow's main screen is divided into four UI elements. Banner frame, which appears at the top of every page and contains the logo, user menu, system settings, and global search. Application navigator, which provides easy access to applications and modules of ServiceNow instance. Third is content frame, which shows the information of application or module selected. You will see form, list, and other pages in content frame. So this is how the screen is divided into different elements. There is one more element, and that is the fourth element of ServiceNow UI. That is called edge. However, it is not visible in UI 16, and it is available in UI 15. So in UI 15, you still have all other three elements. However, there is an additional element that is called edge. Let's see the components of banner frame. On the left top, you have company logo and name of the instance. As an example, you can see here we have ServiceNow logo, and the name of the instance is service management. On the right top, we have user menu. Once you will click on user menu, you will see more options like profile, which shows the details about the user. Then you have impersonate user, which enables other user view. Then we have elevate roles, which will elevate the role for logged in user. And the last option is log out. Now beside user menu, you also have global search icon. If you want to do any kind of search on the platform, you can do with the help of this global search icon. Then we have chat, help, and settings. Application navigator. Application navigator is at the left-hand side of the screen. You can navigate to different applications and modules in ServiceNow. Application navigator elements. Application navigator has also three different elements. First is all applications tab, where you can navigate all applications available to the user as per the access. Then we have favorites tab, which shows all the applications and modules marked as favorite via star button beside the applications and modules. And last we have history tab, which shows the items which we have recently visited. That means the logged in user, whatever items, whatever elements he has visited recently, those things will be visible in history tab. This is my personal developer instance. On the top, you have banner frame. Here we have application navigator. And here we have content frame. The edge is not available in UI 16, as I mentioned. So in order to see the edge, you have to go to UI 15 version. So I will click on switch to UI 15. And I will show you what is edge element. So you can see here. So in this particular version, we do have banner frame, we do have application navigator, we do have content frame. However, there is an additional element and that is called edge here. So this is the difference between UI 15 and UI 16. Let's go back to UI 16. On the banner frame, you have logo, then you have name of the instance. Here it's for developers, which you want to enable the option. I can also disable these options. So I need to go to developer option here and I can just disable them. As you can see, whenever I'm disabling them, it is getting disappeared from here. So I can just enable this as of now. I will close this. Here I have user menu. So if you will click this button, you will see your profile, impersonate user option, elevate roles and logout. If I will click on profile, I should be able to profile the user profile for the logged in user. So you can see as of now, my profile is system administrator and that is what you can see here. Now the view is self-service view. There are more details which we will talk about later. But as of now, if you are just an end user, so these are the details which you can see as part of your profile in ServiceNow. Then you have some other options like impersonate user. Then we have elevate roles. If you will click this button, you can elevate the role you have. Normally, security admin is the role which is basically added as part of the elevation of the role. Then you can cancel this one. If you will select this and click on OK, then your session will have that security admin role as well. But I will not do anything for now. You will learn it later. And then we have global search. Once you will click this search button, it will expand and then you can type something if you want to search. So as of now, I'm just typing knowledge. I will press enter. When you will press enter, it will try to search in the whole platform, the keyword which you are typing in the global search. You can see here it is trying to search all the tables you have in your system. And then it will show you the results. Now the results which you are getting right now, because I am logged in as an admin, so I can see a lot of information. However, if you are just logged in as an end user, maybe an idle user, in that case, you will be able to see the search results as per the access you have, the tables access you have in ServiceNow system. Then we have chat option. Here you can chat with different users of the organization. So if they are in ServiceNow, they can do chat as well. Then you have one help icon, and then we have settings, where you have different settings. And settings are like general settings. You can change the theme of this instance as well. So these are some themes which are provided by ServiceNow out of the box. And then we have some accessibility options. Then there are some configurations for list. You can do some configurations for forms, notifications as well. You can manage your notifications from here as well. And then it is for developers. So if you have admin access, basically this is for developers. You can see here, you can change some settings, which we will learn later as part of our development section. In the left-hand side, you have application navigator. Now what are its features? So here you have filter navigator. That means if you will type here for any application, it will automatically be displayed. So it will try to search for that, and it will show you all the relevant results here. So as of now, you can see I typed incident. So at the top, I also have incidents, because service desk application has one module that's called incidents. That's the reason you are able to see that in this particular view. And then you have incident itself, an application, and then some of other modules. That's how you can see different applications, and that's the reason we call it as application navigator. Now the second tab in application navigator we have, it's about favorites. How exactly you can tag these favorites? You go here. Now whatever applications you have here. So as of now, you can see I just have this one application or one module. I can just remove it for now. This is how you remove it basically. Now if I want to maybe make this particular application as a favorite, I can do one thing. I could directly tag this whole application, or maybe I want to make just one module as a favorite. I can also do that. So at the top, this is application. Under that, you have these modules. So I can just click this. Once you will click that, you can see it has already selected both the modules under this application. So if you will go to your favorites tab now, and you will see this guided setup is already there. So this is how you can tag or just mention some favorite applications which you normally work upon, maybe daily. So in that case, you can just tag them as favorite, and they will be displayed here. The last tab we have is history. Now this is automatic. So whatever applications, whatever data, whatever records you are viewing in ServiceNow, that history has been basically is being recorded, and you can see those contents here. So for example, you can see it says nine days ago, ten days ago. So I think it tracks, I think from last ten days, you can change that as well. So as of now, you saw maybe you saw this user. So if you remember, we were seeing this profile. So that's the reason it already got captured as part of the history. But that's the reason history is pretty much important. So if you are working daily or for a day, you want to just remember what all options you have selected, you can just quickly go with that. And you don't have to search from here because you might get those details in the history section, because you might have searched or used or clicked on that kind of module or applications. Users navigate to applications and modules to use them to see the content, what exactly they have to utilize the functionalities. So in that case, if I will go here, let's say I have this incident application. Now under incident application, I have different modules. So if I click this button, which is called create new module, so I'm able to create a new incident record. So that's how this application and modules are used as part of this application navigator. So whenever you are creating something in ServiceNow, you have to provide those functionalities, those elements via application navigator so that people, users can search for those applications and modules and utilize them. Branding overview. Branding is something you need to configure your instance to identify as per your company. Let me show you in my personal developer instance. This is my personal developer instance. If you're working for an organization, then how would you know that ServiceNow instance is associated with your company? You should have logo and instance name so that you can recognize your company's instance. Maybe the color theme as well. So branding can be done in ServiceNow in various ways. Let me show you how exactly you can do this configuration for changing the branding for your ServiceNow instances. In order to do this branding, you need to go to UI 16 configuration. For that, just type UI 16 in filter application navigator, and you will see this module under system properties that is basic configuration UI 16. Once you will click that module, you will see the configuration, the branding for UI 16 version of your instance. You can see here we have this image, banner image, which is showing here. And then you have the name that is service management. Now as of now, you can see it says SaaSNow, but let me just change it quickly. It says SaaSNow system, maybe. And I will go a little bit bottom. Here I have this save button. Now you also have some other configurations for color, background, how exactly the date would be the date format, time format. That is something you can do here. And then I am going to click on save. Once you will click on save, you will see you have this SaaSNow system. I can change this again if I type, and ideally you can see, even if I'm not saving it, it is automatically picking it up. So I'm just doing SaaSNow demo system, and I am just clicking save now. And now you can see I have SaaSNow demo system. Now I can also change this banner image. I just need to click this plus button. Once I will click this plus button, it will take you to your system directory, that means your computer directory, and then you can add any image you want. I'm not adding any image for now because I just want to show you that how exactly you can change this configuration. So this is how you do branding. Now you can also change some more settings, some more configurations, like welcome page configuration. So I will show you that. But before that, let me change those. So you can do that with the help of welcome page content. So you will click this button. This is the module. It says system UI. So under system UI, you have this welcome page content, and you will find some kind of configurations over here. So for example, if I click on more information, here you have short description, more information, and then you have some links here, can be found here. You can change this text as well. So if I go back, then I have login. So here it says you are not currently logged in, so view is restricted, public. So if you want to, as of now it is not active. Now which one is active? So only these three are active. So if I click here, about, here you can see it's about the instance. As of now it says service now is changing the way people work. The whole statement is there. Now I can change this. How? I will just maybe, let's say I'm making it fast now. So because it is your instance, if you want to change it for your end users, you can do that. So I'm putting fast now for now, and I'm just clicking on save. So this is save, and I will show you where exactly it will replicate. So for that, I need to log out from service now. Once I will log out, you will see that keyword which I changed. You can see we have this fast now here. Maybe it was service now, but I can change this as well. So this is about welcome page settings. So if you want to change the configuration, some settings for welcome page, you can also do that with the help of those modules I just showed you. So the overall branding you can change as per your business requirement, as per your company's requirement. List and filters. In this section, we will learn about lists, component of list, list personalization, filters, and list search. List. A list displays the record from a data table, such as the incident, problem, or user table. List elements. They are different elements of list. Starting with main list, which shows the list of records in a table, like incident table records in a list. Title bar, which is at the top of the list. Filters, which is used to put condition and filter the data displayed in the list of table records. Breadcrumbs, which is created when you add different filter conditions and shows what conditions are selected. And that's called breadcrumbs. Column and field, which is the field of the table where data is stored for a table record. As you can see, we have number field selected. It's a column and it's a field as well, where the number of the record is being stored. List title menu, which shows some options to manage the list, like view filters, which allows you to select the filter created, grouping of data as per the field. So you have group by, then you have show, in which you can select number of records, that how many number of records you want to display to the user on the same screen. And then you have a refresh list. So for example, if you are changing something in your list and you want to refresh the list, maybe you want to display the data, in that case you can refresh the list as well. And then last option you have is create favorite. Once you will apply the filter, once you will apply the condition for the filtering the data, then you can also create the favorite for that particular data which is being displayed. List context menu. Now this shows more options which can be used for different functionalities. So when you left click on the title bar, then you will get this option where you can see different functionalities. Like you can sort the data, you can show visual task board. It will take you to the different functionalities. You can convert this list into a bar chart as well, into a pie chart as well. You can export the data into Excel, into some other extensions. You can also import some data into the same list you have. You can update all the data which are being displayed on this screen. You can import XML data and you can also see the XML data if you want to see that. So whatever data is being displayed in your list, you can perform all these functionalities as per your requirement. Let me show you the list and filters for incident management application. That means I will show you the list and filters for incident records. For that we need to go to incident application and I will type incident. And here you have this application incident. Now how exactly you can see the list? In order to see the list, you might have some modules which will automatically show you the list for incident records. So if you will click this button, this particular module open. So starting with this, create new, this will create a new incident. So this will not show you the list, this will show you the form. So then you have assigned to me. Now this is out of the box. ServiceNow has already provided you these modules. If you want to add your modules, you can do that as per your filter conditions. Now what is the difference? So if you will see here, assigned to me. Now as of now, this particular list is blank. The reason behind it, because there is a condition mentioned over here, assigned to system administrator. Now I have logged in as a system administrator. However, I don't have any ticket assigned to me. That's the reason this particular list is empty. However, if I will go to the next module, where condition has been changed and you can see here, it only shows active equal to true. That means all the incidents which are active right now. And that's the reason you can see all this list. Here you have 48 records. Now how exactly you can change this list? Now you can change this list with the help of condition. So what I will do, I will just click on directly this particular condition. So it is also populating something. You can see it says, click to remove subsequent condition. That means whatever conditions are there are mentioned after this condition, they will automatically be removed and the data will be shown as per this current selection. So I will click this all. That means it will show all the incident records of your instance, regardless whether it is assigned to you or somebody else. So this is how you can change the filter. Now as of now, you can see you have 75 records. However, the system is showing you on the screen in this particular page, only 20 records. How can you change this? This option can be changed with the help of list control, where you will click on that. You will see this option called show. Once you will put your mouse over that, it will show some more options. For this page, how many records you want to select, whether you want to see 10 records per page, 15, 20, as of now 20 is selected. That is the reason you are getting 20 records. But if you will select 100 rows, then as of now, all 75 records will be displayed to you in just one page. And I have clicked on that and you can see it says 1 to 75 out of 75 on this one page. This page, you have to scroll it down, but the max limit is 100. That is what ServiceNow has given. So this is the main list which we were talking about. And the two other options which you have, that is one is list control, where you will see different options. And then you have this context menu, list context menu, and you will see some more options. Now as of now, this is the list, we have this filter option. Now when you click this filter, you will get an opportunity, you will get an option to apply the condition. So you can see here you can apply the condition. So for example, I want to go for maybe caller is. So here I am selecting the object, then I will put what kind of operator I want to use. So maybe I will use is for now, and then I will select Fred Ludi. So I want to see wherever caller is Fred Ludi. That means all the incidents where caller is Fred Ludi, I should be able to see that data in this particular page. So what I need to do, I will, I have to click on this run. Now if you will not click on run, then it won't display the record for you. So here you have to click on run, and then it will run the filter and then display the records as for the condition you have mentioned here. Now this is called breadcrumb, the one which you were talking about. Here you can add more filters. So let's see, maybe we can add and where caller is Fred Ludi, and then I will put priority, maybe priority is one. So I will select critical, and then I will apply it again. So I will run this. Now once this is run, you can see we have this four incidents in the list, where priority is one and caller is Fred Ludi. In this case, you can see here as well. So we have caller Fred Ludi, and priority is one. So for any list, whatever data you are seeing, you should always see first filter condition that what exactly condition has been applied, and then you can change it. Now this condition and filter is basically also on based on the access. So if you really want to put some constraint, you can.The user should not put any kind of condition here or should not edit this condition. You can also do that as an administrator. So I can expand this as well. And this is called breadcrumb. Now let's see more options which we have on this control and list context menu. So here I click here. I can see view. Now this is kind of a view. In ServiceNow, you can create different views as per your use case. Here you can see that I have default view, major incidents view, mobile view. Now how that view is important. Now view is important because the data which you are seeing, the fields which you are seeing, it might happen that as per the view, you might want to change these views. That means maybe for major incidents, you want to add one more field or maybe you don't want to show all these fields, all these columns. So it's totally up to you. Similarly, as a list, we also have this view on form as well. Then we have filters. Now you can create your own filters as well. That means you can save them because as of now, it is just live filters. You are just applying it, running it and that's it. But these filters are not getting saved. Now as a user, you might be working on a particular filter almost daily. In that situation, you don't want to apply that filter every day. So what you will do in that case, you will save that filter. So as of now, you can see I have mentioned Fred Ludi and Juan. What I will do, I will click this button, save. Once you will click this button, save, you will see an option save as. That means it will ask you to provide a name. So maybe I will do test. And then here you have an option that's called visible to. So you can also share this list. That means this favorite with other people as well, other users as well, maybe your colleague. So in this case, as of now, you can make it visible to me, everyone, or you want to share this list with a whole group or something. In that case, as of now, I'm just keeping me. So I will save this. Once you will save this, it will give you the option. Yes, yes, it is saved now. Now how exactly you can, you can select the same filter. So in that case, I will show you I'm selecting this all. That means this particular list is showing you all the incident records. Now how can you go and apply your saved filter? In that case, you will click here, go to filters. Now here at the bottom, you will see you have this your saved filter, just click on it, filter will automatically be applied. Whatever condition you mentioned while saving your filter, it will be displayed here. So now you can see you are getting the same incidents which you were getting before. This is how a user a user can save the filters. And you can create multiple filters as per the user you want. Then you have group by. Now as of now, you are seeing this data without grouping. Now if you want to group this data, maybe with the state, then how many how many records you have for on hold, closed or in progress. In that case, there are two options for this. One is you can do it directly from here, you can select the field. Another option you have, you can directly click on that column, that field, right click. And here you will automatically see the option called group by state automatically you don't have if I click on here, it will show me group by priority. So I'm doing it right now for state I'm clicking this. Once you will click that you can see the list of data has been changed. Now here you you're seeing the data as per the states you have. It has grouped the list of records you have on your screen. So this is how you can do for other fields as well as for your requirement. So for example, you want to see the data you want to filter them and see how many of records you have for a particular category, maybe for a particular state. This is how you can you can apply this grouping and then you will get that data accordingly. And the next is refresh list where you can it can refresh the list. So maybe for example, you're changing something on the form and you want to just refresh the list whether that has been applied or not. In that case, you can refresh the list. And the last is favorite. Now similarly as you added this added this filter, you can also create it as a favorite. How can we do that? Let me show you. So I will click on favorite. Now this pop up will be displayed. Here I can put incidents or maybe test. This is quite different. I can also give a color here and maybe I can also give an icon if I want. So as of now I can just keep it simple. I will click on done. Now once you will click on done, where exactly you will see this favorite. So if you remember, we learned about application navigator. In application navigator, you have second element where you can see all the favorites. So if you will click here and you can see the favorite which I just created and I will show you quickly. So as of now it is displaying all 75 records. But if I click this favorite, you can see it is showing the same favorite which we just saved. So that's how user can create favorites as well and utilize it for daily purpose. Now the next thing we have is list context menu. So here you have different options. You can sort this. So for example, A to Z as for the field you are selecting. So if you will select short description, so it will sort the data, sort the list alphabetically. Then you have ungroup option as well. If you want to ungroup, you can do that. If you want to group it by short description, that is also you can do. Then you have bar chart. So you can create the chart directly from here. So for example, if you will click this option, it will take you to the bar chart option. That means whatever data you had, it will try to create a report but into bar chart. You can see that now it will try to create a bar chart for you. Done. But as for the data you have selected. Let's go back. Let's ungroup it. I'm going to ungroup it and see the options. Then we have pie chart option as well. Now the next option we have is configure. Now this is for ServiceNow administrators and developers. So if you want to change anything in your list, which we will learn later that how exactly you can configure your list and your forms. But as of now, you can see we have this option. You also have other options like all tables, security rules, business rules. These are some other development options which you can utilize. Now here we have list control. We have list layout. Now layout is something the data which you are seeing here, the fields which you are seeing here. So if you will click there and go to list layout, you can change this layout as well. So for example, you want to remove this category for now or maybe this updated and updated by as well. And as of now, you also have this view. So I'm doing it for default view. I will click on save. Suppose you will click on save, you will see the data which we just removed is not being visible here. That's how you change the list layout. Now you can go configure again. You have some list calculation. Now this is for any kind of calculation. Maybe you have some data where you want to calculate something. That is something you can do. Then we have list control. Now list control is something about the accessibility and visibility of the buttons and all. So if you will click on this list control, you will see that option. Now here you will see some other options here like new roles. That means what roles should be able to see new button for this particular list. That's what you can see here. Edit roles, filter roles, what people, what kind of people, what kind of users can apply the filters. That is what you can do here. Then you have edit as well, what users can edit option for this particular list. That is something you can do here. Now if you want to omit filters, that means users should not be able to see the filter. That is something you can do here. There are some other options as well which we will learn later because these are some more options for list control. So let's go back to our list. Then we have import. So if you want to import some data into your list, you can do with this particular option. You can also export the data as well from this particular list and you have some more options here like Excel, CSV, XML, JSON, PDF. Now these are some extensions which you can use for export of this list. Then we have update selected. Now this option is something if you want to update any particular record or maybe multiple records that is something you can do with the help of this. For example, if I check these box and I right click here and I go to update selected, I can update a particular record. It will be updated both records. So if I click on update selected. So here it will show you what exactly you want to change. So let's see maybe I will change impact and urgency and I will make it one and I will update this. Ideally, this won't work because there is a pattern which works for impact and urgency. So I just clicked on update and it is trying to update that. You can see those two records were updated and that's the reason now I'm not able to see them in my list because priority is not critical because priority always it's driven by urgency and impact. And that's the reason priority didn't become critical and that's the reason it is not displayed on this particular list. When I go this option, you have update all. So for the same way, if you want to update all the records you have on the screen, that is something you can do. You can import the XML data as well. And you can also if you want to see the XML data that you can do as well. So for example, if I click on show XML, now this is the XML of your list. The data which you have on this particular screen. Now XML won't show you just these fields or these columns. It will show you the whole data you have for this particular record. That means whatever two records which you're seeing here, it will be showing you all the fields in that XML. Users can also perform searching in ServiceNow list. There are two options. One is on the top, you have the search option where you will see different fields as of now selected in this view. And you can search for any keyword for that particular field you want. Another option we have directly just below the field, we have the search option as well. This can be enabled and disabled with the help of the search icon. If you want to perform any searching, you can just type anything in this particular field. And if you type here, press enter, search will happen. But one of the important things for this searching is when you will press enter. Now this particular searching will automatically be added as part of the condition of your filter. And you can see it says short description starts with ATF. Users can also personalize the list. Even if developer or administrator provides a default list view with specific fields, users should have some options so that they can personalize this list. And that option is from here, this settings button. When you will click here, you will see this option, it says personalized list columns. As a user for your view, you want to add any field which is not in default list, you can add that as well. So as an example, I have added child incidents and category. If I click OK, these two fields will be displayed on this view as well. We can see child incidents and category is added. So this is how you work on list and filters. Forms In this section, we will learn about how forms shows data from the table, component of form, form personalization, form customization, form templates. Forms A form displays information from one record in a data table. As an example, you can see that we have this record which is showing details of the problem record from the problem table. Users can edit, create specific records as per the access they have in the system. Form elements Form also has different elements. Content frame, which is the main section where details of a record are displayed. Form title, where you see the information about record and buttons of the form. Form menu, which shows some menu options to perform some functionalities and configure the form. Form buttons, which are also called UI actions, which can be utilized to perform some action on the form. Let's understand about forms in more details in my personal developer instance. I will show you the forms related to incident management application, which means you will see forms of incident records. I will open a random record of incident table. This is the form which shows details about a record of incident table. These are the fields which users can provide input while creating or updating the record on the form. Let's create a new record for incident. We have an out of the box module. Create new under incident application. Click this module. It will show a new form. Once user will provide the input and save the form, record will be created and stored in incident table. I am putting the value in color field as AbleTutor and then short description. You will see the submit button on the top, which will save the record. You also have another option, so if you right click on the top, that means in title bar of the form, you will see this one more option that is save button. Now what is the difference between this submit button and save? I will show you quickly. I will just copy this short description. If you will click this submit button, it will save the record. However, form will be disappeared and you will go to the back same screen which you had earlier. Now let me click on create new again. Fill the data, so I am putting color again and maybe 1, 2, 3. Now this time I will click on save rather than submit button. If you will click on save, you see the difference now that form is still there. So record is inserted. The data has been inserted into service now table, however, page is still there. That means page remains there. So that's the difference between save and submit. There are two other important elements on a form. Mandatory fields and read only fields. So let me click create new again. You will see these two fields. They are quite different from other fields because they don't have asterisk, red asterisk on them. And that's the reason these two fields are different. Wherever you see these red asterisk, those fields are called mandatory fields. Mandatory fields are required to be filled by the user to submit or save the record in the table. Then you have read only fields. One of the read only field is like this priority field, which user cannot edit. So read only fields are non editable fields which cannot be edited by the user on the form. So while creating a new form or for any form like incident change problem, you might get requirement from your customers that they have to put some of the fields, they have to make some of the fields read only so that users cannot edit them. It might happen that to edit them, they can add some condition as well. Forms can also have fields like choice fields. Like you can see here, we have impact where users can select the value from drop down option. Forms also have reference fields like caller, configuration item, service, assignment group, assigned to. Now these fields are the fields which shows the value stored in different table. So basically you can select the caller. However, the data which you can select on this particular field is basically in a different table. Now in this case for a caller field, it is basically showing you the data from users table of service now. So I can select any user I want in a reference field. So I can fill test demo 1234. I can click here save. Now once you will save this record, you will see more buttons and you will also see more options. So you can see now buttons got changed. You had some different buttons like submit and resolve. But after saving, you got more buttons and you also got update, create security incident and you also got delete button. And if I talk about options, so on the title of the form, when you right click here, if you remember while creating a new record on a new form, you just had few options on this particular menu. But now you have a lot of options where you can select. Here you have save, you have copy incident. That means you can also copy this incident record. So this particular incident record is already created. And if you want to copy this, you can do that. You have some other buttons like create problem, create request. Then you have configure form design as well. View show XML history, reload form. If you want to reload the form, you can also do that. So these are different options. If you want to copy, you can click here. If you want to create problem, that is something you can do. Now once you have created this incident, you can also go for work notes and comments, which basically provide you the details related to the record by the users. So you will go to notes section. Here you can see we have these two fields, additional comments and another one I have work notes. You can type something here and then click on post. Now these comments and field activities, basically they will be captured in activities and this activity is called activity stream. So whatever changes you are doing, maybe you are changing the color, maybe you're changing the subcategory. If you have configured it to show it in the activity stream, it will be captured automatically. Maybe I'm selecting the assignment group as well. And let me save this record. Once you will save that, you will see that assigned to an incident state got captured. So this is really helpful for other users. They can at least see the timelines and what kind of activity was done. Form also has sections which are part of the form. However, some fields can be grouped in a bucket and they are displayed in a section. So these fields which you can see here, they are part of the form. However, they have been grouped in a bucket and then they have showed in a section. Like we have related records, you have resolution information and then you have this note section. Now at the very bottom of your form, you will find related list. Which show the related data from a different table to the current record. So if this particular table has some relationship with other tables, you can add multiple related list over here. And if this particular record is mentioned somewhere in other table, you might see those records here as well. Now the display of the fields of the form can be changed as per the view of the form, which is called view. So whatever fields you are seeing here right now, they are basically on default view. How exactly you check the view? So you click here and you will see this option view. As of now, this is default view. So it might happen depending on the kind of access maybe or depending on the kind of information you want to show. Like for example, the best example I can give you for major incidents. Now if any incident is kind of a major incident, it's a very prioritized incident. In that case, as a user of an organization, I need more information. So you can change the layout of the form depending on the kind of view you want. And that's totally up to you that how many views you want to create for any particular record in any particular table in ServiceNow. So you might get different requirements from your customers to create different views for a particular form. Form configuration. The fields and layout of the form can be configured. ServiceNow admins can perform this configuration. Overall, you can change the form design with two different options. One is form layout, in which you can create new views, new fields and adjust the layout of the form to be visible for the users. Next is form design, which is kind of an advanced way to create the field and adjust design on the form. You can also select the views via form design as well. You can configure the form layout by right click on the title bar of the form. You will see configure option. When you will put your mouse on configure, you will find these three top options. Form design, form layout, which we talked about the two options to change the design of the form. And the third one is related list, where you can configure your related list of the form as well. And there are some other development options and configuration options. So let's click on form layout. Once you will click on form layout, you will see this screen. The first section which you are seeing here, it's selection of the fields on the form. So what fields should be visible, should be displayed on the form can be configured with this section. In the left hand side, you have available fields. All the available which you can display on the form. Those are here. On the right hand side, you have selected fields. That means the fields which are already there on the form. You can also select the view from this particular option. So here you have view name. You can change the view as well. If you will change the view, this particular section will automatically update the data as well. So we will keep it default for now. And then you have sections. The bucket which you are talking about, you can also add the fields as per the sections as well you have on the form. Now what exactly you can do via form layout? Form layout gives you an option to create the field as well. You can change the layout. However, you can still add a new field of a specific type. So here you can see another section that's called create new field. So you can provide the name of the field. You can select the type of the field you want to create and you can select the field length as well. I will show you quickly one thing. So for example, if you're selecting reference field, if you will select the reference field, it will show you that which table you want to reference. That is something you can select here. If you want to go for choice field, it will ask you to provide the input for choices as well. You can have any other field like true or false. Then that particular field will be removed that option of reference table because this is just a checkbox. But that's how you can create a new field. You just need to type the name and just click on add. It will automatically be added. You can change the layout from here. So for example, impact and urgency, they were in right hand side. Now I can change that. I will put it at the top, maybe just below configuration item. You can see form is basically being split between two. So we have split the form. So now what I will do, I will just save this. I'm not creating any incident for now. So I'm just leaving this and I am just clicking on save. Once you will save that, you can see initially we had impact, urgency and priority on this side. Now we have on left hand side. So this is how you can change the form layout. And at the same time, you can also create new fields. And while creating the new fields, you can also mention where exactly you want to put them on the form. Even if you don't want to put them on the form, you just need to put them in the available section rather than selected section. So that they won't be visible on the form. So this was about form layout. Now you can also change the design of the form with another option that is form design. And that's kind of an advanced UI. So if I right click here, you will see this configure option. And then you have this form design. You click this button, it will open up in a new tab. It is loading. It is quite similar, the options, the functionalities are quite similar. However, as I mentioned, it looks it's kind of a design and it is also drag and drop. There you were keep on selecting them and putting them at the top. Here it's kind of just drag and drop. So for example, if I want these fields here, I can do that. I will just drag and drop. This is done and this is done. If I want to put them above, I can do that as well. So let me do that. Yep, it is done. So I have changed the design. Now you can also create new field from here as well. So here you have available fields. These are all selected fields. These are some formatters. Now here you have field types. So if you want to create a new field in form design mode, you just need to drag that type like this and that's it. As of now, I'm just canceling this and you can also provide the name. So if I put this here, I click here, I can give it a name as well. So you can give a name here, any name you want and I can just cancel. And if you want to make it mandatory and read only, you can directly do it from here. And then I can save it. So as of now, because I just changed the form layout, so I'm just clicking this button. If I click this button, it will save the layout and it is done. I can cancel this. Now you can see it is still here. So what exactly you have to do, you have to reload the form and you have this option over here and click this button and this form will be reloaded. And now you see that impact, urgency and priority are back to the same position which we had earlier. So this is how you utilize form layout and form design to configure the form. Another part is related list configuration. So right click here, go to configure and you will find this option related list. The important point is what exactly it will change. So this will change the bottom section you have here. So as of now you have task SLA and security incident. What I will do, I will go here into related list. Here you will have all the data, all the relationships you have in the available section and the selected part is here. What I will do, I will try to maybe just pull one or two related list in right hand side in selected section and I will just save it. Once you will save this, you will see at the bottom you have other two related list as well which you just added. So this is how you can configure a related list for a form. Let me also show you the configuration of a list. So let's go to a list, all open records, all open incidents basically. Now here you have an option of configure again and you have this list layout, list calculation and list control. Let me show you for list layout as well. So you have these fields available on the list. I might need assignment group or assigned to as well. If I click save, you will see that assignment group and assigned to has been added as well. While list layout, you must have seen that you can also create new fields. And even while list layout, it gives you an opportunity to create field as well. So this is how you can configure list as well. That whatever fields you want to see, whatever field you want to display to your users, you can do that with the help of list configuration. ServiceNow also provides a functionality in which users can create records with the help of templates. These templates can be created and defined with specific fields, with specific data into those fields. As an example, if you create similar kind of incidents every day with specific fields, same options, same values in the fields you have on incident form. So out of 20 fields, maybe you normally use same kind of values for 10 fields. That means you are creating them every day. In this case, ServiceNow gives you an opportunity, a functionality in which you can create a template for those 10 fields and create a new template. And then you can apply the template while creating a new record. You can create that template in the template section. So let me show you, you click create new button. Once you will click on this create new button, you will see this new form. On the top, you will see these three dots. Those are more options. If you click this, you will see this option called toggle template bar. When you say toggle template bar, when you click this button, you will see this bar will be displayed. As of now, this was not displayed. So you have to enable this option. As of now, you have two templates available. If you want to create new templates, you can also do that from here. But you already have that which you can create incident. It says incident call type. If I click this, you will see some of the fields which automatically be filled. It says incident call type template applied. And you can see it applies this particular value. So here we have contact type as self service. Initially, it was different. So let me reload it again. As of now, it says none. But when I will apply this template, the value will be paused automatically. So templates are pretty much important functionality in service now. So whenever you want to create some records every day, maybe frequently, in that case, you can utilize these templates. Service now also provides you the functionality in addition to this template that you can schedule these templates as well. That means if you want to create a specific record on a specific time every day with a specific field values, you can also do that. And that's called schedule templates. So that's how you utilize templates in service now. This is part 3.1, which is a knowledge check session. After learning couple of topics, you will find these kind of knowledge checks in your training. In this knowledge check, you will find 10 questions and you will get 10 seconds to think for the answer. And then answer will be displayed on the screen. Let's start with the first question. That is, which application is visible to the users with no roles in service now instance? Your time starts now. And answer is self-service. Let's go to next question. Edge is visible in UI 15 or UI 16. Your time starts now. Answer is UI 15. Next question we have is the primary way to access service now platform data and information. Platform native UI. Question number four, a role should be added to the user directly. Is it true or false? Your time starts now. False. Roles should be added to a group as a standard practice. Question number five. What is a role in service now? Your time starts. Collection of permissions. A role is a collection of permissions. Question number six. Name two baseline system roles. Your time starts now. Idle role and admin role. These are two baseline system roles in service now. Question number seven, where user profile is located? Banner frame. Question number eight. Which button saves the new record and close the form? Your time starts now. Submit button. Question number nine. Which button can copy the incident and creates a new incident record? Your time starts now. Copy incident button. You'll find this button on incident form. In the incident form menu, you will find this particular button. Question number 10, and this is the last question of this knowledge check session. What are two ways of doing form configuration? Your time starts. Form layout and form design. These are the two options by which you can do the form configurations. Task management. Service now is all about managing tasks. In this section, we will learn how service now platform helps you to get all those tasks done across the enterprise. We will learn about task assignment, how exactly you can collaborate to complete a task, how you can manage different tasks in service now. What is a task? A task is any record that can be assigned or completed by a user in service now. Users create tasks and are notified as the task moves along a workflow. Tasks can be assigned to a specific user or user groups. Task can be an incident record, a problem record or a request. Task is required to be created to track the action and progress for a work assigned to any particular team or individual. As an example, IT team has to resolve a user's computer issue. Another example, HR team has to onboard a new joiner. These are kind of tasks for specific teams. For which you need some kind of a record, some kind of a system which can track the progress of those tasks. Task workflow. Let's take an example. Tisha is an application support engineer of an organization. While working, her computer stopped working and she is worried about completion of work she has to do. She raised an incident for the issue she was getting. And that particular incident got assigned to IT team. And then once that incident was assigned to IT team, then it got routed to John, who is an IT specialist and work on those type of issues which Tisha was getting. So that was one of the issue which John basically resolved them. John started working on the issue and got the reason for the issue. That means he tried to troubleshoot the issue and he finally got what exactly the problem was. He resolved the issue of Tisha by taking the remote off of her computer. And finally, issue was resolved successfully. He changed the state of the incident to resolve in ServiceNow system. And finally, Tisha got an email from ServiceNow that her issue got resolved. And she was very happy with the kind of service she got. So this is what task management is about. So that you can track the progress of any work assigned to any individual or teams. Task Table. The task table is one of ServiceNow's core tables. Any table which is a type of task is mostly extended from task table like incident table, request table and change table. We have other tables as well, which are extended from task table like problem table, request item table. All these tables are basically kind of a task which has to be assigned to someone so the people can work on it. Functionalities associated with tasks. There are a lot of additional functionalities which are basically associated with the task like approvals, which is basically depend on the requirement. So a task can be assigned for an approval or multiple approvals, which can be generated manually or automatically as per the approval rules. ServiceNow provides a feature to use different types of approvals via workflow, which we will learn later. Assignments. Tasks are supposed to be assigned to someone so that somebody can work on those tasks and perform some actions as per the type of task. Now this assignment can be done manually or with the help of some automation or automatic rules, those are called assignment rules in ServiceNow. Now users need to make sure the task is assigned to the right team or individual. So even if you are doing automatically or you are doing manually, you have to make sure that even you are putting some rules for automatic assignment, that you are putting the right rules so that the ticket is assigned to the right teams. And the third additional functionality is SLA. Service Level Agreement. So SLA is basically used to track the services provided by any team working on a task. SLA highlights if duration of work completed is as per the agreed timelines or not, else SLA will be treated as breached. As an example, if database team needs to resolve priority one issues in one hour, then ticket assigned to them will have resolution SLA of one hour. And if ticket is not resolved in one hour, then SLA will not be met and will be treated as breached. The service now has separate tables to track all these additional functionalities, approvals, SLA and assignments as well. Task Assignment. A task can be assigned to a group or a user. Now that user should be part of the group so that he can work on the same task. But at the same time, user who has been assigned that particular task should also have access on that particular table. At the same time for that task record as well. If user, even if incident or any task is assigned to a particular user, however, he doesn't have access to that particular record, then user cannot work on it. So access is very important in this case. Now it depends what kind of access you have applied in your instance. We will talk about access rules in our future sections. Let's see task table and its other extended tables. For that, I will go to tables module, which is under system definition. I will click here. This will show me the list of tables which we have in our instance. So I have around 3567 tables in my instance currently. These are all out of the box tables provided by ServiceNow. Let me show you the task table which we were talking about, which is one of the core table. So here we have this table, task table. The label of this table is task and name is TASK. So this is the core table, which is basically not extended from any other tables. This is kind of a parent table. However, lot of other tables are basically extending from this table. So if I go back and I will show you the list at the top. You will see we have label name, we have name and then we have extend table. That means this table is basically extended from which parent table. That is something you can see here. So if I just sort task table and I just click on show matching. Now this particular list is showing you all the tables basically which are getting extended from task table and the examples which you were talking about like incident, problem, change. You can see all those tables here. You will see request as well, requested item. You have catalog task. Now all these tables are basically extended from task table. Now what exactly extension means? Whatever fields you will see in this particular table. Let's take a look. If I click here. Now these are all fields of task table, the parent task table. As an example like assignment group and business duration or maybe assigned to. If I go back and I open any extended table from task, maybe incident. You will see similar kind of fields as well and some fields specifically created for this table. So whenever a table is extended from a task table or any other table, it basically inherits all the fields of parent table. At the same time, you can also create specific fields for that particular table. Let me show you the assignment fields of task table. So I will go to task table. As of now we are in incident table. So I will go to task table. Here we have assigned to. You can see it is referencing to user table. That means you can select any user and then we have assignment group where you have referencing to group table. That means you can select any group on any task. In that case, let me just go to the list of task. If I go to the list. Now this particular list, it's showing you all the task of your instance. Even it's incident, even it's change, even it's problem, even it's request. All the records, all the record tables, which are basically extended from task table, those records will be displayed in this particular list. You can also see it with the help of type that what are the different types you have. Different task type that you can see with the help of task type. So I will just click here and do it group by task type. When I click this button group by task type. Now it will try to group all the records which I have in my instance. So you can see these are the different types of tasks I have currently in my instance. You might have more. It depends because this is just out of the box instance I have. So I have not maybe created a lot of records and other tables, maybe except incident table. So you can see we have changed request. We have changed task. We have incident problem, problem task request. These are all tables which are basically extended from task table. If I go to incident, you can see we have all these incidents and if I just open any particular record, maybe this one. As of now this is closed. So here state is closed. However, the important part here is you have this assignment group and then you have this assigned to. So this assignment group is basically assigned to a group and this particular person should be part of this group and this incident is assigned to this particular user. Let me go a little bit bottom. I was talking about task SLA. So this is what we have as part of the related list. If you will create SLA, then that SLA will be attached automatically as per the records or as per the SLA condition you have in your instance. Let's see other records. You might have some other records where we have SLA enabled. Let me quickly check. I will try to open this record and if I go a little bit bottom. So answer is yes. So we do have SLA record in this particular incident. So this is what SLA I was talking about. As of now this one is priority one resolution SLA. Now the duration, the time is something configurable which you have to configure as per your customer requirement as per your organizational incident management process and different process you have. ServiceNow also comes up with this SLA definition configuration where you have this module, this application called service level.management where you can configure all these SLAs for different tables for different tasks. For example, if I go here and I select here, you can see I can also select the table. So here you can select the table for which table you want to track these SLAs. Let's see approvals. So if I go back to my record or maybe I will show you in request one. So I will go to service catalog in request. You might find some approvals maybe. Here we have this approvers. As of now this is empty. But if this particular item would need to have any kind of approvals, then that approver will automatically be attached. That means that record will automatically be shown here. And that approver will also get some emails that yes he has to approve this particular request. You can also add approvals manually. If I click this edit button, I will be able to add approvers. So let me show you how exactly you can add. So maybe I will add this one. If I will add, it will automatically create a record. As of now it is not yet requested. If you want to make it requested, you can also do that. So if I make it requested and just save it, that means now this is in requested state and this approver will get an email that he has to request something. And users can go into ServiceNow instance or maybe they can also approve it with the help of email. You can see I also, because I have logged in as an administrator, I'm also getting a button to approve or reject. Let me quickly show you that how exactly ServiceNow gives a functionality to add approvals via workflow as well. So if I go to workflow, here I have workflow. So change management request always needs an approval. So let me go to this one. So we have this one of the workflow for change management application. That means all the change requests which needs approval. So I'm just opening this record. So here we have approvals. You can see we have this change approval policy. We have some other activities where you have action like approval action. You can approve it, reject it. That's how you can add approvals. So you can create new workflow and then you can add approvals for any particular task. So if you want to drive your task system, whatever task you are creating, even it's a custom or out-of-the-box and you want to add some workflows and you want to utilize approvals, then you can utilize it with the help of workflows as well. Phase of task assignment. Task can be assigned to a group or a user in different ways. Manually, in which a ServiceNow user can assign the task to himself or his own group or another system user can assign to other user or group of the system. Then we have assignment rules. They are pre-built functionalities by ServiceNow which support setting the value of assigned to and assignment group field on the task record. That is also automatically on the basis of some rules defined by ServiceNow admins. Then predictive intelligence. It is a feature of ServiceNow platform based on machine learning which reads the existing historical data and updates the field like assigned to an assignment group. That means it is totally based on machine learning. And last we have custom rules or script. So ServiceNow administrators and developers can create their own custom scripts and rules to update the assignment group and assign to automatically on the basis of some condition which is provided as part of the business requirement. Manual task assignment. Users can assign the task manually to a group or an individual. They can update the fields assignment group and assign to manually on the form. Let me open an existing incident. So I go to incident module. So here I have incident application. So I will just open any existing incident. Here you have assignment group and assign to. In order to assign an incident, I should have access to the incident application which means you should have idle access which is assigned to users to give access to idle applications like incident change problem. As of now I have logged in as an admin. I can assign this particular ticket to any assignment group. Now that is called manual assignment. You can see the assign to already got removed automatically. If I save this that means now in table in database this assignment group will be populated. Like this is stored in the database. Now let me quickly impersonate idle user and show you that how exactly idle user can utilize the application. What applications are visible to them and how exactly they can do this assignment manually. In order to impersonate, ServiceNow has this particular functionality under profile section. You have this impersonate user. If I click this button I will see that which particular user I have to impersonate. So I will select this idle user which is already there which was in my history. Now as of now this view is basically of idle user and if I show you what all applications are visible, you will definitely see limited applications. Not like the applications which were visible to ServiceNow administrator. Here we have incident change problem configuration and some other applications which are basically supposed to be visible to idle users. The user who has that idle role. If I open any existing incident, so let me just open any existing incident. Now as an idle user I can assign this incident manually to any particular group and to any individual as well. As I mentioned earlier, assignment rules are used to automatically set a value in assign to and assignment group field of a task record. ServiceNow comes up with two modules for assignment rules. One is assignment lookup and assignment. We can configure the records to automate the assignment of task in different task table like incident problem or request tables. I have logged in as an system administrator. You can find assignment rule under system policy. Under system policy you have rules and then you will see two modules. Assignment lookup rules and assignment. Let me show you first assignment. So if I click this you will see existing records. That means ServiceNow has already provided out of the box some out-of-the-box rules for different tables like change request incident problem. Let me open one record. Here you can see we have two sections. One is applies to where you mention the table and condition of triggering of auto assignment. That means you have to mention which particular table you have to select for this rule and then you have to put the triggering condition. When exactly that assignment rule should trigger. That is something you mentioned in this particular section. And the next section we have is assign to. Once that condition is met and that will trigger the assignment rule then which particular group or user this ticket should be assigned to. So here you can mention the user as well. You can also mention group. And the third section we have is related to the script. If you're not able to configure the options and you're not able to achieve the goal which you want to achieve as part of this assignment rule then you can also do some scripting. So this is how you create assignment rule. Another module we have is assignment lookup rules which is basically for incident. And if I open this existing record. So we have one record which is out of the box created by ServiceNow. Here we have category of incident. We have subcategory. You can mention configuration item. At the same time you can also mention assignment group and assign to. That means if category will be this. If subcategory will be email and configuration item. If you want to put anything in that case the ticket will automatically be assigned to the group which will be selected here. It is just an additional functionality to look up for the different records that assignment can be done by these two modules. Predictive intelligence. ServiceNow comes up with out-of-the-box module that is called predictive intelligence which uses machine learning algorithm to determine field values during record creation. Existing data records are required to train machine learning to make effective decisions. Predictive intelligence is used to populate the following fields like category, priority, assignment group and assign to. If you want to learn more about predictive intelligence then you can refer ServiceNow documentation. They have a lot of information about predictive intelligence. You can also found more details about predictive intelligence in Now Learning option as well. Now Learning portal. Let me show you the predictive intelligence module. Before I show you predictive intelligence module it is important to know predictive intelligence has to be enabled separately via a plugin. So you won't find in your instance by default when you will get new ServiceNow instance. You have to enable it. Moreover it is a licensed application. In that case you have to even for your organization you have to purchase it first. You have to get the license first and then you can utilize it and use it in your ServiceNow instance. So if I go in application navigator and type here predictive you will see this module here. So this is the module for predictive intelligence. Here basically ServiceNow has given you option that how exactly you can train your instance to read the data and then it can automatically perform these assignments in the system without any manual intervention. Custom rules or script. Now this is one of the way as well where you can automatically perform the assignment for different tasks. In this case you have to write some custom configuration. Maybe script depends on the kind of requirement you have and system will automatically update these two fields. With the help of customization you can update lot of other fields but as we are just talking about task assignment so you can do this task assignment automatically as well with the help of custom rules and a script. Service desk application. ServiceNow provides an application called service desk which is specifically for all users who work on different tasks like incident, request, change, problem etc. It is one module where users can access all their tasks regardless of type of task. If the record table is extended from task table and assigned to a user or group then users in assigned to field or part of the assigned group can see those records in this application. Let's take a look. In application navigator you need to type service desk. This is the application where you can access all the tasks assigned to you or to your group and that's the reason the name has been given as service desk. The modules we have for this application is callers where you can see all the users of your system. This is ITIL view. All the users we have that is something you can see. Then we have incidents. You can see all the incidents because incidents are more important because they are issues which you have to see on priority. Then you have knowledge. You can access different knowledge records. Then you have a module which says my work. Now anything assigned to you, you can directly see in my work regardless of task type. Even it's incident, even it's change, even it's problem, a request, any task you can see here. So that means you don't have to worry about different applications for different task types. Just click this button you will see all the list whatever tasks assigned to you. Now if you are a member of 10 groups and those 10 groups basically work for different task type maybe like incident, change, problem, request. How can you see that? Then we have my groups work. Now any task assigned to your group that means you are part of that particular group that you can see here. Even it is not assigned to you. Then you have my approvals. So anything which is waiting for your approval, any task that is something you can see here. And next module we have which is related to the SLA because that is also very important. So we have this SLA. If I click here it says my work again and then I have my groups work. This is for SLA. Whichever task where maybe ticket is being braised or what exactly the SLA going on that is something you can see here. It is not targeting to incident or any task table. It is targeting to task SLA table. So you can see all the SLAs running on your task which are basically assigned to you in my work and assigned to your group that is in my groups work. Effective task management. In order to manage the tasks effectively, users agents who actually work on the task need to utilize additional functionalities on the task record like work notes and comments. Which are basically used to update the progress of action to complete the task. Agents who work on task use work notes to update the action and update the comments to provide update to the requester. Then we have activity stream. Activity stream is something which shows all the activities performed for the task like update of a field, update work notes, comments, sending of an email. Now all those activities will be shown in activity stream. So users can see the timelines and what activity was done at what time and then we have email functionality. ServiceNow comes with email functionality which allows users and agents to send custom emails to different users. You can send a particular email, a custom email. You can also attach a document in that email and send to any user which is basically related to that particular task. In this case if you can see on the screen we have this compose email where we have all different fields for to CC, BCC, subject and then we have body as well where you can type whatever content you have to put for that email. So these are some additional functionalities which you can utilize. Let me show you in my personal developer instance. Let me impersonate as an idle user. So I will go here I will impersonate idle user. So let's say this idle user wants to see what all incidents he has got in his queue. So for that I will go to service desk and I will go to my work. So these are all tasks which are assigned to me that means this particular user. So if I open this incident where it says sales forecast spreadsheet is read only. It is kind of an incident issue for a user and user is here that is caller. I have this number. These are categories, subcategory the fields related to incident. I have state, impact, urgency. Now these all are fields which are mostly inherited from task table. We have assignment group, we have assigned to. Now to work on this particular incident effectively I have I can change the state as per the action I am taking. If I am doing some action so maybe I can just put the work notes that I have started working on it and I can just post this work note and you can see here. So if my manager or somebody else wants to just check if something is going on or not they can just check here. If they won't find something in this activity stream then they can definitely ask this particular user the why you have not taken any action yet and if I will say yes I have taken the action then then user might ask my manager can ask that why you have not put in the comments and that is the reason it is really important because nobody has to reach out to you if you will put something important action here. They don't have to reach out to you. In that case if I talk about additional comments if you will check additional comments now this particular field will automatically be changed and converted into additional comments then you will not be able to see work notes. Here if you will type something now this will go to the user. So what if for example you want to ask some kind of screenshot from the user you want to communicate to the user that you are working upon it in that case you can put something here and it will be sent to the user. So that is a difference between work notes and additional comments and here we have this activity stream. So if I type something maybe I'm just typing test and if I post something here and if I reload let's see if email is being sent or not. So as of now you can see these logs so we have this additional comment we have this work note another functionality to work effectively is email. If I click these three dots you will see this email option. If I click this it will open a pop-up where I can see that compose new email. It will automatically select the caller but here everything will be blank so you can put any email address you can also search for the user you can change the subject line if it's up to you but this will basically be sent from here and as I if I just mention test here and I just click on send it will be sent at the same time it will be also tracked in the activity stream. So let's see if it happens or not I'm just reloading it I think as of now it's not sending the email it should send but let me refresh again. Maybe this user I think this user has not enabled that feature maybe to get the notification yes and that is what I was I was thinking. You can see it says notification disabled. I can enable it quickly and I will show you this same incident and show you how exactly it works. So let me just impersonate this user and if I go to my profile I have this allow notification. So this was disabled for this user I have enabled it I will just impersonate idle user now so that you can see that and if I go to my work and I see the same incident here this time let me see okay so you can see email was sent because that was disabled so in that case he was not able to get the email but now it is enabled and you can see that email was sent to the user and it has also been captured in the activity stream. Now all the activities which are being triggered you can see here the number of activities as well if you will see 10 activities here so it will show 10 number 10 count here. So these are the additional functionalities which are really important to to work on the task by any agents and users. Notifications. In this section we will learn about how ServiceNow platform sends notification to users on different events. How you can manage users notification. How can you create a new notification and we will also learn about inbound actions outbound and inbound. When records are created updated or any event is generated ServiceNow can send notifications to the users configured in those notifications. ServiceNow send a notification which is received by a user and this is called outbound notification. For example incident is assigned to a group then all group members will get email notification about the assignment of the ticket in their queue. Users can also respond to the email received or create new email and send it to ServiceNow which can basically perform some action on the records of table which is called inbound action. As an example users can mark an email to your instance email address and ServiceNow can process that email and create incident record and populate the fields as per the information mentioned in the email. Notification application. ServiceNow provides an out-of-the-box module for managing notifications. You can create and manage different types of notifications with this module. Let's see the notification application in my personal developer instance. You need to go to application navigator and type system notification. You will find this system notification application. This application has three different sections for different modules. Email which has modules related to email notifications. Then we have push which has modules related to mobile push notifications. And lastly we have provider in which you have modules to configure notifications for agent workspace and virtual agent which are separate applications of ServiceNow. If you want to get more details about these applications then please refer ServiceNow documentation site. The first module in email section we have is digest intervals in which you can define the intervals for digest email functionality. Email digest is used to reduce the number of emails sent to the users for specific notifications in a given time period. If digest email is selected then instead of sending multiple notifications whenever notification conditions are met users will only receive a single notification which is sent in a specific time period and that time period you can mention here. Digest email content is also different from standard notification and it can be configured separately. Then you can see notifications module which shows the list of notifications of your instance. These are all out-of-the-box notifications. You will also see a new button at the top and you can create new notification with the help of this button. Next module we have is notification email scripts which shows the list of email scripts for notifications. These are all out-of-the-box email scripts. We will learn about mail scripts later part of the training. Then we have notification categories. ServiceNow has created out-of-the-box categories for notifications and also provided option to select category for various notifications on notification form. This basically helps to identify your different notifications in the instance and this module shows the list of categories which are out-of-the-box and you also have this new button. So if you want to create new category for your different notifications you can do that as well. Then we have templates. This module shows the list of all email templates created for different notifications. Email templates are basically reusable content for subject and message body. ServiceNow admins can create these templates and use them in different notifications. Then we have notification filters. This module shows list of filters for notifications. Users can filter the notifications by applying them in notification preference. You can click on settings button at the right top then you will see this pop-up. You have to click on notification. Once you will click on notification you will see these options. So you have to select any kind of notification maybe for IT service management. Once you will click that you will find multiple notification for that module and you can just click on maybe this particular notification and click again. Then you will see to apply some conditions. In conditions you have an option to select the filter and here we have critical issues filter and we also have unsubscribe filter which are basically available in our list. So users can basically apply these filters to get the notifications accordingly. And lastly we have an email section as email access restriction. This module shows the rules created to restrict access of email notifications. When email is sent from ServiceNow it creates a log in ServiceNow. I will show you quickly. So just go to emails. If you type emails under system logs you will see these emails. This is the module which shows the logs of the emails sent. If I just click on all because as of now it has already applied a filter for all emails of today. But this will remove the filter and will show all the emails which were sent from this instance. So you have this list of emails sent or received in your instance. So if you want to restrict access to specific types of notifications like password emails, approval emails then you can apply those rules and then notifications will be only visible to the users mentioned in the rules. We also have other modules for push notification and the other one is just for provider where you configure for agent workspace and virtual agent. Out-of-the-box notifications. ServiceNow also has out-of-the-box notifications configured for existing modules and applications provided by ServiceNow like incident notifications, change notifications, problem management notifications or request notifications. ServiceNow admins can edit existing notifications or they can create new notifications. You can access notifications via module notifications under system notification and the table where all these notifications are stored is sys event underscore email. So this is the table sys event underscore email underscore action. That's the name of the table in which all these notifications are stored. Notifications form. ServiceNow admins can create new notifications. So let's talk about the fields used to configure these notifications. Starting with the first field we have is name. You need to provide the name of your notification in this field. Then we have table. You need to select the table for which notification needs to be sent like incident table, problem table, change table or request table and many more. Category. You can define the category of your notifications and ServiceNow has out-of-the-box categories as well like service catalog, approvals and some categories which are based on the modules. Notification form has three important sections which basically drives the whole notification. The first section we have is when to send. Where you define the condition when the event should trigger and notification should be sent. Then we have who will receive section. Where you define who all are the recipients of the notification. And the last section we have is what it will contain. In this section you have fields to define content you want to send via this notification. You can mention subject, message body and some other elements for your notification. Let's see the fields of this section. In the first section when to send you have a field called send when. In this field you need to mention when notification will be sent. So there are three options available in this particular field. When record is inserted or updated. And when this option is selected notifications will be sent based on insert or update of record whichever is checked as we have two other fields updated and inserted. The second option is event. When this option is selected then you also need to select the event and notifications are sent when selected event is triggered in the instance. ServiceNow developers and admins can create this event via scripting. A last choice of this field is triggered which is triggered via flow designer. Next section is who will receive. In this section you have fields like users, groups and user group field. As you know you need to define recipients of the notification in this section so you can select individual users in users field individual groups in group field and select the field of user and group on the form and table for which notification is created. We have one more field called subscribable. So if you want to make the notification subscribable that means users can subscribe for your notification then you can check the checkbox of this field and that is subscribable. Last section we have is what it will contain. In this section we have fields like content type in which you select type of your message content like HTML plain text or HTML and plain text. Then we have include attachments which will send all attachments in the email of the record if checked. Omit watermark. ServiceNow can create a random alphanumeric code and add it at the bottom of every email notification and show it as watermark for every email notification. If this field is checked then no watermark will be added in the notification. Push message only. We talked about mobile app in ServiceNow. When a notification is created it basically sent as an email and also sent as a push notification on the mobile app. If this option is checked then email notification will not be sent and the notification will only be used for push notification. Importance. You have option to send email with importance as high or low and that's what you can select in this field. From field. By default email is sent from ServiceNow with email address which is instance name at ServiceNow.com. However if you want any email address of your organization then you can add that in this particular field and users will get the notification from that email for this particular notification which you are creating. Reply to. You can also put if you want users to reply to any other email. Then you put that email address in this field. Else same email from which user received email will be used for reply to. Push messages. Push messages are the content for mobile notifications. You can create them separately and select in this field. Email template. The content of the email can send in two ways. One is you directly mentioned it in the field like subject and message HTML or you can also create templates and select them to send the notification. And the last thing we have on the form is preview notification button. So once you are done with creation of notification you can preview it and see how notification will be displayed to the user on the email. Let's see the notification form and create a new notification. You need to click on this new button. Once you will click on this new button you will be able to see the new notification form and you will see the fields which you were talking about. Here provide a name. For the notification which you are going to create. So I will give it a name as notify on priority changes to P1. We will select the table and I will select incident table. We are going to create this notification for incident table. I'm going to leave a category as it is for now. Then I will go to first section that is when to send. Now here we will select send when and I will keep this option as it is but you can still see other options like event is fired triggered and I will just click on update it. I don't want to do it for inserted. Here I will put the condition. Now condition you have to select the fields. So here I will select priority changes to critical. Now this is when to send. So this is the condition then when exactly the system should send the notification. Then I will go to the next section that will say who will receive. Here I will select a user. So maybe I will expand it first. I will open it and I will select a random user. Maybe this one. I will select a group. I will select maybe cab approvals. There's just for example just a demo and I also have this user groups and fields. Now if you will expand this you will see all the fields where basically you have the data related to user or a group. You will still see other fields but that is something you don't have to select. So you can select maybe caller. You can select assignment group. You can select assign to. That is what you can select and close this and just click on save. You are done. Notification is created. Is it? No. You still need to mention the body, the content. What exactly the content you want to send while sending this notification. So you will go to the third section that is what it will contain. Here you will see we have this email template and we also have message HTML that means your body, body of the email and then we have subject. You will click on this advanced view. If you will click on this advanced view you will see the same fields which we were talking about. So now you see more fields in the same section. I don't have to select any other field right now. So I will just give here subject. So priority I will just mention the priority increased. Priority changed to P1 for. Now here you have to put the incident number and that should be dynamic. You can't make it static. So in that case ServiceNow gives you an option here and here you can select the field value. So if you will select number it will be pasted here. You have to just copy or cut from here and then you can paste here. Now as of now it's kind of a variable. Dollar number. Now but when email will be sent it will automatically put the number of that particular incident record. So in that case I will put it again here in the body because I need it. So I will mention high priority of change to P1. That's it. I will save it now. Now you are done with the creation of this notification. You don't need to make any other settings. Unless you have some you want to add some additional features. So in that case you are done with your notification. Now we will test this notification. So for that I will go to incident management application. So here I have incident application and I will just try to open existing incidents. So we will open the list of existing incident and wherever priority is low. Maybe accept critical because that's what we want as part of the condition. So maybe we will have this one and I will just click here. It is I think we just clicked on the critical one. We don't want critical. We want accept critical. So we will click on maybe this one. Here it says planning. It's very very low. As I as a use case I can tell you that this notification will be helpful that if somebody changes the priority you want to send the notification to the important people to concerned stakeholders. In that case you can add them in the recipients. So here if I change it to high and high now this will automatically change the priority to critical. As of now I don't have any assignment group. I will just select any one assignment group and maybe I will select assign to as well and I will save this. I have to mention something in this mandatory field work notes. So before I save it I have to put something here. So I will just do test for now and I will save this. So priority is now changed to P1. It is saved in your database and you will see system will also send the notification and if I reload it let's see if email is created. Maybe I will show you in the logs in emails logs. So we have this emails and you can see we have this notification priority changes to P1 for this. That's great that means you got the notification. So this email was sent and who are the recipients? These are the recipients you can see it was sent to cab approval Fred Ludi who was the caller and assignment group and assign to as well the person in assign to. So in that case if I open this you can also see it in the email logs of incident record that is an activity stream. So here we have this priority this was another notification you can see we also have another notification and here we have which we just created. If you click on this button it will expand it and then you can see the body of the email as well. Now what exactly you see in the body? So you see the message which we just pasted in our notification but you also see these two options. What are they? Now this one is basically for unsubscribe and notification preference button so the users can directly route to their notification preference if they want to change anything. Unsubscribe is something if they don't want to get this kind of notification they can click on unsubscribe and they will not get this notification. Now at the very bottom you have this reference number. Now this is alpha numeric code which I was talking about that's a random number and that is referred as watermark. Watermark of every email notification for a particular record. Now one of the important feature I can tell you for watermark is for example if somebody responds to this email address to this email which was sent to the user. How ServiceNow will know that this email has to be updated in this particular record? The ServiceNow will know about it with the help of this watermark. You can definitely update some conditions as part of the inbound actions which we will learn little bit later but this is really helpful so that system can recognize that which particular record I have to update this notification. Email script. You can also add custom scripts in your notifications to make the content of notification more dynamic. This is the module which is showing the list of email scripts used in different notifications and these are all out-of-the-box email scripts. Once email script is created you can mention them in the message body and content will be sent as per the data pulled from mail script or whatever code you have written that is how your notification will be sent. The syntax of adding email script in the message body is $ and you start with curly braces mail underscore script that is something you have to mention and equal to and then you have to provide name of your email script you created. Inbound email action. ServiceNow can create or update records as per the email received from external users to ServiceNow email address of the instance. This is the module of inbound action under system policy. ServiceNow admins can configure inbound action for different tables to create or update records of those tables when email is received. Let me show you the form of inbound action and its fields. Name. You can provide the name of your inbound action in this field. Then we have target table. You need to select the table for which inbound action is needed like incident table, change table, problem table. Then you have action type. Here you have to select the type of action needed when email is received and condition is matched. You can select to perform some action or to return with a response from ServiceNow. That means once email is received you can select the type whether you want to do some action you want to take some action once email is received or you want to just respond back to the user on the same email once email is received. Then you have stop processing. If no other inbound action should run after processing of current inbound action then you can select this checkbox. Inbound action also depends on two sections. The first section we have is when to run. When you need to put the condition and configure when inbound action can trigger the condition. And the second tab is actions where you can mention that action what action is needed once condition is matched. However this can be done via scripting and you can see a script field. So let's see fields of these two sections. In the first section we have type. So as you know we have three types of emails. New email, reply email and forward email. We can trigger the inbound action on the basis of this type of option. Then you have required roles. Generally anyone can send email and you can trigger inbound actions. However if you want sender emails should have a specific role to trigger inbound action you are going to create. That is something you can mention here. Execution order. You might have multiple inbound actions on same table. System will prioritize the processing of inbound action as per the execution order. Lowest number will be processed first. From. You can also select the user to trigger this inbound action. And then we have conditions. In this field you need to mention the conditions of email elements and some system fields. In another tab that is action you can define the action to be performed when condition will be met. So you can see the field called a script and here you can mention what kind of action you want to take once condition is matched. Whatever you have mentioned in when to run. Inbound action is found under system policy. If you will type in application navigator inbound actions under system policy under email section you will find inbound actions. If you click on that you will see the list of inbound actions. The list of inbound actions you have in your instance. And if you click this new button you will be able to create new inbound action. Here we have options. You can see new reply forward action type. You can also see the conditions. Now in conditions these are not some kind of tables in your system. These are the conditions for elements you have your. These are the conditions for the elements you have in your email. Like it will search for some keywords. It will look for BCC blind copied. It will look for body. So you can mention that condition. Body text. Checkpoint. Content type copied created when exactly it was to. That is something you can see. Headers as well. Importance whether there is if you have any kind of importance in the email. Mailbox notification type. Receive type. That is something you can mention and then that's how system will take the action. Now these fields which I am showing you right now. These are the fields of your email table. If I go here and type emails. So these are the fields which we are talking about. So if I click table you will see all those fields. So anyhow that condition you have to mention as part of this table but mostly the elements are from the message. That means from the email. So this is how you can configure inbound actions in ServiceNow. Knowledge management. In this section we will learn knowledge management in ServiceNow. Benefits of knowledge management. Knowledge articles creation process. Knowledge feedback. Import of knowledge articles in ServiceNow. Knowledge article.A knowledge article is a record in knowledge base that provides information to users. A knowledge article can be a policy, self-help tips, troubleshooting document or resolution steps document. Benefits of knowledge management Knowledge management is a practice to manage knowledge articles with defined process in the organization. It has lot of benefits like It is a one-stop solution for users to find the answers and get quick help via self-service. It provides a centralized location for the creation, categorization and viewing of the articles. The information and articles are stored in a knowledge base. That means it is kind of a bucket which is being categorized as per the process you have, as per the business units you have in your organization. Articles in ServiceNow are referred as KB articles. Knowledge application In order to manage knowledge management and its process, ServiceNow has out of the box knowledge management application. Users with right roles can access this application and the modules under this application. They can create and maintain knowledge articles in this application. In order to go to knowledge application, you need to type knowledge in application navigator. When you will type knowledge, you will find this application. This is knowledge management application. You can see various modules under this application. As I mentioned, users with required roles for knowledge management can access these modules. The first module we have is homepage, which shows the knowledge page where users can search for different articles of the instance to get some help. You will see different knowledge bases which you can create as per your company's process. Knowledge bases can be created on the basis of departments, business units etc. This page will be different for each user as per the access they have for knowledge bases. Users might see all the knowledge bases and their articles or they can only see one or two knowledge bases and their articles as per the access they have. If I click one of the knowledge bases, then you will see the list of articles under that knowledge base. On this page, at the very top, you have this search box in which you can search for the articles. If users come on this page, they can search for different articles. They want some kind of help. Let me type Linux in this particular search box and if I press enter, I will see the results and I will see the articles related to the Linux word. Wherever this search will find the Linux keyword, it will try to populate those articles in this particular view. We can also perform this searching all the knowledge bases we have and we have access to or you can also select the knowledge bases from here as well. If you want to search any particular article for a particular knowledge base, in that case you can select it and then you can search accordingly. If you want to search all, you can just select all as well. At the right top, you have these two buttons. One is create an article. Another one is post a question. Create an article is basically used to create new article. However, this button will be visible to the users who have create access. That means who have access to create new articles and then we have another button where it says post a question which is used to post questions and other users can provide the answers. Let me open this article. Now this is end user view of any article and this is the main content of knowledge article. Next module we have in a section that is articles which shows list of articles with different stages. The first module is create new. This module opens up some new knowledge form to create a knowledge article. Users who have write access, create access, they can provide the data and they can create knowledge articles with the help of this form. Then we have import articles. This module gives you a feature to import external files in doc or docx format. So you can browse the files and you can import that article into ServiceNow knowledge management. You can select the knowledge base here in which knowledge base you want to insert that article and then you can browse the file you can have you have to select that knowledge document from your system and it can be imported in ServiceNow. You can also select the category of that particular article. Then we have unpublished which shows the list of articles which are not yet not yet published. Then we have retired. Then we have published as well. And then we have all which shows all the articles regardless of their stage even they are published even they are unpublished or retired all the articles of your instance. The next module we have is related to submissions. Submissions are kind of request to create articles which can be requested by users who don't have access to create articles. These submissions are reviewed by different assignment groups and users who have access can create articles on the basis of data provided in submission. So this module shows the list of submission records which are still open to take some action. Another feature of ServiceNow is knowledge management feedback. Users who are using and viewing the articles can provide the feedback as well so that owners of articles can improve the content or quality of the knowledge article. Let me open an article by going to the homepage. I will go to homepage. I will open this knowledge base and I will click on this article. Now the first feedback can be given by selecting stars. Which are basically you can provide the rating for this article and you have one to five stars and you can rate this article. So users who are viewing this article or who will be viewing this article they can rate the article. At the right top you have this button flag article. So if you want to flag this article you can click this button and you have to provide a reason that why exactly you are flagging this article. I can cancel this. Now we also have a feedback to be given if article is helpful or it is not. In that case if you go a little bit bottom you will see here this section helpful question mark yes or no. And then at the very bottom you will find the user can also provide the comment for the article he is viewing. So you can put something here like test and maybe just click on comment. And you can also make it yes helper you can just click on yes and that will also be captured. So ServiceNow also has out of the box module section to manage these feedbacks. All these ratings all these feedbacks are basically captured and tracked in a table of records. And that is shown under knowledge application of ServiceNow. And that section is basically called feedback management which is also under knowledge application. And the first module we have is feedback. Which shows the list of all types of feedback submitted by users be it rating, be it comment or helpful or not. Then I have my flagged which shows the list of knowledge articles which have been flagged by logged in user. In this case it will show articles flagged by myself. Then we have all flagged which shows the list of all flagged articles of the instance. Then we have some modules related to tasks which basically gets created when articles are marked not helpful or flagged. Users who have access they can take some action on these tasks to improve the quality of knowledge articles. Then we have administration section. In which you can perform more configuration of knowledge management. And the first module we have is guided setup. This module provides step by step guidance to implement knowledge management in your organization. Or whenever you are implementing for any customer. You can utilize this particular module and that's a feature of ServiceNow guided setup for different applications. Then you have knowledge bases. This shows the list of knowledge bases created in your instance. You can create knowledge bases for different departments as well. Let's see this knowledge base. You have important fields like owner, managers who will be the knowledge managers. You have workflow for publishing and retiring as well. If you want to retire the articles what workflow you want to follow that is something you can select. And while publishing it what workflow you want to follow you can select that as well. At the bottom you have some related list. Which shows the list of articles in this knowledge base. This one. And then you have can read and can contribute. Where you can define the criteria to provide read and write access to the users. What users can read the articles. And what users can contribute. What users can create it. What users can edit the articles. That is something you can mention in this particular section. Why ServiceNow has given this as a criteria. In this case you don't have to select the users directly. You can just mention the criteria and utilize it. Be it location. If I click here you will see you can select individual users, groups, roles, locations, companies, departments and all. Then we have ratings module. Which shows list of ratings submitted by the users. Now this module shows same records from the feedback table. However it is just the rating view. And fields which are visible here they are related to rating. Then we have search log. Which shows the list of keywords entered by users while searching for knowledge articles. Then we have navigation add-ons. This is just for additional search on Google or Microsoft. Or Oracle as well. Then we have messages. This module shows dynamic message for different elements. And this is not just related to knowledge management. This is for whole platform and can be used in different applications. Then we have properties. In this module you will see properties related to knowledge management and can configure as per your requirement and process. Then we have overview. Which shows the dashboard for the data of knowledge articles. So it gives an overview for your knowledge management in ServiceNow. Then we have user criteria which we were talking about. So you can create different user criteria and select them in different knowledge bases you will create. So as I mentioned earlier that users with valid role can access knowledge management application. However knowledge articles can be visible to users as per the access they have. Which is on the basis of user criteria selected in the knowledge base. And the last module we have is user criteria diagnostics. In this module you will just check that what kind of access control, what kind of criteria is applied on an article or knowledge base for a user. You can select the user, you can select which type of diagnostic you have to run and then you can also select the article. So if I select any user, maybe system administrator. And if I select any article, maybe this one and I click on diagnose. So it says read and contribute access. That means this user has contribute access, read access and contribute access. And it is a great functionality guys. So if you are an admin and if somebody is raising a concern that they don't have access maybe or they had access and now they are not able to create it. Maybe they are not able to read the articles. In that case at least you can diagnose it that what kind of access that user has. So I would say it is pretty much great functionality provided by ServiceNow. Knowledge portal. ServiceNow also has out of the box knowledge portal. Which is kind of advanced view of knowledge homepage and it is accessed via portal. Now features are quite similar like we can do searching on this page. You can view the article with some different categories. But it is just an advanced view. In order to go to this advanced portal, I need to go to in the URL. I will remove and I will just add here after our domain. I will just add SP and press enter. When you will do that it will open the portal page. So this is the main portal page of your ServiceNow instance. Now users can go to knowledge portal by two options. One is here. That is at the top and then we have here in the middle knowledge base. If you click on knowledge, you will see knowledge portal. So you can search here and this is the search box which is at the top. In the left you will see the categories of the articles. And if I click in one of the category, I will be able to see the list of articles related to this category. You can click any article. And this view is end user view. And here as well you can read this article. You can provide comments. You can also mention helpful yes or no and you can provide comments as well. So as I mentioned functionality features are pretty much similar. However it is just an advanced UI and user friendly. ServiceNow developers and administrators can customize this knowledge portal as well. So if you have your customer requirement, maybe they don't want some icons, maybe they want to change the design of your portal, maybe for knowledge portal separately in that case you can do that as well. So ServiceNow developers and administrators can do that. Knowledge form. You can create new articles. So let's see different fields and options we have on knowledge form. We have number which shows the number for every article. And it gets automatically generated for every new article. Then we have knowledge base. Users can select the knowledge base for which article needs to be created. Then we have category. Here you select what category of article users want to create. We have valid to. In this field you can select till when article is valid. After valid to date article will be retired automatically. Then we have short description. In this field you need to provide brief detail of the article. Then we have article type. In this field you select the type of article and you have options like HTML or wiki. Then we have workflow. This field shows stages of article which starts with draft. So draft is the first stage when you create the article. And that's what it shows in this particular field. Source task. This field shows the task from which this article is created. Attachment link. If you want article as an attachment. That means you don't want people to see the content of this article. And they can just click on the link of the knowledge article and document should be able to download it. In that case you can check this box. That means attach some document and check this box. Then you have display attachments. You can check this box if you have or if you. Then we have display attachments. You can check this box if you want attachments to be displayed on article main page. So when users see the article, view the article in that case whatever attachments you have. If you want to show them you can also do that. That will be shown at the bottom of the page. And here is the main component that is article body. This is the main field which will be showing the main content of your article to the users. Then we have submit button which will create the article. And we also have one more button that is used to search for duplicates. So if you will type anything in short description and you will click on search. It will try to search the same keyword in our knowledge bases and all the knowledge bases we have. And see if you have similar kind of articles. It's just kind of a help that before creating an article you should just take a look whether you have similar kind of article in the system. Let's create a new article. I will go to knowledge application. I will click on create new which is under article section. I will click on create new. You can see number is auto populated. And it is also showing you incremental numbers. So every time I will click on create new it will keep on adding numbers new numbers. Then you can see here knowledge base is mandatory. So I need to select one of the knowledge base existing knowledge base. I will select IT. Now once you will select knowledge base. You can also select category. So if I click here I would be able to select category for this new article. So I will select Android. I am not touching valid to right now. Article type HTML. Attachment link. Display attachments. I am doing Android demo article testing. And I will just copy this and just paste here. And I will click on save. So you can see I have given short description and article body and article is created. So you have just clicked on save button and article is created with these information which I have given right now. Now how can you see that end user view. You can see that end user view by clicking this button at the bottom that is view article. So if you will click this button you will be able to see that article. You can see the stars. You can see the body as well here and the short description which you just created. So that's how you can create new article. Let me also show you the roles associated with knowledge management application. So if I go to roles module. So we have a module roles. Under user administration you will find roles as well. Click on roles. In name you can search for knowledge because most of the roles they have knowledge word. So if I press enter you will see these major roles we have. Knowledge role. Now this role basically if user will have this role. He can write, edit and review knowledge management articles. If user has knowledge admin role then they can manage knowledge knowledge bases. And if user has knowledge manager they can administer knowledge bases and request new knowledge bases for knowledge management to knowledge admin to approve. And then we have one more for role managing, updating, deleting the information on security incident knowledge bases. This is something different. This is not specific to our knowledge application. This is something related to the security application we have in service now. And whatever knowledge management associated with it you have this particular role just to manage knowledge management for that security application. Knowledge management workflow. An article cannot just be allowed to create without any review. To make sure proper process has been followed. So when you create an article it follows a workflow in which it goes from different stages and finally gets published. Or maybe retired. So when article is created it goes to draft stage. Now author who has created this article he can push for the next stage by clicking publish button. And then that article will be sent for approval. Now that approval basically goes to knowledge base managers. Owner or it can write it can route it to different approvers as for the workflow created in different organizations. That means you can customize this workflow. So out of the box it goes to knowledge base manager or if you want to customize it you can definitely do that. So once article is approved. It is published and users can view the article. They can also be situation. When authors want to retire the articles. In that case author can request for retiring the article. Then it goes for approval. To retire the article. And once approved article is retired. And in this case users can no more view the article. So overall users can view published articles. And that makes sense. You don't want users to view the article which is not even ready yet. So in that case as for the process as with the system. We just need to make sure that users are able to see only published articles. When I say users those are end users who really have to use those articles. But if you are part of knowledge management team and you have access to knowledge management application. In that case you won't need to worry about it. And you will be able to see all the articles regardless of their stage. Let me show you the workflow for knowledge management. I will go to workflow module of service now. Here we have this workflow editor. If you will click this button it will open the workflow. And all the workflow existed in your instance. So these are the list of workflows we have. You can see we do have lot of workflows for knowledge management as well. You can see the table knowledge. I can select this and just do show matching. So these are four workflows which are created out of the box. You can add them in your different knowledge bases as per the requirement you have. As per the process you want to follow for your knowledge base. And if I open one of them. For example this one. You can see the workflow starts from here from draft stage. It goes for approval. It creates event. It will publish the article. It gets end. It's pretty much simple and straight forward. But if you have custom requirement from your customers or clients. In that case you can also edit these workflows. Or maybe you can create your own workflow from scratch. And then you can just utilize them. Import articles. You can also import articles in service now. Service now provides a functionality to import articles from word documents. That means if you have bunch of word documents. Which basically your users used to refer. And if you want to import them in service now as a knowledge article. You can also do that. Let's take a look. So here I have a word document. So I will just quickly create this article. Maybe I will just type something test for article import. And then I will save this. I'm saving it as test article import. And I will click on and this is docx format. The format which we need to import the article in service now. I will click on save. So this article is saved. I will close this. I will go back to my instance. So here is my instance. And I will go to my application knowledge. Here I have this module import articles. I will select the knowledge base maybe in IT. I will select a category as well. Maybe Microsoft. And I will click on browse files. And I will select that article. That doc. So here we have this test for article import. I will select this. It is uploaded. And now I can click on import. Now the important part here is you can import multiple documents. Multiple articles you can import in one time as well. So you just need to click on import here. If you click on import. You can see import is done. So upload is completed. And now you can click on continue. And article is created. You can see we have this article created. And short description was basically taken from the name of the file. And let's see the content. So if I click here. See we have this test for article import. So it took the short description as well. And it took this content as well. Whatever I mentioned in the word document body. And if I click on edit. You will be able to see the native view of this article. See we have this name here. We have this short description here. Now we have this attachment link. What I will do. I will just click on this attachment link. I will attach an article. Or just any document I want to attach. Let's attach the same one which we just created. I have attached it. And I will just close this now. And I will save this. Let's say I will publish it as well. You can see I have clicked on publish. And it says article is in review. So I will go back again. Edit. I have this approval because as of now. I have admin access. So I can approve it. I will approve it. Because I have admin access. It is approved. And you can see the workflow stage here. We have published. So article is now published. And we have this attachment attached. Now what is the difference. If I have this attachment link here. So if I go. Let's search for this article. So I will copy this. I will go to my home page. And try to search for it. I will press enter. So here I have that article. Let's see what happens if I click this. You will see that it did not open the content of the article. It just downloaded the attachment I had in this article. So that's the difference. If you will check that box. That attachment. In that case it will only download all the attachments. In that particular article. And if you uncheck it. Then you can view the article as well. So this is how you can import the articles in ServiceNow. And utilize the power of knowledge management in ServiceNow. So let's start with knowledge check 2. Of the ServiceNow system administrator training. The first question we have is. Name two tables extended from task table. Your time starts now. And the answer is incident and change. There can be other tables as well. Like problem, request item, request. Those tables are also extended from task table. Question number 2. Name two assignment fields of task. Your time starts now. And the answer is assignment group and assign to. Question number 3. How incident can be assigned automatically on the basis of category and CI. Your time starts now. And the answer is assignment rule. Question number 4. Which functionality of ServiceNow can create or update records on the basis of email sent to ServiceNow instance. Your time starts now. And the answer is inbound action. Question number 5. How dynamic content can be added in email notification. Your time starts now. Dynamic content can be sent with the help of email script. Question number 6. How from address can be changed while sending notification. Your time starts now. You can change the from address by putting the desired email address in from field of notification. Question number 7. What extension of files can be imported in ServiceNow knowledge management. Your time starts now. Doc and Doc X. Question number 8. How visibility of knowledge articles access can be defined. Your time starts now. By using user criteria. Question number 9. How users can raise request to get knowledge articles created if they don't have access to create articles directly in knowledge management. Your time starts now. And the answer is submission request. Question number 10. Which field provide information about task from which article is created or related to. Your time starts now. And the answer is source task field on knowledge form. Service catalog. In this section we will learn about service catalog and its benefits. Catalog items and categories. ServiceNow catalog workflow. Service catalog tasks. And we will also try to create some catalog items in this session. What is service catalog? Service catalog is a request ordering system. To request services and products offered by different departments of any organization. Example, hosting team provide cloud computing services where users can request for cloud servers. Windows team provide a service for cloud computing. To request for cloud servers. Windows team provide a service for password reset where users can themselves can reset a password. For example, Windows password. So these are the services which you can host which you can put on service catalog and different users can request for those items services and products. And that is what service catalog is. Benefits of service catalog. Service catalog is like Amazon website. Where you see different items in different categories. It has many benefits like it is one stop shop to request different services provided by all the departments of organization. All the services and products can be displayed into different categories which helps users to find the right services. Organizations can implement multiple catalogs in service now. Overall service catalog gives you same experience like you do shopping on Amazon. Where you see different products from different sellers and you can add them in a cart and request multiple products together. And important part is you can also track them and when exactly you are going to get them you can see that data as well. Users can see service catalog under self-service application. As you know self-service is an application which is visible to all the users of the platform even they don't have roles. So here we have the self-service application and under the self-service application you can see this module called service catalog. If users will click this module they will be able to see service catalog. Where you can see different categories and different services provided by different departments. Like I can order any hardware from here. You can see I can order a laptop, I can order a phone. If I go back I have software service as well. It's a category where I have different items for different softwares. I can install those softwares in my computer. But before that I have to request for them. And we have some other categories as well like can we help you, some office services, peripherals. Now these are the categories. Under these categories you have different services which you can order, which users can order. Now this is my personal developer instance. So this is just a demo data. But if you are implementing service catalog in your organization, this is how users can see the service catalog and request for different services. Service catalog application. In order to manage different products and services, service now has service catalog application. Where users with catalog roles can create, edit and manage services and products. They can do different configurations for different services which are basically provided by different departments. And which are basically visible on service catalog. Or maybe which you want them to be visible on service catalog. In that case you can utilize this application to configure different catalog items and categories. You can go to service catalog application by typing service catalog in application navigator. If you will type that you will find this application service catalog which we are talking about. And you can see various modules under this application. Users with right roles, they can access these applications and modules. At the same time they can also perform different configurations. They can create different services, they can create different products to post on service catalog, to publish on service catalog. If I just talk about high level, the different modules we have under this application. The first application we have is catalogs. So as I mentioned you can create different catalogs in service catalog. For example we have this service catalog, we also have technical catalog. Then we have catalog. Now this is just a default catalog which you want to provide to the end users. That is something you can see here. So just a single catalog here. You have different services, you can add different items as well here. Then we have open records. We will learn little bit later about what kind of tasks, what kind of records are created by service catalog. So when users request for any item, when the user submit any form, what kind of records are created. That is something you will see later. However, those records are basically, you can see those records in this module. That is open records. You can see all the requests, you can see all the items requests, and you can see tasks as well. Then we have catalog definitions, which is a section of modules where you can define different items, different services, which you want to publish on service catalog. So we also have my catalogs. So where catalog is created by me, that is something you can see here. We have my categories, as I mentioned, before users see different items. Basically, they see different categories so that it will be easy for them to find the right service for them. For example, hardware, software, different services, those are the high level categories which are useful so that users can find the right service for them and just request for it. Then we have my items. Now these are the items. As of now, it is just showing my item. That means items which I have created. Then I have maintained catalogs. Now here I can maintain the catalogs and it is showing me all the catalogs created in my instance. Then I have maintained categories. That means all the categories created in my instance. I can also create new category. If I just go one of the category, maybe just click on services, this is the category. Then I have renders. Then I have maintained dynamic categories. I can also maintain dynamic categories. Dynamic, when I say dynamic, that means you can see here top request. That means most commonly requested items. The items which users request commonly. Then we have my content items. That is something related to the document, the content item which you want to display on your service catalog. Then we have some other modules as well to configure the service catalog, to configure different items we have and to do different kind of configurations. Service catalog categories. Services and products of service catalog are divided into logical groups which are called categories. As an example, you have software, office supplies, desktops, peripherals. Now these are the categories. As I mentioned, these are out of the box categories just as a demo data. But in your organization, it's up to you, it's up to your business requirement that what kind of categories you want to create. As I showed you, you can see the categories in service catalog application and you can manage those categories. If you will go to this module called maintain categories, if you will click on that, you will be able to see all the categories of your instance. And if you want to create new, you can also do that. If I go one of the category like software, you can see that in which catalog I want to create this category. You can select here. You can also have parent and child relationship between different categories. And here we have all the items under this category which are basically displayed. So when user clicks on software category, then they can see all these items created under this category. And you have here one more option categories. As I mentioned, you can have parent and child relationship between the categories. So if you want to create any child category or maybe parent categories and parent, you can have to mention here. If you want to create child for this category, you can create here. So that's how you manage categories in service catalog. Service catalog catalog items. Catalog items are the services and products offered by different departments of the organization. Catalog items are basically forms which users submit to raise any request. And these catalog items create tasks to different teams. As you can see, we have this developer laptop. Now it is an item provided by one of the department. And that would be for sure IT department. So as an employee, if you want to request for any new laptop, you don't have to reach out to any different teams via emails or chat or phone. You just need to go to service catalog, see the service, go to hardware, check this laptop. If you're a developer, then it's request for this service. And that is what catalog item. Which is kind of a service, a product where users which users can request and get the service. And once users request for it, it goes to the different process, different workflow. And it gets assigned to different departments who have to work to complete those requests, that particular service. And once everything is done, then that request is completed for the user. Similar like categories. You can also manage these catalog items. So if you will go to service catalog and you have this module called maintain items. If you will click on that, now these are all items, services, products, which are provided by different departments. If I click any one of them like access, you know Microsoft access. That is something you want to install or your user wants to install in his computer. Now these are the details. You can provide the details like price. You can list price as well, how much cost this particular service is. That is something you can provide. Delivery time and a lot of other details you can mention here. Which vendor product it is, that is something you can mention here as well. What is the catalog? Which catalog you want to display this particular item, you can select it from here. Which category this particular item has to be added. So in software, that is what you can do. So it is a catalog item. If I go back and open any other catalog item, maybe like a hardware device, maybe new email account. So this is kind of a service which is provided by exchange team, your email team, who have provided this service so that new users can create new email accounts. So if I have to create a new email account, this is the service I will use as an end user. But as of now you can see it is just a racket because this is a back-end racket. Where you can configure and then users can just request for this. But how they will request it? Now that is something form. Now service now gives you a really great functionality to check how end user will see this particular item once it is created. So you have this button called try it. If I click this, you can see I can mention preferred email address and I can order it. So that is what catalog item. So catalog item is just kind of a form which users can request. So overall it is a service, it is a product provided by different departments. Service catalog roles. Service catalog in service now has four major roles to manage it. The first role we have is admin. That we know which is assigned to system administrator. Who has access to most of the applications and modules and can configure any application in service now. Similarly admin role user can also configure service catalog. He can create catalog items, he can manage it, he can edit them as well. Then we have catalog admin. He is catalog administrator. Now this user can manage service catalog application. Which includes catalogs, categories and items but not including scripting functions. That means catalog admin cannot do scripting. Which is basically done by service now administrators who has admin role. Then we have catalog manager. Who can edit and update a service catalog as well categories and catalog items within that catalog. Now catalog manager can assign editors as well. And they can also assign different managers for that service catalog. And the last role we have is catalog editor. Who can edit and update a service catalog. And they can also edit categories and catalog items within that catalog. Now catalog editors can assign other editors but they cannot change catalog manager. While catalog manager can add a catalog manager but catalog editor cannot do that. So these are the different roles to manage to configure service catalog in service now. Let me show you these roles in service now. So if I go to roles module. So here I have under user administration I have roles module. And if I just search for catalog you will see different roles. And we do have other roles as well but the major role we have is catalog. Then we have catalog admin, catalog editor, catalog manager. These are three major roles but you also have other roles for different access. And you can assign these roles to different users as per the requirement you have from your customer. Service catalog components. Service catalog has three major components. The first one is order which is a service or product requested by the user. Then we have order form which is submitted by the user after filling up the form. And then we have ordering process which works when request is created. So let me talk about the first component that is order. Overall users can order three different items in service now service catalog. The first one is catalog item which can be a product or service like laptop, any software or hosting a server. Then we have order guide in which multiple catalog items are grouped in one request. Now order guide basically assist users to order multiple items like new onboarding. In which user might need laptop, mobile, some of the softwares together during onboarding of the employee. So that is order guide which is a package of multiple catalog items. Then we have record producer. Record producer basically creates records in existing table like incident table, change table, problem table. That means if you want to create a form with few inputs, few fields and after providing the input you want to create some existing records like incident change problem. In that case you can create record producer in service now. And anything which is apart from record producer like you want to host any new service, you want to provide any new offering. That is something you can create catalog item. Then we have order form. In order form we have two components. That means I am talking about now the form which users see and they provide inputs and submit it. So the two components we have on order form are variables and variable sets. Variables are the questions or fields to be filled by users on the form. So whatever fields you see on the form those are called variables. Users with right access they can create these variables as per the business requirement for a particular catalog item.Then we have variable sets. Variable set is a collection of variables. Basically, if you have multiple variables in one bucket, that is called variable sets. Variable sets are created when multiple variables are needed to be placed on multiple forms. And I will give you an example. On every form you might need requested for or on behalf of. These are two major fields which you normally want people to provide that data, to provide that input. In that case, these fields are repeatable fields. So when you will create these variables, you have to create these variables in a variable set rather than individual variables so that you can utilize these variable sets in all the forms, all the catalog items which you want to create in the future. Then we have ordering process, which is basically a backend logic to process any request. This logic can be designed with two ways. First one is workflow. And then we have flows. Workflow in which admins can create different activities like approvals, assignment, custom logic with the scripting to process any request. Once users submit the form. And basically it runs in the background. Then we have flows. Flows is something ServiceNow came up, I think recently, not I think maybe two or three versions before, in which they came up with a logic, with functionality in which users can utilize workflows without any scripting. Like in workflow, you have if you have some complex condition, you have to do some scripting. However, in flows, even if you have some kind of little bit less complex scripting or logic, you don't have to script that. You can do that with the help of designer that is drag and drop. That's it. So overall, it is an easy way to create any automated flow for any request. Flow is basically design in flow designer. That's the functionality of ServiceNow. And the goal can be achieved without scripting. Let me show you these components in my personal developer instance. I will go to service catalog application. Here I have the service catalog application. First, I will show you catalog item. Which is part of order. So I will go to maintain items. Which shows the list of all catalog items, all catalog items of your instance. So let me open any one catalog item, maybe sample item. I think this is just a sample item created by ServiceNow. As of now, it is not active, so I will make it active just to show you how exactly it looks like. So I have these fields like name, you can select the catalog, you have category and you have some other options as well. Here you can select the workflows if you want to follow the flow for this particular catalog item. That is something you can select. If you want to select the workflow, you can do that. You also have execution plan. That is something provided it helps with the help of configuration. That is what you can do as well. So you can process your request with three things basically. Flow, workflow and execution plan. Then you have some design like picture. You want to add some icons or pictures. That is something you can do. You can provide some pricing as well here. And then we have some portal settings. So if this item will be visible on portal, what configurations you want, that is something you can mention here as well. And these are all item details like description. If I go a little bit bottom, here I have related list. Now what kind of related list? If you remember the component we talked about like variables. So these are the fields which a person who has access can create. You can create, you can edit. These are the different fields you can say, different variables, different types of variables you can create in ServiceNow, in service catalog. Then we have variable sets. So if you want to add any variable set, so you also have that option. Because if you remember, variable set is kind of a package for you with multiple variables. In that case, if you want to add any existing variable set, you can do that. And if you want to create a new variable set, that is also you have this option over here. Then we have some other options like catalog UI policies. We also have catalog client scripts. So if you want to do some scripting, you want to add some client script, that is something you can do here. You have UI policies as well. If you have learned about ServiceNow administration, I think as of now, I have not picked that topic, but we will definitely talk about UI policies later. But in this case, UI policies are basically helpful to make fields read only, to make fields visible, mandatory. You can also hide related lists as well. That is something you can do with the help of UI policies. But for service catalog, it's a separate category. And that means UI policies can be created separately for service catalog forms. So you have catalog client scripts as well. And then we have really good things here. Two important things that is related to the visibility. So you have this available for and then we have not available for. Now here you can define the visibility of the catalog item which you are going to create. That means it might happen that your business might ask that whatever item you are creating, it should be visible to these users or maybe it should not be visible to these users. Now how you define those users? Now that is something we talked about, user criteria. So that is not, if you remember, I talked about user criteria and knowledge management as well. And I mentioned over there, user criteria is not limited to knowledge management. You can utilize in different applications. Similarly, you can utilize here as well. So you can add any user criteria if you have already created. If not, you can create new user criteria as well. That is something you can mention here. Then we have categories. We already talked about it. What categories will have for this particular catalog item? In which catalog this item will be added? You can add, definitely you can add in different catalogs. Then we have related articles. So if you have any related knowledge articles, if you want to add here, that is something you can do. And maybe related catalog items as well. If you have any related catalog items for this catalog item, that is something you can add here as well. Maybe other catalog items, maybe they are dependent or subsequent conditions. That is something, I think that is the condition we are getting here. But here you can just edit and add different catalog items as well. So this is about catalog item. Let me show you how users will see this catalog item to submit it. In that case, you will see this button at the top of every catalog item that is try it. If you will click it, it will show you the end user view, the form view. So you can see all the variables which we have in this catalog item. It is showing you all those options. User can provide the input, whatever input you have, whatever fields you have. Check the checkbox, provide the date, date, time, select reference field. And then user can click on order now. That is something user can do. That means request will be submitted to proceed and to process the request. Then I will show you order guide. So we have here order guide. As of now, we only have two order guides that are out of the box. So let me open this one new higher. So as I mentioned, order guide is basically kind of a bucket, which includes multiple catalog items. So if there is a need of providing the request or processing the request for a user for multiple items, in that case, you don't have to ask user to submit those requests individually. It's better you give a package, you put it into the order guide and user will automatically be routed accordingly. So if you will see, we have this new order guide. And if I show you at the bottom here, we have these variables. So you can add these variables. Then we have variable sets. We also have rule base. Now, this rule base is something that when exactly you want to show what item you can see it says include this item. So I will show you quickly what exactly I'm talking about, because here it's mentioned different catalog items like standard laptop, external monitor, new email account. But you can drive the order guide. It's basically depends on the condition user selects. I will show you quickly how exactly it works. If I click on try it. You can see I have this describe needs and I have choose options and then I can check out here. Here I will provide some details like which group this person is joining. So maybe I will select customer support. What I need to do, I will just click on choose options. That's my next option. After filling the basic details, I can just click on choose options. It will take me to the next window. You can see I am on this window now. Now here you have to show the dynamic things. Now, these are all individual catalog items and that's the important part you have to understand. This is not something I have created separately or individually for this order guide. No, these are already created. And if you want to utilize them while ordering something like a package in that case, you can use the same catalog item which you have created individually as well. In that case, you have standard laptop, you have external monitor, you have new email account as well. That is something you can request for. So these are different catalog items which you can add in any order guide and you can just select them and just click on next tab and then you can just check out. And you all the all the all the different departments. Now the thing is, it is not mandatory that all the request, all the catalog items will be processed, will be completed by one team. That's that's not possible because you have different things. So it might happen that you have different departments to complete these requests like new email account, exchange team, standard laptop, maybe IT team, VPN, maybe some virtual team or something. I'm just giving an example. So in that case, all these requests will be routed to the different teams with the help of tasks. Those tasks will be assigned to different team. Once everything will be done, you will get an email notification that your request is completed. That's how it works as part of the order guide. So if you have anything which which you want to include as part of the package, you can create order guides always. So it's totally depend on the use case or or business case you have, the requirement you have from your customer as well. Then we have Racket producers. So if I. Click on Racket producers. Now, here, this particular module shows the list of Racket producers you have in your instance. So as I mentioned, this will create the racket in one of the existing table. And if I open any one, for example, server reboot. Let's see which racket it will create. So you can see it has already selected table name. So rather than directly on the form, I will do one thing. I will show you in the list as well. So let me show that. So in that case, I will just add a table in this list so that you can see what all different tables we have. So here I have table name. I will click on OK. So you can see it is creating rackets on different tables, right? Change request LDAP server. You have a service category. That is something you can create incident table as well. And let's see in the next window. Yeah, I think mostly it's about change request. I think incident. It's totally up to you. You can definitely if I click this new button. I will be able to create a new racket producer and I can select any table I want, which I want to create from directly from the service catalog form. So it totally depends how you want to show to the users. Now, why service catalog is useful? If I if I give you the example of incident, because you will say that you already have incident form, incident application. Now, incident application is basically for ITIL people. That means the IT people who have to work on incident. But if you want end users who are not technical, who are just business users, who don't worry about different fields, you want them just to see four or five fields which are kind of maybe mandatory fields to process your incident. And that case, you will put those variables on service catalog racket producer and then you will get it submitted. So that's that's how service catalog racket producer is used to to utilize. And in this kind of business case, in this kind of use case, basically. But that's how what that's what we see about catalog items, order guide, racket producers. We talked about variables, variable sets. I will I will quickly show you those variables separately because we do have a module as well. So if you go a little bit bottom here, here we have all variables. So you can see we have this one of the variable. You can also select different types. So we have different types of variables as well. That means you can create different types of variables in service now for service catalog. Then we have variable sets. Now, this particular will show you variable sets. And I will show you what exactly I was talking about. Maybe it says common comments or maybe I will select standard employee questions. Now, this is a variable set created here. You can see. And that's what I was talking about. Requested for needed by now, this variable set can be added on all the forms or whatever forms, wherever you want. This kind of fields or variables, then you can just add this variable set and these two variables will automatically be added on the form. We talked about order. We talked about order form. Let me show you workflow and flow designer. So I will go to workflow. Here I will go to workflow. So I have this workflow application. And I will just click on workflow editor. These are the workflows which we have in our instance. Let me show you the service catalog workflow we have. So if I type here catalog, you can see I have this service catalog request. Service catalog item request. If I double click here, you will be able to see this workflow. This is the workflow we have. So you can see all the activities here like set requested. It will route the workflow as for the price selected by the user or the item selected by the user. In that case, it will go for approval. That's how you can customize design and you can create your own workflow as per your business requirement. But this is something you can attach to your catalog item. How to attach it. If I go to catalog item, any catalog item. So let me go to service catalog. And in service catalog, if I go to maintain items. And if I just open any, for example, standard laptop and you will go to process engine here. Here you can select which catalog, which workflow you want to select. So if you have a different workflow, customized workflow, new workflow, that is something you can select in this particular field. Now, this is for workflow. But you have one thing you have to remind that it is not just you cannot fill every every field here. You have to you have to fill only one of the record, maybe flow workflow, maybe or execution plan. Any one of them, not all of them. But that is something you can mention workflow. Then you also have flow designer. So if I type flow here. Flow designer, you will find this application flow designer and that you have this designer. It will show you all the flows you have in your instance and you can create your own flow and add it here. Then you can select that flow. But if you remember only that flow, you cannot create both of them, workflow and flow. Otherwise, your your your request item or catalog item will not process as expected. So you have to select either flow, workflow or execution plan. But this is how you can design your whole catalog item with the forms, with the variables, with the order guide, with the record producer, with variable sets, with workflow and flow designer. This basically completes the whole package of service catalog. Request output. There are three different task tables and records associated with service catalog. When user place an order to request a service or product, it creates records related to the request. Let's see the overall flow of these different tasks. When form is submitted. It creates a request record. Which basically gets created in SC underscore request table. It is the first request when users submits the form. After that, now this request, maybe let's say example, it has two different items, two different catalog items. That means user has added two different items in the cart. So overall, he's requesting one request that is your this request. Then we have two different items. One is laptop and another one is software install. In that case, we will have two request items. Which will create these records in SC underscore request item table, req underscore item table. One for laptop and another one for software install. Now, laptop and software might have different process and they goes to different teams to process the request as well. So in that case, every request item will have catalog task records separately. And those catalog task records will be assigned to different teams so that they can process the request. Let me submit a catalog item so that I can show you all these records. So if I go to service catalog. And here I will go to maintain items. Let's say I have this standard laptop. So if I click this. I will click on try it. So that I can see the form which will be visible to the user. Now here I will just add these options as well like optional software. So I will just select them. And then I will just click on order now. If I click on order now. This will be submitted. That's how user will order this item. Once it is submitted, it will show me the request number. So it says thank you. Your request has been submitted. Now this is the number I was talking about. That is our EQ number, which basically gets created in FC underscore request table. So we have this request number. So this is the top level request. Now, because this is the parent request. Now for that, we have an item which we have requested for and that is laptop. In that case that you will see here. So if I will click this one, that is the item included that request. It can have multiple items as well. And that creates RITM. That is something you can see here. As of now, it is waiting for department head approval. So if I go a little bit bottom, I have approvers. Let me approve this so that I can show you the third task record. So if I just approve this, let's see what happens. It says it is approved. And if I go a little bit bottom, it is again asking for some approval. That is CIO approval. That's out of the box catalog item. So that's the reason I will approve this again. Let's see what happens. Basically, this is following the workflow. I think now you will understand better that how exactly. So whatever workflow you have added, what all approvals it should go, where exactly it should be assigned. That's what this catalog item will keep on following and keep on creating the record. And you will also be able to see that. Now, here we have order fulfillment. This is something stage, which I will talk about it later. Now, if I show you here at the bottom, here we have the third task records, that is catalog task. So if I open this one, you will see this catalog task. Now, this is the final task, the three tables which we were talking about. This is the final task. Basically, it is assigned to someone, to a team who have to work on that particular catalog item to process the request. So that's how you create these three different records on different tables when user submits the request. So these are all output of request catalog item. Request stages. When request is submitted by the user, then users can track the request by knowing the stages of the requested item. These stages can be created and customized by admins for different items as per the business requirement. So let's say an example that when laptop is requested. It goes to manager approval. Because it follows the different stages, that's the first stage manager approval. Then it goes to department head, for example. So that goes to department approval. That's the second stage. Then we have next stage where we have to configure the laptop. That means there should be a team who will fulfill the requirement. So that means they will configure it. So that can be another stage as well. And the last stage we will have that is delivered. In that case, that means employee or whomsoever has requested for that laptop has received the laptop. So that's how it follows different stages. Now, as I mentioned, these stages are not static. These are dynamic. Even you, if you have access in service now in service catalog, you can also create these stages. Let me show you these stages in my personal developer instance in one of the catalog item. So let's say if I'm going to catalog item again. Now, here, if I go to hardware, maybe I will just order this one. MacPro. I'm selecting these options. And when I'm ordering it. I will be able to see the stages. Even I can see the stages at the top of the request where it says stage field. But when I am requesting it, I can see what all stages this request will go through. So if I expand this, I can see all the stages you can see here. It is waiting for approval first. It might be manager approval. Then it has department head approval. These are all different stages you have for this catalog item. So this is specific to this catalog item. You can add any stage you want. It's totally up to you what stage you want for different catalog items. So these are different stages which any service now admin can customize. Let me create all these records which we have learned in this session. Catalogs, catalog item, record producer, and other records which we learned variables, variable sets. So let's learn about it. So I will show you practically how exactly you can create these different records. So for that, I will go to service catalog application. So here I have service catalog. So for that, first I will go to maintain catalogs. That is here I have my catalogs. And then you also have maintain catalogs. So what I will do, I will create a catalog first. So I will create a catalog, new catalog. Here I will mention demo for YouTube. I'm just I'm just giving a random name. Here I am. I'm the manager. And I think that's it. I will just manage. I will just mention here maybe this description. And I can just save it. So I have created this catalog. Now, under this catalog, I have to create catalog items, some categories. So let me create one category. So I will create a category. And that is again, demo for YouTube. And then then I have I don't have to select anything. So I will not select these things like icons and all. I will just submit it. So category is also created. Then I have catalog item. So let's create that first. So I will create a catalog item here. And I will give it a name as again, demo for YouTube, maybe submit. I think this will be really a good example. So I will mention submit. Training. Topic. So in that case, what I will do, I will select the category. So we have already created a category. If you will search, it will only show you the category which was created for this catalog. So I will be able to select this category category selected. I can I can put the details if I want. So I can put here I can put here as well. And then I have process injured. I'm not putting anything here. It's I'm just keeping a default execution plan. Pricing nothing. Portal settings. Nothing for now. In that case, I will submit it. That means I will save it. It is saved. The next thing you have to do, you have to create variables. But I also need to add variable set. So what I will do, I will just add existing variables set, which we already have in the system. So maybe I will select standard employee questions. Maybe I will select that. I think I will add this one. I will select this one. Put it here. Save it. That means this variable set will be visible on my phone. Then I have variables. So what I will do, I will just add a variable. I will keep type as single text and I will put the question that question which I want to ask from the user. So maybe provide. Provide. Training. Training. Topic. And if I press tab, the name will automatically be populated here. You can see that I can put the order. Maybe I will put the order as 50 for now. Yes, it is mandatory. So I need to put something and I can just submit it for now. Once it is submitted, you are done. So you have created variables, you have created variable sets. I'm not creating these UI policies and all. You have categories, catalogs. And if I click on this try it button, I should be able to see that. So you can see this provide training topic. I can mention anything like test. Here it is already selecting who is requested for and automatically populating as well. The current user. If you want to change that, you can change it from here. It says when do you need it today or when exactly? That is something you can mention here and just click on order now. Once it is submitted, it will create this request number. It is also showing me the stages access provide service completed. And if I click this, I will be able to see a request item I have. That is this is the requested item. You can see the variables. The person who will be working on this request item, they can see that what exactly the user has provided the data. That is something I can see here. And then I have catalog task automatically. Now, why exactly this these catalog tasks got created? The reason behind it, because it has it has selected that execution plan, which was on catalog item. If you will select workflow, it will follow that process. If you will add flow, it will it will follow that process. So it really depends what exactly you want. So these execution plans are basically by default. If you have some maybe a regular request, if you have any standard kind of process in your organization for specific items, in that case, you can just create them by default and keep selecting them, selecting them every time. At the same time, I can also tell you that if you will use workflow or flows, you can definitely make things a lot of customization and dynamic. When I say dynamic, create one workflow and you can drive your whole service catalog. That is also possible. Most of the organizations, they are still following that model. The developers have created develop all the developers, the developers of those organizations. They have created those service catalog items in that way so that they have done minimal scripting. However, they have they have followed the dynamic model. And that's that will be really helpful for you in order to save your time for development perspectives. In the future, you have to onboard a new catalog item. You don't have to write the workflow code again. You can just add those configurations and you are done and you can just onboard your new service for any customer you want. So this is how you create catalog item catalog. And this is how it creates different tasks. Tables and fields. Service now stores data in the form of database structure, and it has components like tables, records and fields. In this section, we will learn about tables and fields in service. Now, how data is stored in service now. Tables relationship. Custom and core tables. We will also try to create new custom tables in this session. Service now data structure. As I mentioned, everything is managed via database structure in service now. You have tables, which is a database component which stores records. Then you have records. Which are stored in a table and these records have fields which show the information about that particular record. And then you have list. Which shows the records in a table. The list of records, what all records you have in that particular table, that is what you can see in the list. Service now data related tables. As a service now administrator. You can access modules related to tables and columns. Under system definition in the application navigator, you will find three different applications. Tables. Which have records for each table you have in your service now instance. Even if you have tables in service now. But all those tables are basically have a different table where all those tables are mentioned. What all tables you have in your instance. Then we have tables and columns. Which shows an advanced view where you can see all the tables and their column details. Then you have dictionary. Which contains the definition of each table and field in the database of your instance. Go to system definition application. So I will type system and just type DEPHINI. You will automatically get the system definition application. We will go to tables module. This will show the list of all table records of your instance. Now this shows tables provided by service now. And tables created by service now administrators. As of now it is showing all the tables which are out of the box. Because I have not created any custom table yet. If I click any table record. I can see the details of that table. So let me go back. And I will try to search for user table. So if I type here user and press enter. I will get this user table. I can see the details of this user table. And some other configurations as well. Then you have tables and columns. Which shows additional details of tables and columns. Now if you select any table. Any table you have here. Then you can see all the columns. And if you click any column. Maybe this one. Then you can see more details. Which is basically the dictionary of that field. That is what you can see in tables and columns. You can also create new table from this view. You can create new application. You can search for some existing application. You can browse applications. You can also create indexing. If I go little bit bottom here. It says index creator. So you can create indexing from different fields of a table. Now what exactly indexing is? Indexing is a way to optimize the performance of a database. When query is processed. Overall indexing helps you to perform better searching. Because if you will have lot of data. If you will have lot of fields. In that case you need to do indexing. To improve the performance. Now indexing is not service now invented feature or word or terminology. This is something used wherever you have databases. Even you have indexing in your outlook. And you must have seen some errors sometime. Whenever you type any word in outlook. It shows index is not completed yet. You might see some kind of message in outlook. Then we have dictionary. Which shows the list of all columns of all the tables of your instance. Which is also called dictionary entry. And these are all dictionary entries. Tables. A table is a collection of records in the database. Where information can be entered. Tables have different rows and these individual rows correspond to a record in a table. Tables also have columns. Which correspond to a field on record or row. As I mentioned row is a record which shows the details of the record in the form of fields and stores the data. These are the fields on the form. Now apart from these fields of record. Every record of a table in service now is also identified by a 32 character unified ID. Which is called sys ID. And that's unique for every record of a table. Any table. Fields. As I mentioned earlier. Field is a column of tables which stores the actual data. It can be of different types like string, choice, reference, true or false. The major attributes of fields are field label. Which is the display name of a field for end users. Field name. Which is kind of back in name of a field and used in scripting as well. And then we have field value. Which is the data for a record. Stored in that particular field. Let's see incident table and its fields. So go to tables module under system definition. Click on that. Search for incident table. So I will type here incident. Here we have incident table. If I click this it will open up the record for incident table. If I go a little bit down. These are all columns of incident table. Here you have related links. Now under related links you have this show list. If I click this button. This will show me the list of incident records. That means the records which are in incident table. And this shows some columns or fields you have on this view. Now these are the values in rows for individual incidents. So all these values you can see on these different fields you have here. Now this view which you can see here it's a default view. Users can also personalize this view by changing the columns. So if I click here I can personalize this list that what all columns I want to see in this particular view. Let me open any incident. Now this is showing the details of this record on the form. You were seeing the details in the list first. But when you open that record you can see the details of that particular record on the form. Now this is again not showing all the fields of the table. The visibility of the fields on the form depends on the requirement you have from your customer. So it can be different for different organizations. Now these individual columns or fields they store data for individual record. Now as an admin you can configure these fields directly on the form. So if you right click on any field you will see some options. Now in order to configure this field configure the dictionary of this field you have to click on configure dictionary. Now this will open the dictionary record of that particular field. Now field has two types of name. One is column label which is visible on the form to the users. And it is also visible in the list as well. And then we have column name which is the back end name and used in scripting as well. You can see the type of field as well here. Now there are various types of field you can create in service now. You can also make the fields read only and mandatory directly from dictionary. And then you have some other options to configure the dictionary of a field for a particular table. Table relationships. As you have different tables in service now. These tables can also be related to each other in different ways. The first relationship we have is one too many. In which one table has some fields which are referencing to other tables. Like reference fields or glide list fields. As an example you can have multiple incidents as user table is on incident table referenced in caller field. This way user table has one too many relationship with incident table. Then we have many too many relationship. In which two or more tables are related to each other. As an example group and roles table which are related to group roles table. And lastly we have extended relationship. In which one or more tables can be extended from another table. Which are also inherited the fields from the parent table. So basically if you extend any table from any other table. You also extend the fields as well created in parent table. As an example you have task table and incident and change table are extended from task tables. You will find some fields on incident chain tables which are inherited from task tables. Go to incident list. So I will just type incident. And here I have list of incidents. Now if I open any incident. I can see this caller field. Now this caller field is basically referencing to user table. That means user might have multiple incidents and this is one too many relationship with incident table for user table. You can see this particular record is coming from user table. This is not on incident table. Then we have many too many relationship. In that case you have to see group table. So we have this groups table. Here. Then we have role table. Now both are basically related to each other with many too many relationships in this table. So we have this group roles table. And you can see multiple groups which have multiple roles as well. That means these have many too many relationship. Let's see extended table. So if you go to incident table. And if I open configuration of this table. You will see this particular field extends table. That means this table incident table is extended from task table. That means this table is called extended table. And that's how it's called extended relationship. Similarly you also have problem. So if I look for problem record. You will see that that is also extended from task table. If I go to table configuration. You can see it says extends table and it is extending task table as well. And I can open this particular table. And you have all these fields. So remember as I told you that this is a task table. Now incident and problem and other tables. They are extending from task table. So whatever fields you have in this table. You will have those fields on these extended tables as well like incident and problem. Types of tables. ServiceNow has different types of tables. Which are categorized as per the structure they have. ServiceNow administrators and developers need to know which type of table they want to meet the business requirement. Before starting the development and creation of a table. These tables are base tables. Extended tables. Core tables. And custom tables. Base tables. A base table is a table which is not extended from any other table. And referred to as a parent table or parent class. But extends other tables. As an example task table. Which is not extended from any other table. But extends table like change. Incident problem. Extended tables. A table which is extended from another table is called extended table. Like we have change table. Incident table. Problem table. Which are basically extended from task table. And the table which is getting extended is referred as child class. And the one from which these tables are extended is referred as parent class. Another example of base table is configuration item table. From which tables like hardware, software, applications are extended. Core and custom tables. Core tables are created by ServiceNow. Which are in the base system. And custom tables are tables which are created by developer or administrator. The example of core tables are task, change, incident. An example of custom tables which are created by developers or administrators like leave, mapping table or any metrics table. Like approval metrics table. In order to see base tables. You can go to tables module. And you can search for the tables which are not basically extended. They are not getting extended from any other table. So if I go to this column, extends table. And I put a filter here. That means I just put show matching. That means wherever extended from is empty. This extends table is empty. In this case you will see all the tables which are basically not extended. But you will also find task table in it. So let's see if I search for it. Yes you have task table here. And you can see extends table is empty. So that's how you can search for base tables. Now tables like incident, change, problem. They are core tables. So if I click here again and just look for incident table. So I have this incident table. Now these are core tables which came from ServiceNow directly out of the box for different applications of ServiceNow. So all the applications which are directly coming from ServiceNow out of the box. Those are core tables. Now let me create a new custom table. So that's how you will learn what exactly the custom table is. Because custom table is not available in ServiceNow out of the box. You have to create ServiceNow administrator. ServiceNow developers have to create as per the business requirement they get from different customers or clients. So as you can see I have this option here. So I will also create a new table and show you to add few fields. And show you that how exactly it works when you create a new table. What kind of fields you get automatically created when you create a new custom table. So if I click on this button new. You will see this table form. Here I can give the label name. Now as of now I am just giving demo space YouTube. Now the functionality we have in ServiceNow for custom table. When you press tab it will automatically create a name for you. You can see here. But the one thing to see. One thing to focus on is naming convention. You can see as I have created this custom table. It has automatically added you underscore. So wherever you see you underscore that is a custom table. If it's a global scope. We have never talked about scope. But ServiceNow has two different scopes global and private scope as well. But even if it's a custom table for private scope in that case. You will see the identifier for private scope as well. So here it shows the name of the table. Now by creating it if you want to extend it. You can extend it from task table. And I will show you it will inherit all the fields. So what I will do first. I will just create a random table without extending it from task table. I can also create the module for any application if I want. That is something you can select here. If you will uncheck it will just create a table. It will not create that module in application navigator under any application. So I'm just unchecking it for now. And then here I have dictionary entries. That means you can create columns fields for your table. So for example I will just add name. Now I will make it the type as strings. As I mentioned you can create different types of fields. So let me show you them. See we have 52 types of fields you can create. So as of now I will just select a string. Press enter. I will get string. Here I will select it. No reference. Max length will be automatically be selected. I don't want any default value for now. And I can just save it. Before that if you see we have some other tabs like controls. If it is extensible do you want to make it extensible. That means some other tables can extend it. That is something you can check this box. If you want some naming convention, numbering automatically that is something you can mention here. This is something role specific if you want to provide any role. So that these users, if users will have this role then only they will be able to access the table. Maybe read access, write access or delete access. So I will show you when you will create or save this particular record. Then we have application access. Then how people can access this table. That kind of configuration you can mention here. Now let me just save it first. Once this is saved. It is saved. And if you will go to columns. You will see some extra fields. Which you didn't even create yourself. Now these fields will be created automatically every time you will create a new table. Your custom field will definitely be there. But these six fields at the top will be created automatically. Like created by which shows the person who has created this record. That is what it shows. Then we have created the person when exactly this record was created. So whatever record will be created it will show that particular time. Then we have syspid the one unique ID which we were talking about. For each record. Then we have updates. If we have any updates to the record. Then we have updated by. Then we have updated when this record was updated. And then we have name which is our custom field. And you can add multiple fields you want. You can add here as per your business requirement. Now as of now it shows these fields. Now let me create another table. Which we will extend from task table. And you will see lot of difference. So if I click on new again. I will just close this message. Here I will select just demo YouTube. Task. If I press enter. It will select the name. You can also change it if you want. Now the important part is here extends table. So let me extend it from task. Now you will see the magic which I was talking about. That it inherits all the tables from parent table. That means this parent table we are talking about. So I am not going to create my custom field for now. And I am not going to create any module. Let's do that maybe you will be able to see that. So maybe we will add this module to maybe self service. Let's see if we can see that. So I have added this to self service. And I am going to save this. But before that let me check this auto number as well. We will have them. And that's it. And I will just save this. Once I will save this you will see it.all those fields. Let's go to columns. You can see we got these 69 fields which we didn't even create ourselves. Now these fields are basically from task table. That is what we were talking about because this has extended this table is basically being extended from task table. So it will inherit all the fields of task table. Let's add some custom fields on core tables like incident change problem. So if I go to tables, let me search for any table maybe like change. I have this change request. So for change management we have this change request table. So you have that opportunity if I go a little bit bottom here I can add any new field and I can make it visible on the form as well. So if I show you show form. As of now we have these fields. Now as a ServiceNow administrator, as a ServiceNow developer, if you have a new requirement to add any new field. So what they can do you can just go here go to form layout and I can create any new field like maybe I will just do test. Make it string for now. I will click on add. Now I will show you how exactly it will be added in the table as well. As of now I am creating it from the form layout but I will just show you. So I have here and I will save it. It has succeeded. I will close. You can see I have this new field test here. The custom field which we just created. Now I can show you this field in the table as well. So let me go to the table. So here is the table we have and if I see yep you can see here we have that test table. You can delete it as well if you want. So if I just cross this here and save it that field will be deleted. It's done. It's deleted and if I go at the bottom here and if I click on show form then you will not see that field anymore. You can see that field is gone because you have deleted it from that particular view from table configuration view. Table schema map. Schema map is a graphical representation of tables related to other tables. It shows the relationship between the tables. You can go to tables and columns under system definition. Select any table. Let's search for incident table. So if I select incident table. I have this incident table. Now here you have a schema map. So if I click on schema map I should be able to see the schema map for incident table. Now in this map it shows different configurations like you have reference tables, referencing tables, extended tables, show access to extended tables as well. That is something you can select here. So you can see like this incident is basically you have incident task. You have security incident. That means it is the referencing table. That means these tables basically they have a reference of incident table on this table. That is what it is talking about. Then we have other tables. You have like configuration item. You have change request. Where exactly you are referencing incident. That is something you can see. That means on incident you have these relationships as well. If you want to see the columns you can see that from here. That's how you can see a lot of details, some relationships directly from table schema map. And that's the reason it's called graphical representation. That what all fields you have, what all columns you have, how exactly different tables are related to each other. That is something you can see in this particular view. Access control list which are also called ACL. ServiceNow has different level of securities to access data into ServiceNow. This accessibility of data can be controlled with the help of ACLs. In this section we will learn about ACLs in ServiceNow. Types of permissions in ServiceNow. How to define access control for tables and fields. And we will also try to create new ACLs in ServiceNow. In my personal developer instance. Types of permission. ServiceNow provides different level of securities for a user before he takes any action in the system. The first security is login which is basically controlled on the basis of user group and roles. Login is also the first level of security which is mandatory to be authenticated before interacting with UI of ServiceNow. Next level of security we have is applications and modules. Once a user is logged in, the next level of security is visibility of applications and modules which is on the basis of roles assigned to a user. Logged in user. Tables and rackets. If a user has access to the modules, he can also see the list of records for a particular table. However, those records will only be visible and editable if the user has required access. These accesses for tables and records are based on ACL which are also called access control list. What is access control? Access control is a kind of security rule which is defined to restrict the permission of a user to interact with tables and records. Moreover, data we have in ServiceNow. It is the highest level of security which can be applied at table level, racket level which is called a row level access and then we have field level which is called column level access. Operations restricted. There are a number of operations which can be restricted with the help of access control rules for users like crude operations which is basic operation for any database. Crude is basically create operation. Users cannot create the racket if restriction is applied. If they have access, they can create the racket. So that's called create operation. Then we have read. Users cannot read the racket or field if restriction is applied. Then we have update operation in which users cannot update or edit rackets or fields if restriction is applied. And then we have delete operation and that's how it make crude. Now in delete operations, user cannot delete the racket if restriction is applied. So as I mentioned, it's a basic operations of any database. Users can do create, read, update or delete. With these crude operations, we also have some ServiceNow specific operations. So you can apply these restrictions on your different rackets and fields in ServiceNow. But you can add some actions operations specific to ServiceNow. That is execute. That means if restriction is applied, users cannot execute a script on a racket. Then we have added CI relations. In this, users cannot add relationships in CMDB. Then we have save as template. ServiceNow has a template functionality. If you will apply this restriction, then users cannot see that field to be available to create the templates. So you can create templates for different fields on a particular table. But if you will apply that restriction that only specific users should use that field for template, then it will be applied like the same. And users cannot use those fields for save as template. Then we have report on. Users cannot create reports. And then we have personalized choice. Users cannot right-click on the field and configure choices of the feed. So if you will apply some restrictions related to personalized choice, then they cannot right-click on the field and configure the options you have for choice fields. So these are the operations which you can apply in ServiceNow with the help of ACLs. Security modules. ServiceNow provides three modules where you can do configurations for security permissions of the platform. The first one is security module which is under system properties, which has different properties to configure the security of the platform. Then we have high security settings, which has properties to configure high-level security permissions of the platform. And this module is available under system security application. The second module we have under system security is ACL, where you will find list of different security rules on your instance tables. And as I mentioned, this application is available under system security application. So whenever you have to create some rules for different tables, for different records, and you have to put some securities, you have to put some constraints for different users, and you got the requirement from your customers, in that case you can create access controls. Access control list. Access control list is a list of defined rules which are called access control. These rules are created at tables, records, and field level. If you are a ServiceNow administrator, you can create or modify these rules. However, you also need to elevate the access to high-level security to work on the access control list rules. I will show you later that how exactly you can enable the elevated access. But to elevate the access, you should have security underscore admin role. Access control form and fields. This is the access control form which you will see while editing or creating rules in ServiceNow. The important fields of access control are type of ACL. Here you select what type of ACL is this. Most developers and admins use record type. However, you can also use other types like REST endpoint which is used for integrations ACL. Next field we have is operation. In this field you select for which operation ACL is being applied. Read, update, or others, which we talked about earlier. Then we have admin override. This checkbox will always allow admins to perform the operation regardless of any condition mentioned in the ACL which means it will override the ACL. So if you want admin to perform the action regardless of the condition you mentioned in the rule, then you have to check this box. But if you want to apply that security rule for all the users, even if he has admin access, then you can uncheck this box. In this section where you select the table, an object you want to apply the ACL. And this is the important part here. So you have to select the table and on which on which table you want to apply this ACL. And then you have to select the object. Now what are these objects? We will talk about it later. Then we have description. Here you mention the details of ACL which you are going to create. The permissions provided by ACL are based on three conditions which are mentioned in three sections. Required roles, condition which is mentioned here and then you have custom script. So you can write the custom code if you cannot achieve it with the help of requires role or condition. Then we have execution plan. Now here if you will click this button, you will see a pop-up which will show the execution plan that what kind of access you have on this particular ACL. What kind of ACL have been applied? That is something you can see here. ACL rule types. Now here I was talking about the important section where you exactly mentioned that which particular element, which particular object has to has to be configured for rules for security. So while creating an ACL, you need to provide the name where you specify which objects needs to be restricted. So you have three types of ACL which you can apply on. One is table.none. That means you select the table and you don't select anything in the second field. Now this type of rule is applied on the whole table which is selected with all the records. So if you want to apply security constraint for any particular table, in that case you can create this kind of ACL. Then we have table.star or asterisk. Now if you will select table, that means like incident and in second field you select star. That's another option you will see. Now this type of rule is applied on every field of a record in the table. So for example, user has access to the table. But if you want, the user should not see all the fields, that is something you can do table.star. So whatever code you will write, whatever condition you will write, whatever required roles you will select, it will be applied accordingly for all the records of that table. And lastly we have a table.field in which rule is applied on a specific field of the table. So for example, user has access to the table and all the records. But you want to apply rules on specific fields and you don't want those two fields visible to maybe some kind of roles. In that case you can create this kind of rule as well. Let's see these ACL rules in details. So in table.none, all the users who are qualifying the condition mentioned in the ACL can see all problem records. If they don't have access or they don't match condition as per the conditions mentioned in the ACL, then they can't see those records. That means they will not have access to the table. Then we have table.star. In table.star, all users who are qualifying the condition mentioned in the ACL can see all problem records fields. So they can see the problem records. At the same time, they can see all the problem record fields and they will have all the access. And then we have table.field. In table.field, all the users who are qualifying the condition mentioned in the ACL can only see the data in the field selected in that particular access rule. And if they don't have access and if they don't match the condition which is mentioned in the ACL, then they will not be able to see that particular field, the value available in that particular field. And the best part of ACL is, let me tell you, that it is also applied in reporting. So it doesn't mean that if user is not able to see the data on the form, they cannot see the data from reporting as well. And that's what we say that ACLs are the highest level of security you can apply in ServiceNow. How ACL works? So let's say example users tries to log into ServiceNow and he will try to access the racket. But before ServiceNow shows that racket data to user, it processes something in the backend. That means it tries to find ACL for the same object and also tries to find the matching rule. So whatever object user is trying to access, system first checks, do I have similar kind of access rule for that object? If the answer is no, so system did not find any matching rule, any kind of ACL for that object, then access is granted to the user. That means user can access that data. But if match is found, that means system found, yes there is a matching rule in the system for that particular object. Then it basically evaluate the ACL. So whatever condition it would have in that particular ACL, that will try to evaluate. And then it will pass the ACL. That means yes, I have found it, it will evaluate. So if it is passing the ACL, then it will grant the access. So if user is able to match the condition which is mentioning in the ACL, then it will grant the access. And if it is not passing the ACL, that means the condition which is mentioned in the ACL is not as per the user's role maybe, user's group maybe or whatever condition mentioned in the system. Then it will not grant the access. Access will not be granted to the user and user will not be able to see the data which he is trying to look for. That's how this ACL works in ServiceNow. Now let me take you to my personal developer instance and I will try to create some records and I will show you how ACL works. I will show you the ACL module as well. This is my personal developer instance. As I mentioned earlier, the first level of security in ServiceNow is login. So user has to be authenticated and login to ServiceNow before he access the data. So let me login first. So I will enter username and the password and press enter. Now as of now I am an administrator. So I can see basically all the data which I am allowed to see. So let me show you the ACL module first. So in application navigator, I will type access space control. If you will just type con, you will automatically get under system security, you will find this module. So if you will click on this access control, you will see the list of all ACLs created, all the rules applied and created for various tables of your instance. Now if I search for incident table for example. So before that I will do one thing. I will check if I can select table. But I have to do it in the name. So I will go here and I will mention maybe incident. Yep, so I have this incident. Now all these rules which you can see here, these rules are basically applied for incident management, incident table. And these are the ACLs for incident table and records. And you can see we have operations like read, delete, create, execute, write. We can also group them. So if I click here and I can just click here group by operation. You will see the different types of ACLs have been created for incident management. So you can see here. Now as of now you can see I am not getting this new button here. But you can get it. How? If you remember I told you in order to do that you have to elevate your access. Now in order to elevate the access, you should also have security admin role. So let me see. So if you click on your profile here, you will see this elevate roles. That means I do have that particular role to enable it. So that means I have security underscore admin role. If I click here, I will see this option here. I have to check that box and if I click on OK, you will see the difference now. You can see now I'm getting this access control new button. That means in order to enable this new button, in order to work on access control, you can see the data, you can read the data. But if you have to create new rules, if you have to edit some existing rules, in that case you have to elevate the role first and then only you can create new ACLs and edit any ACLs you have in your instance. Now let me show you some security rules which automatically gets created when you create a table. So I will go to tables module. So I will go to tables. So here I have tables. I will just click on this module. I will get this new button. So I will click on new. So I will create a random table. Maybe I will mention ACL demo. Press tab. Name will be selected. I don't want to extend from any other table. Maybe I will not create any module for now. I will just uncheck this and then I will just create few fields. Maybe just one field for now or maybe two. Let's create two fields. So one is maybe test1 and I will save this. I will put it as a string. Type will be string and then I will put test2 and I will make it as string as well. Selected and now I am saving this table. But before that let me show you some other options as well. So I have here controls. So you can see it says create access control. Now you can select any new role you want. That is something you can do. That means you can select it. You can select the role here and you want to create any access control. You can check this box or if you don't want then you can uncheck it. So as of now you can see I will create a role here and I can add as well. So you can also select different roles if you want. As of now it's just giving me. So maybe I can just uncheck it if I want or maybe check. But let's see the difference what exactly will happen. Then I have application access. They are just a configuration just to access the data for this table. So as of now I will just keep as it is and I will save it. So what difference you will see you can see. You will see that we have this role and I will just click on save. Now once you will click on save this table will be created. However you will see some extra records and as I mentioned some of the access roles will be created automatically with all those four crude operations create, read, write and delete. So these are the three, these are the four ACLs which will be created automatically. So let me open one of the ACLs here. So if I open this ACL, this is the ACL record. That means the access control rule which automatically got created. So you will see the same role here not any other condition. That is something we have not applied as of now because this is automatically created by default. When you create any table and when you check that box you get those ACL automatically applied with the role here. Now let's create another table and see if these records are created or not. But as you can see we have four roles basically, four access control rules and it has this particular role. Now what exactly it means? It means the user who will have this particular role can create the record, can update the record, can delete the record. That is what you can do in this table. If user will not have this role then they cannot. So let me create another table first. So I will go to tables and I will click on new and now I will just maybe just ACL demo second. This is second table we are creating. Press tab. I don't want any module right now and I will just click on columns and I will mention here test1 and then I will give a type as string and then I will mention test2 and here I will make it as string again. That's fine this one and in controls I will uncheck this box and I will save it. Let's see what happens. So as I have unchecked this box and I have saved the table, you can see it has not created ACLs automatically and with that role as well. No roles have been applied. Now in this case you have to add custom roles because it has not added any role automatically. Now let me show you how exactly this works. So maybe I will do one thing in my another browser. I will open a same instance but I will impersonate a different user or maybe I can show you in this particular in this particular session as well. So let me let me do that first. So in that case I will go to maybe I will I will create a module of this particular table. So for that I will maybe create another table or maybe I will just add this particular module in any application maybe in self-service. So I will click on this. I will create a new module. So I will go here and I will do link type list of records. Here I will select the table which we have just created. So I will type ACL. I'm sure I will get that table ACL. So we have this demo and demo second. So we will create it for both the tables and I can just as of now nothing. I'm not adding any kind of role to to access the module. So I will just put here maybe 10,000 and title I can give maybe demo ACL and I will submit it. So it is submitted that means that module is created. Let's see yep we do have let me check I think as of now it's not added but we will see. I'm sure it should be there. Yep we have it here demo ACL. I think we wanted to add it on the top but it is at the bottom but that's fine. That is still okay. Then we have demo ACL second and then I can add here list of records and I can select ACL and I will select this table and I will go to visibility nothing and I will just click on submit. Now I am logged in as an administrator as you know that. So I have this particular module here. I don't have any records I have but access to create the records here. I have this ACL. So I can create anything I want here. I can submit it and I can see the records. Now if I go at the top I have this demo ACL second. If I click here, here also I have create access you can see and I can create the record. So maybe I was just do like this and I can create the records here but let me impersonate with any other user. So I will click on impersonate and let me impersonate with ITIL user. If I go here now I can see the table the module basically which we created. So if I click here you can see I cannot access because there was no security rule. So I cannot access this table anymore and if I go bottom and if I click here let's see the difference. Here as well because I don't have that role which was assigned to this particular table. Now how can I get access to this table? So for that I have to end the impersonation and now I have to go to ACL. So if I go to maybe before that before because we already have four ACLs for demo ACL table. That means the ACL demo table we created we have those four ACLs. So let's see if I can access that data but for that what I can do I can just go to sysuser.list. I will access that user first so I have ITIL. Here I have this ITIL user. I will add that role into this user. Now if you remember the role we had I think ACL. Yep we have this role so I will just add it. So I have added this role to the user. Now let's see if this user can access this particular module records that means table records. So I will impersonate that. I will go to ITIL user. I will impersonate ITIL user now. Let's see so if I go a little bit bottom I can see it. Let's see yep you can see that I can see these records. Initially I was not able to do that but now I can see that. Now let's change something else. So I can see both the fields the data we have in both the fields I can see that. Let's say one thing I want to hide this particular this particular field data from this user specifically maybe. Or maybe I don't want to I just want to show this data to specific users. So in that case what I will do I will first end the impersonation. Now if you will get this requirement from your customer because you have to hide the data and you have to put some constraint for a specific fields. In that case I will go to this table first. How I will do that? I will go to the list first. Go to securities. So we have the security rules. So as of now you know we have just those four security rules for this particular table. Now this is just for all. That's the reason nothing is here. So let me show you that. So we have those four rules here. So what I will do I will first elevate the role. Click on OK. Now why we have not that elevated role because that's session based. So if a session is gone there's a limited time and I have to enable it again. So I will click on create new. So I'm going to create a new access control rule for a table. So in that case it will be record level and I will do read. Here I will add that particular table. So that is ACL. If I select that let's see yep we got it. ACL demo and here I will select one of the field test 2. So maybe I don't want to show test 2 field to few users. So in that case what I will do I will mention that only admin people can see that field data. So if I will click on save. It is applied. Done. And I can click on continue. It is done. Let's see if it works or not. So I will go to impersonate and I will go to idle user then. And if I go a little bit bottom and if I go to demo ACL. You can see now I cannot see that field anymore. I can't even access that data even if I open the form. Let's see if I am able to see that. You can see I'm not even able to see that field anymore. The data and our field. This is how you can apply the ACLs and it has really great powers. So if you want really good security rules to be applied always rule always use ACLs. If you want to restrict some data into service now that's because you have some sensitive data because you might have multiple users in logged into your instances. So in that case if you have a critical requirement from your customers from your clients in that case you can apply that rule. So this is how you hide the data from from just for different users for your customers and clients. And that's how you apply ACLs. Data import. ServiceNow administrators and users can import data into different tables of ServiceNow. In this section we will learn about how data can be imported into ServiceNow. We will learn about import sets and transform maps. We will learn about coalesce fields and we will also learn about data policies to import data into ServiceNow. Need of data import. Before we learn about importing data into ServiceNow it's important to know why we need to import data into ServiceNow system. You might get the requirement from different users to bulk upload the data into ServiceNow in different tables so that you don't need to do manual creation of those rackets. As an example you can import the data from Active Directory. Users and groups data can be imported from Active Directory which get inserted or updated into user or group table respectively. You can also import data from HR system. Some organizations they also import employees data directly from HR system into ServiceNow. You can import knowledge articles. So you might need to import knowledge articles from external system or word documents or any other format. You would also get the requirement to import assets. You might need to pull assets information for another system or applications and put them into asset management table or CMDB tables. We will learn about CMDB in our next section. Ways of data import. There are different ways you can import data into ServiceNow. It is important to know when to use these ways to import data. The first way is import XML which only imports XML file that is also for the table you have in ServiceNow. So this is the mostly used by developers or administrators to move data from different ServiceNow instances. Now you will find this feature when you open the list context menu. So if you are an administrator and you will click on the list context menu you will see this import XML option. When you will click on that import XML option it will show new screen to you where you can upload the XML file from your local system. Now another way is to import data as import which you get on the same list context menu. That means import uses the functionality of import sets and transform map which is the core feature of import data into ServiceNow. When you click on import you will see new screen to upload the file which you have in your system. You can only import Excel file with this option. You will also find an option to download the template, provide the data, mention the data in that Excel sheet and then upload that data back into ServiceNow which will update the tables in ServiceNow. And last we have import sets which is the core functionality of ServiceNow for importing data. Import set is used to is used data from various sources. So basically you can import data from various sources and map that data into different ServiceNow tables. A user with admin or import underscore admin role can import data into ServiceNow. ServiceNow has a separate application called system import sets which is used to manage imports in ServiceNow. Import sets components. Let's talk about more about import sets and its components. So there are various components in import sets which process the import of data into ServiceNow. First is data source. A source of rackets from where data needed need to be imported. It can be a file on a network, it can be an attachment in ServiceNow, it can be LDAP or it can be any kind of JDBC connection with ServiceNow. So data source is something from where exactly you want to import that data. It will be a file in any system you have. All the possibilities I mentioned. Then you have import set table. Import set table is a staging area for rackets to be imported from source. Before data is inserted or updated into the actual target table, it stays in staging table which has fields related to the source data and the name of this import set table is based on the name of the file you try to import. So it's kind of a staging table. So before putting anything into the real table, the actual table, you put that source data first into this table. Then that data is being transformed. Then you have transform map. Transform map is used to create the relationship between fields of source data and target table. As an example, I can give you a quick example. Like you have incident table and you might have some data maybe outside. Maybe with Excel or maybe some other data or maybe some other source. So it is not mandatory that other source also has same kind of fields. Maybe you have an Excel sheet which has just two columns. Maybe in place of number, it says something else or maybe numbering. The second column you have maybe assigned to person but here as an external source, Excel sheet, you have maybe assignment. Now how would you make sure that these two columns should go into the incident table in ServiceNow and should only update number and assign to. Now here it comes the transform map where you map the fields and that's how it comes mapping assist. So mapping assist provides a visual way to map fields of source data and target data. You map them that which field should be mapped to what field of your ServiceNow system. Mapping can also be done automatically. So in transform map when you will create the transform map, ServiceNow will give you an option to create these mappings automatically. Then we have coalesce. Coalesce is used to trigger a check before importing of data. If it is enabled on a field, then system will check for existing record. If match found, the same record is updated else new record is inserted. Coalesce is I would say very important functionality of importing data into ServiceNow. And then we have target table. That's the main table where you have to import the data. So after all these processing, the data will be imported in this actual table and that is the target table. This is my personal developer instance. I will start with showing the example of import XML. That is one of the way to import data into ServiceNow. So let's say if I go to problem or maybe incident. I will go to incident. I will come here. I have these records. Maybe I will just here and I have this short description. So I will open this record. Here is short description is empty. What I will do, I will export this data and format I will take like this XML this record. So I will click on XML this record. So I got the XML record. What I will do, I will try to edit that record. Now the XML file is opened here in edit mode. Now you can see whatever fields you have on incident table. When I exported that record into XML, it pulled out all the fields I have. You can see all the fields in XML format. So in that case I would look for short description and I will try to update it. So let's see where we have short description. So if I search for short description. So here I have short description. Now what I can do, I can remove this and I can copy this. I will provide a value here and then I can just slash and then I will do this is a demo for importing data. So I have I'm done with this. I will close this. What I will do, I will save this XML. So I should have save. What I will do, I will just click on save. So this XML is saved. I will close this. I will go back to my instance. I am here. Now if you remember to import any data via this import XML, you have to go to the list view and one thing I want to just make a note here that you can open any list you want. It doesn't matter. ServiceNow will automatically recognize that table and will insert or update that table. It will not import that data into somewhere else. So maybe let me show you that as well. So let me open problem. Let's say so I am in problem. I'm just doing import XML. So here is the feature. I will click on choose file. I will go to the downloads where my file was downloaded. I will select the same file which I have just edited. I will click on upload. It's done. You don't get exactly the message. It's done but but it's done and how will you test it? I did it from problem a problem list but I will go to incident and you will see the magic. You will see the magic and if I sort this out. There is my incident. Let me do it all. Maybe let me search with import. Yeah see this is the same incident which we exported and you can see the data here now. This is a demo for importing data. Now I'm not saying that now why exactly we use this sometime because you use it because sometime you make those changes for the same table you make those changes in different lower instances and then you can import that data into your different environments like maybe production your UAT or different environments dev instance or sandbox instance other instances you have that's what you can import data into different instances so if you have done if you have made any changes in one of the lower environment and you want to replicate those changes into other instances as well this is how you can do that but as I mentioned you should be a developer or administrator or all you should be an admin then you can do this feature. Let me show you the import set application which you were talking about. So if I go here into application navigator and here I type system import so you just type I am you will get this application called system import set. Here you can see we have this like application and you have a lot of modules here so starting with load data you have create transform app you can create transform app manually so what I will do I will show you by importing some data but before that I will I will just try to show you some modules the what exactly they are so starting with like load data so if I click here you will see I can load that data into service now. Now here is the one which basically creates that staging table and load that data you can you can do from here then we have create transform map so as I was talking about you have to match the fields in that case you can create that transform app from here so you can create new or while you will work on the load data if you will continue to do that you can also do it automatically that is something you can do it will automatically follow the same process. Then you have run transform now in order to load the data you have to import the data and then push that data into this table then you have to click on this run transform this will run the transform but as of now it is asking that create load and import set first which we have not created yet. Then you have some like one administration section here you click on data sources which I was talking about that is one of the component here you can define different data sources so for example I can I can show you let's say we have this CS3 maybe LDAP users so here you have example LDAP users now this will be directly connected to the LDAP that's one of the source you have so I can I can just go back so these are the examples you can also have some attachments as well if I see you have any CS3 maybe or maybe any other I think I don't I don't think we have any other example where I can show you the attachment but that's okay let's let me show open this one I think this is something related to the FTP server so you your company must have as FTP server and you can do that this will be done with the help of mid server but that is something you can do as well. So then this is about data sources so you can have multiple data sources then you have robust import transformers that means you can you can mention that I think this is the something which I think came later this was not before in the past you can have the robust import set transformers that is something you can create here then we have ETL definitions I think here you can define some definitions then we have transform maps now whatever transform maps you will be creating overall you create data source you create import set table you also create transform map for each transformation you do you always create a new transform map but it is just one time for a particular activity that is something you can do then we have schedule import so you can that's a good thing so if you have any kind of data source where data is always available maybe every day or or every every six hours or so in that case you can schedule the imports that means a system will automatically run the job it will try to import the data which that source has and just put it into the system that is how that is scheduling works so overall you can import the data by schedules as well frequently as well then you have advanced option here advanced section where you can see all the import sets now every every data being imported into service now via this import sets functionality it is always being tracked but when I say tracked it creates a number it creates a record and shows you all the details about that particular import whether it was success it was fails it got some errors that is something you can see in import sets so whenever if you are getting any functionality if you're getting any data into service now into into into via import sets in that case you you can always go here and check if anything is failing or everything is passing that is something you can see here and you can try to troubleshoot for any data issues you will get then we have concurrent that means it can be like concurrent import sets you have concurrent import sets job as well these are some functionalities which service now came up not not I would say recently but yeah they came up later which was not I think in the beginning when they started with this application then we have progress here you can see the progress of your import that is something you can see you can see transform history that if while transforming the data did you get any issues how many data got inserted updates ignored skipped that's how you can see here runtime completed state when exactly it got started that is something you can see here then we have transform errors so if you will get any errors in during your import you can see here which what target record what was the issue that is how you can see so that you can troubleshoot and you will I'm sure if you are getting any datain your organization, if you will be importing the data, I am 100% sure that you might get a lot of issues while importing the data, unless you are maybe playing safe from the beginning. But sometimes I think it happens because you have a hell of a lot of data. So sometimes you forget some kind of prerequisite or pre-checks, which you have to do as a developer or administrator. But that's still okay. It's not something out of the world. You can just try to troubleshoot those issues and just fix them and that's it. Then you have import log. Here you will find the import log. Import logs, basically we can delete them. So you can see we can cleaning import sets. Here it runs a job and it clears the old imports because we don't need these data. It does not need for us. We don't need this kind of data to keep the import logs, maybe max seven days or maybe 10 days or so. So you can change this days, but as of now it's just seven days. Then we have, if I go a little bit bottom here, we have another section, import sets table. So whenever you will create a new import set table, it will automatically be added and shown here in this particular module. So here you have import sets table. So whatever import sets table you have in your system, you can see here. Import sets table, I have a cleanup, as I mentioned, you will get a cleanup. Then we have schedule cleanup as well. You can schedule those cleanups that every maybe seven, all the data before seven days should be deleted. That is something you can schedule here. So let me do one thing. Let me show you an example by importing some data into ServiceNow so that you will understand the whole process practically. That is important. I can show you the PPT, but it's better to show you practically in the system so that you will have the right understanding. So what I will do, I will start with creating an Excel suite first. Let's say example, because that's the best example I can show you because I don't have any kind of FTP source. I don't have any kind of maybe JDBC connection right now or any other network file server. I can just show you with the help of Excel format. So let me create some data and then we will see how exactly you will be importing that data into ServiceNow. Here is my Excel sheet. Now, before putting that data, before creating that data, what I will do, we will first select the table in which table we will import this data. So I don't want to import that data into ServiceNow incident or change or problem table. We will try to import this data into custom table we created. So let's go here and let's check. We had this table, if you remember. I think we created this table, demo ACL second, this one. So we will try to import that data into this table. That is something we can do. So if I go to table and if I say I had, I think, these two fields, right, what I will do, I will also create a number field because I want to show you the colleagues. So if I do auto number, I have this ACL table. So I think, yeah, that's it for now. I will save this. Once I will save this. I think I will have that number column as well. So if I go here, you can see that number column got added automatically. Now we will have this test one. So I will also see these two, maybe column name, column name. Yeah, we will import, we will just select this field to be available on this view. So we have these three fields. What I will do, I will just go here. And I will try to try to put some columns and data. So maybe here I will I will mention a string and that's that's see I'm just putting any column name, maybe string one. And here I am putting a string. To. That is what I am putting right here. So maybe you're not able to see. Let me just increase the zoom it so that you can see that. So in that case, I have a string one string two as of now, what I will do, I will just put some data. So maybe this is maybe just like this. I will I will do import one. Now this is the data I'm putting here, so I will do import one. Data one and here import two so that we can recognize whether this data was inserted or updated into the same field. So we have this import two now, because as of now that table I think just has one or two records. So in that case, what I will do, I will save this. I will give it a random name. So I will give it as maybe demo. Demo for import. So when you do demo for import format is Excel. We will make it on desktop. That is OK. And I will click on save now. So my this Excel sheet is saved. Now what I will do, I will go to my instance. Here is my instance. Now, in order to import the data, what I will do, I will go to system import sets. So here I have load data. So first I will click on load data. Because I have to first import that data, load it into service now staging table first. So here I will select this create table. You can select the name as well here. So maybe I will do demo. Demo for import. That's a table name we are selecting here. I will select the file because I don't have any other data source. I will select the file. I will select the file directly from my local system. So I will go to desktop and here I have that file. So I have this demo for import and then I will just click on submit. So it says sheet number one, header row one. So in that case, that means header row. That's a one row where you can define where exactly which one is your header row. That is something you can define here and just click on submit. Once you would click on submit. Now the import process has started. So what it will do, it will first process it and create that table for you. So you can see it says complete. We have been able to import that data into staging table successfully. So that says complete success. And here I have process two. It says inserts two. We have two records overall and that's true. We have two records. Now the next thing you have to do is create transform map. That's the next step. So you can see here it says next steps. So what I will do because as of now this data is not aware and which is the target table. We don't know as of now. System does not know about like as a user, as an administrator, you know about it, but system does not know. So in that case, I will click on create transform map. Now here you are going to map those fields. You are going to make those relationships. In that case, I will click on create transform map. Now here you are going to make those relationships. In that case, what I will do here, I will just do demo. I think we can give the name as demo for import. That's it. That's our transform map name because that's also kind of another record. Here are some details like active. You can just run business rules when importing the data. Do you want to run the business rule? That is something you can do. Enforce mandatory fields. If you want to do that, you can do here. Copy empty. If there is a field empty, you still want to copy. You can check this box. Create new record on empty colas fields means if colas fields, but as of now we have not selected the colas fields and I will show you what is the utilization of colas. In that case, what I will do, I will just go to target table. Here I will select the target table we are talking about. In that case, that table is ACL. I think we had ACL demo second, so I will select that one and I will click on before clicking on submit. Here is the deal. You have to do auto map matching. I think auto map matching will not work here. We have to go to mapping assist. In that case, I will click on mapping assist. Before creating that transform map, I'm going to mapping assist. These are the fields for target table we have where we can put the data. Now this is something we got from our staging table and the fields which we got from our Excel sheet. Those are you will see here. I'm sure here we have a string one. We have a string two. You can see we have a string two and that's it. We had two columns in that Excel sheet. So in that case, I will do one thing. I will map this to test one and then this to test two. That's it. We are not going to put number. Numbers should come automatically because that's a numbering. It should come automatically. So what I will do, I will click on save. We are done with mapping right now. Relationship is done. Transform map is also done. So you can see I have mapped those fields. It will show you as of now, nothing is colase. Even the number is not colase yet. You can do that mapping if you want, but you should have that data into your Excel sheet. So as of now, I'm not going to do that. What I will do, I will just check. So I will just click on transform now because I'm done with table transform map creation, mapping assist. Now I have to transform this data into the actual table. So in that case, what I will do, I will click on transform. It will show me the processing. Now here it will ask me, ask me which transform map you want to select. In that case, it will auto select the transform map which we have to run. So I will just click on transform map and here is the I set basically import set. So I will click on transform. And it's done. It says success complete. And if I go here, here's the import set log. You can see it says two inserts. So two records were inserted, no updates, nothing ignored, nothing is skipped, no errors. So that means two records were inserted. How exactly I can cross check it. I can just go to the same table. If I go here, you can see we got import one, we got import two, we got data one, we got data two. These are two records which you had in that Excel sheet. Now let's understand about Coalesce, that how Coalesce would work here. So in that case, what I will do, I will first add the number field here, number column. So you can see the first record because it was created long back. That's the reason we didn't have numbering at that point of time because we enabled numbering today. And now we have those numberings automatically. Now what happens if I put those numbers in the Excel file, which I'm importing? What would happen? So here you will learn about the Coalesce field. So what I will do, I will just put these records, maybe say maybe ACL this. I will just copy this number and I will go to my Excel sheet. Here I have, I will just type numbering, not number. I will type numbering. And import two, I will just mention that particular. So I will copy that. So I have this number field here and then I have this one. Match destination formatting. Okay, it's done. So our Excel sheet is ready. I will save this. What do you think if I will import this data? Will it create new records or will it update those records? So let's take a look. So I go here, I go to system import sex. Here I have load data. Do I need to create a new table? So the answer is no, because we have already created that table. So I will just go to existing and I will select that table and that table will create demo for import. I will keep selecting the file. I will select my file here and submit it. I will click on submit. You can see it says two inserts. That's okay. That's still staging table. So it has to, I think, insert that data first. Then I will run the transform. Now, do you need to create transform map? Answer is no. The reason behind it, because as of now, we don't need to map anything. Basically your transform map was already created, but there is one tweak here because as of now, that transform map doesn't have that number field mapping. That you don't have as of now. So let's say I will just click on run. If you will click on run, it will insert that data. So I will come here and I will click on transform. That is done. And if I come here, it inserted two records. And if I go to self-service, we will open it a new tab. You can see two more records were inserted. Two more records were inserted, but this time you can see numbering was done automatically. But you mentioned those two numbering in the same records, the two rows you have. So ideally you want them to update, not insert. So in that case, what do you need to do? You have to put the colleagues in your transform map. How can you do that? Because you have already created your transform map. In that case, just go to your application again. So you go to system, import. Here you have transform maps. The one you just created, let's see that. Here is the one. Open this. Go to mapping assist. You have to match that number as well. So in this time, you should have that numbering. We have this numbering. So do you want to match it? So I will say yes. I will say here, basically no, because we don't want to match that numbering or we want it. So I think we should map it. So I will just match it and I will save this. In that case, even if you have matched it and if I import the data, it will still insert the records. Do you want to see it? Let's do that again. Because that's, I think that's how it will give you better understanding. Maybe let's say I'm changing this to data three. Let's say I'm just doing it as data three. And here as well, I'm changing it as data import three. This is to show you. So let's see if it imports the data, updates the data or insert the data. So in that case, I will go again to load data. Here I will select existing table demo for a second. That's already selected. I will go to demo for import, submit, go to run transform. You can see two were inserted. So it captured those two records. Now it is already selected. I will click on transform. It will transform the data. And if I come here, it has inserted again. And if I come here and refresh this, let's see. Yep. You got six records now. So it is still not updating it. How it will update it. Let me show you. So in this case, I will come here and I will go to my transform maps. Open my transform map, which I just created. And I will go here. Now here you have this field mapping and you can define the Koles field. Now this is a really important selection as a developer or administrator because you have to define Koles field, which is really you want to make sure that that data you want to update always. So in that case, numbering is the one which you definitely don't want to insert new, right? Because if it's the same, numbering is the same. In that case, it should not insert new record. It should update the same record. So in that case, what I will do, I will just double click on it and I will make it Koles. That's it. You're done. It is done. So you will see the difference of the behavior now. So if I go to my Excel sheet here, so you have these two records. So what I will do, I will again save it. I think we didn't change it. So let it be like this. I think we can just click on save if nothing got changed. I will go back to my instance here and this time I will click on load data. You will see the difference. And but before that, I think let's let's change the data. Let's make it import four so that we will see that only these two records will be changed in your instance. So we have made it import for data for I have saved it. I'm going back to my instance. Let's keep selecting it. Click on choose file. I will select my file and I will just OK. I already selected OK. No file chosen. I will select my file selected. I will click on submit now. You can see because in staging table it will always say insert because I don't think it would upgrade it until until that that that particular record is there. So but that's OK. You can click on run transform now. If I run transform now, you will see that difference and I click on transform. It is success. And if I go to my import sets, here is the difference. You can see total was two. That means it did some two activity to records, but it was not insert. It was update. So if I go to this list and if I refresh this, you will see that I refresh this and you will see the data change here. Import for data for for these two records which were in that access sheet and they were also mentioned as Kole's fields in this system. So that's how that's how you can you can define Kole's fields and make sure that you are updating the records. It's totally depend on your business case, your use case, your requirement from your customer. But that is how you can define and that's what Kole's field is. Is a very, I would say, very critical functionality of importing data into ServiceNow system. Let's talk about another functionality that is data policy. As of now, we have not talked about UI policy because data policy is somehow related to UI policy as well. UI policy is something you can put something on the UI and data policy is something that same thing will can be applied into into data when data is being basically imported. Now, it might happen that you might want to put some kind of mandatory checks that this particular field is mandatory. In that case, you do not want that data to be inserted or updated. That means that field should not be blank. So in that case, what I will do, we have this particular table. So what I will do, I will create a data policy for for this particular table first. So maybe I will go to data policy and I will just do make test one mandatory. So test one field will be mandatory. It will be at data level. That means nobody can insert the data at the data level. So I will just make test one mandatory. So I will just make test one mandatory. So test one field will be mandatory. It will be at data level. That means nobody can insert the data even during import. So in that case, what I will do, I will mention I think I don't have to put any kind of condition. I can just save this. And you can see we have these options here as well. Apply to import sets, apply to soap, apply to UI policy as well. That's how these data policy works. So yes, we need to check this box. So I think that's an important point. In order to apply these data policies, you have to keep this checkbox checked. That's very important. So in that case, now I'm going to create that data policy, the action, what exactly the rule I need to apply. So I will apply it on one field that is the test one. And I will make it mandatory. So it is mandatory, true. And I will click on submit. So in that case, if that data will not be there in that field, our data will not be imported. So what I will do now, I will go to my Excel sheet. And I will just do like blank this data. So maybe I will, I will keep one data and one not. So string one is the test one. So maybe I will just cancel this one. And here maybe I will just do import, import data policy. And here, and here, and here I will not put anything on maybe I can just put here import five. And here I can put import six maybe. But you can see I'm keeping this particular feed blank. So let's see what happens. So I'm saving this. I'm going back to my instance. I will go to load data now. Click on I think it's already selected. That's a good thing. Like it already, I think, keeps your last selection. So I have this one now. I will click on choose file. I will click on demo for import. So the file which we have, I will click on submit. It says two inserts. That means I have two data. That's okay. I will click on run. Transform. Let's see. Then I will click on transform. It's done. It's succeeded. But let's see if I click on transform here, import sets. It says total and it says zero and it is skipped. So here you got to skipped. If you click here, it says unable to resolve target. Colis values not present you numbering. So if I see my data, this is not available. That means it is very important here. So I think we forgot that. I think it's it is saying that you have to have those colis numbering. So in that case, what I will do, I will remove this. I won't put that number because if you are putting that data, then it will ask for that. So what I'm doing, I'm just closing this. I am going to I think this is really good. If even if you are getting errors, you can just learn new things. Why you are getting that error. Maybe I will just do it again. I will go for it and I will click on submit. Run transform. Let's see what happens in this case and I will click on transform. Success. I will go here. And it says again, colis fields. OK, it's colis values not present. That means it is asking for what ideally it should create those records. It should not if colis fields are not there, it should not. Let me let me check the transform map. And why it is why it is ignoring it. Why does keep on asking colis fields. It says create new record on colis. I think that's the selection we forgot. So I think you learned a new selection. So colis fields not indexed. That's OK. Cancel for now. And here what I will do. That's a very important thing. So colis field. That means, yes, if colis field is not there, you want to insert the record, you can do that. That's kind of mandatory thing you can also apply. And so I can just save this. So once it is saved, what I will do, I will load it again. I will go here. We have not done the indexing, but it's it's it's really best practice. I would say you should index as well. I will select the file again. And I will click on submit. Once I will click on submit, let's see. It is to insert. I will click on run transform and I will run the transform again. Success. And if I go here, let's see what happens. Import sets. Awesome. So you can see it inserted one record, but not the other one, because it says data policy exception where the field is mandatory. Now, this is how you can utilize data policy as well for importing the data. So if you want users not to not to import some maybe some junk data where you you have to you have to get mandatory fields in the system, you can write data policies into that table onto those fields so that you are getting the right data into your actual ServiceNow tables. So this was the whole whole session about system import sets that how you can import data into ServiceNow. I hope this is really helpful for your organization, for you to import data into ServiceNow with different with different scenarios, with different functionalities we have in ServiceNow. Configuration Management Database, that is CMDB. In this section, we will learn about CMDB in ServiceNow, CMDB tables and structure, CI and relationships, CI dependency view and CI class manager. We will also try to just edit some or configure some configuration items in my personal developer instance. And we will also see that how exactly you can utilize CMDB items in different tasks or records. What is CMDB? CMDB is Configuration Management Database. It is a series of tables and fields which stores information about configuration items managed by organizations. It also stores information about relationship between different CI's, that is configuration items. What is configuration item? CI is a tangible or intangible device or application in CMDB. Example, computers, servers, business service, a database instance. The laptop or computer you get from your company, it is a configuration item. A server on which you work upon, it is a configuration item. Application you use in your organization, that is a configuration item. CMDB application. ServiceNow has this out of the box application to manage CMDB, that is called configuration. And you have a lot of modules under this application, which you can utilize to manage CMDB data in your organization. This is my personal developer instance. You need to go to application navigator and type configuration. When you will type configuration and just come a little bit bottom, you will see this application and that is the application where you can manage your CMDB. It has various modules, as you can see here, like CI class manager, CMDB groups, CMDB query builder. A lot of modules are there to manage your CMDB data. CI form. A CI record contains information about a CI. The first field we have is name. That is the name of the CI. And the configuration item you have, you will mention the name over here. Then you have asset tag. It's kind of a unique tag for all CIs you have in your organization. Then we have manufacturer, which shows the company who has manufactured that particular CI. Then you have asset. Here you mentioned the associated asset you have in your asset management table where you track all your assets. That's what you can mention here. Then you have class. Now, this is something that which class the CI belongs to. That is something you can define here. Then you have company. The company is something that which customer has this particular CI. Then you have serial number, model ID and then assign to, which is kind of a primary person responsible for this particular CI. Then we have comments. If you want to provide any kind of comments, you can mention here for this particular CI. Then we have configurations. So this section shows the configuration of that CI and you can see different fields we have like host name, OS domain operating system, OS service desk, DNS domain, IP address. These are the configuration of a particular device. That is something you can define here. All the configuration you have for a particular CI that can be defined here. And the next section we have is related items. Now, in this section, you can see the related items. That means all those CI's which are related to this particular CI, you can see in this particular section. CI dashboard view. You can also see more details about a CI via dashboard view. It shows that how much healthy your CI is as per the metrics defined related CI and tasks associated with the CI as well are shown. You can see like we have an exactly some changes were happened. You have completeness, you have compliance, correctness. Is this CI stale? That means it has stale data. It was not updated maybe within a specific time. It has some relationships as well. You can see it shares relationship for matters. Then you have the bottom you see it says change incident tasks and whatever tasks associated with the CI that you can see the list here as well. Key CMDB tables. So CMDB has three key tables. The first table is base configuration item, which is the main parent table of whole CMDB. Then we have configuration item, which is extended from base configuration item. And then the third main table we have is CI relationship, which stores data related to the relationship between different CI records. CMDB table hierarchy. So let's understand that how the CMDB tables are structured. The base main table of CMDB is base configuration item. Which extends another table that is configuration item. So that is also one of the base table. And then we have tables like hardware or application. And there are many other applications or tables you have, which are also called as CMDB classes. Now, these classes extend other CI classes like you have computer. Then for application, you have application server. You can extend like there are different classes, there are different extended classes as per the categorization you have for that particular CI. That's that's how you divide, you categorize these classes into into into different categorization so that you can have proper defined classes as part of CMDB in ServiceNow. Usage of CMDB. When you have proper CMDB CI's in ServiceNow, then you can use these configuration items for the creation of different records like incident, problem, request. That means these particular items, they are related to configuration items. These all records, these tasks which we are talking about, incident change, problem or request, they are related to configuration items. That is something you can define how exactly you can define. So you can see on incident form. In which CI is selected. Which means there is an issue related to this particular CI. Now, this helps agents and IT users to fix the issues effectively in the organization. Similarly, you have configuration item on problem form and you have configuration item to be selected on change form as well. CI dependency view. Dependency view display graphical infrastructure view of a CI and all others CI connect or related to the CI. It also indicates if there is some existing issue or alert for a CI. So when you see the dependency view, it shows you the graphical infrastructure view where you can see that one particular CI is connected to different CI's. If there is a connection and you can see that if there is some issue, existing issue in a particular CI. Now, how this CI dependency view will be used in real world. So, for example, if you have an application. It is down. Now, that application might have some upstreams, maybe it should have some downstreams. So in that case, one of the upstream or downstream, they are getting some data, maybe upstream application, maybe they have some issues. So how would you see that? You can see that in this particular view. That what all connection connected applications are impacted as of now. Maybe there is a server impacted. Maybe there's a multiple issues for a server. Maybe application server is impacted or any any database instance is impacted. That is something you can see here in dependency view. Next is CI class manager. CI class manager displays the entire CI class available in the instance in hierarchical structure like tree. Showing all CI class definitions in one place. So whatever classes you have. So whenever you define different classes, that is something you can see in CI class manager. You can manage as well. And that's what it says. It is easier way to view, modify or extend a CI class. That's an easier way to provide. If you want to modify your classes, that is something you can do via CI class manager. And it is really helpful. So let's see all these elements which we talked about in my personal developer instance. Let me show you that how you can utilize CMDB and what is the usage of CMDB. So if I go to incident application. Under incident application, if I click on create new and I try to create a new incident. So when I when I try to create a new incident, it will ask me to information here. One is service and configuration item. As of now, this is not mandatory. However, in organizations, when you implement incident management, I think configuration item should always be mandatory. But not for end users, because end users, they don't know what kind of configuration item it is. But if I talk about IT users, it should be mandatory. So in that case, here is the field we have configuration item and another field we have service. Now, both the fields, they are targeting to CMDB tables, CMDB classes. However, configuration item shows all the configuration items you have in your instance. So if I click on that search icon, you can see these are all configuration items, regardless of the classes. That means it shows all the classes. I can select any computer. I can select any server, software, everything I can select. So let's say there is an issue. Maybe I have this Abqas client. I have an issue with this particular software. So in that case, I can just type this down and I can say Abqas is not working. It is an issue because if I will just create a random incident, for example, if I'm not using, I'm just I'm just removing this from here. And I'm just putting any name here. Let's select any random name. And if I just click on save in this case, whomsoever person will get this incident, he will not be able to identify and he will not be able to get more details. So it's really important you have to select that which configuration item is impacted, because I think this would be really useful for everything, for reporting purpose. I know you can still mention in short description, but if I ask that how how how many tickets you got for this particular CI, that is how you can get it from here. Maybe it might happen. And that's what you do in service now with the help of CI. Whenever I select any CI, it gets assigned to the primary group, maybe that that lot of organizations, they do that. So in that case, if I will just mention the application name in short description, in that case, I won't be able to read out it or route it automatically. But if I will select configuration item and that application will be available here, I selected and then will be automatically routed. That is also you can kind of implement in your service now instance. And I think service now also provides that kind of feature out of the box. But as of now, I think it's not enabled. You have to you have to apply that feature. But service now, if you if you will go to service not documentation, you will find that feature. So as I mentioned here, you have a configuration item so I can select that application, that configuration item. So it can be a server. It can be an application, whatever classes we have. Now, what are those different classes we have? So if I go to configuration item, let's say let's say configuration. So I go to configuration application. And if I go to, let's say from here application, now, these are all applications or all this is definitely extending from CMDB. So you can see these are all applications you have. So if I right click and see the table, let's see which table it is. So it should be a CMDB application table. So you can see it's an application table. However, it is extending from configuration item. That means it is one of the class you have in your instance. That is application. And you can create different applications. If I click here, you will see these are the applications we have. If I go a little bit bottom, you will see different categories like you can have application servers, you can have servers, clusters, database. I think different category of devices you have in the organization or in the whole world, I think that which is used in different organizations. That is what ServiceNow has provided you those classes, those categorizations out of the box. Well, I think directly from ServiceNow, you don't have to create it, but it might happen as part of your implementation in your organization. Sometimes organizations, they do use their own classes, custom classes. So that's totally up to you. What is recommended? What is not? I'm not going to tell you in this particular session because this is just about the glimpse of CMDB. So here you can see we have this like all database catalogs you have. You have network devices like networks, services. You have load balancers, data centers, infrastructure services as well like email, FTP. These are all different classes you have and their data. And you can define you can mention these these configuration items in different records, as I mentioned, like incident change problem. Let me open one of the configuration item. Maybe let me open this one. Alternate SMTP. It is kind of a IP service or maybe let me open a really I think which will have more fields maybe. So I will open maybe a server. Let's let me open a server. So we have this Windows server. I'm opening this OWA Windows server. Let me check what all details it has. Yeah, it's open. OK, so you can see these are the details which we're talking about, like name, asset tag, all the configuration, how much RAM is there on the server, CPU speed, what kind of operating systems. That is the configuration you can see here. You have related items. Now, if you before that, I showed you two views. One is the form view. This is the one. And then you have dashboard view and dashboard view. You can see different details, more details about the health check of this particular CI, whether your CI is healthy. Is there any relationships for matter? Do you have any stale data, any compliances there, completeness, relationship, any task? You can see we have a lot of these change records. We have, I think, no, no incident records. If I click on task, you will get me with these tasks, these SIR records as well. So how many how many records are associated with this configuration item? That is something you can see here. So if I open this again and so here we have related items. You can see the different items which are related to this. Now, these are also CI's like you can see this is data from mass storage devices. Here you have VM SD for now. This should be a CI. If I click on it, you will see this will open a CMDB CI server. It's kind of a it's another server you have for the same similar kind of details like assets and asset tag manufacturer company configurations. It is again showing that which items are related to this particular. That's how you define that what items are related to what other different CI. That means configuration items. Now, if you have any new relationship, if you have if you want to add in that case, you can just click on this plus button. You will see this new screen which says relationship editor. That means you can add different items into your configuration items and add their relationships. So in this case, if I select anyone, for example, it says used by child. It is one of the suggested relationship and that's how service now is suggesting you that you can utilize these relationships for your adding different relationship with a different configuration items. So if I select this one and if I go to the bottom, you will see these are the configuration items and we have these existing relationships. So in that case, I can select maybe this one, this one, this one, this one. And then I will just click on plus icon. I have to after selecting these configuration items, I will click on plus what you will see. It will be added here. You can see that these items are added here and says used by child. And these are added here. If I click on save and exit. Yes, I want to. OK, if I do that, let's see what happens. When I added that relationship, you will see that these five items are added now used by computers. So I added those CIs and it can be seen here. So this is how you can add relationships manually. Now, this is something you can do automatically as well by pushing the data directly into CI relationship table. So if I go to configuration, I think let me go to configuration. And if you go a little bit bottom, you will you will see that. Relationships module we have here, you have relationships, you also have suggested relationships. So if you want to create a new relationship, you can also create it from here. So, for example, if I click here, you can mention that in what what kind of base class the reason for suggested relationship is that like, for example, an application, it cannot be maybe it cannot be associated with a maybe maybe directly with with the with any database instance. I'm just giving example that it cannot be associated, maybe maybe a firewall cannot be connected to a to a router. Just I think it will be connected in real world. But I'm just giving example that if that's the reason suggested relationships are really important because you don't want those kind of relationships to be to be misused, I would say that means for a particular CI class, what kind of relationships you should use. That is how you can define for your organization. So any any any person who wants to create different CI relationships, they should create those relationships with different configuration items as for the suggested as for the recommended CI relationships. And that's how you can create these just relationships and you can use them as part of adding relationships in CMDB. That's how you can configure just a high level, high level details about CMDB, that how exactly you can utilize CMDB relationships. One more thing. I think we were just talking about dependency view. So I will quickly show you that as well. So if I go back, maybe I'll just open that servers, just one server, maybe, maybe this one. So if I go a little bit bottom and in related items, if I show you here, if I click this button called show dependency views, if you click this button, it will show the dependency view. That means this application is associated with what different configuration items. That is what you can see in this particular view. It is loading dependency view. You can see as of now, I don't think it has any relationship. Even if I go here, you can see it is blank. Maybe let me go to another server so that you can understand better. Maybe we will select the same CI which we had this one. So you remember we added these relationships with these configuration items. So I will click on this dependency view. It is loading dependency view now and you can see now it is showing you that relationship, that graphical representation, that how different servers, how different services, how different configuration items are related to this particular server, which we have just opened. You can see that and where exactly it is. It is located. That is something you can see here. It is here, Windows Server, and these are all used by because that was the dependency used by. That means this particular Windows Server is used by these particular computers. That is what you can mention here. And these are the servers associated with this Windows Server. That is something you can see. It's really a great view. Now, one more important thing which I was talking about, that you can also see the issues, some alerts. You can see some icons here. Like if this particular CI or maybe in this view, if you have any associated CI with your primary CI, which you're looking for, or maybe which is the impacted CI, you can see if there is any existing incident problem or any kind of maintenance available for that particular CI. So if I give you the actual example, for example, one of the application is down. So what you can do, you can open the dependency view and you will see that what all maybe database instances, servers are connected, are related to that particular application. You might find that your application is down and there are a hell of incidents created for one of the database instance, maybe, which is connected to this application. So in that case, you can just quickly check that particular CI, that means that database instance, and check if the incidents created, they are existing incident, they are open, they are active, and they are like they just created, they just got created recently when this application was down. In that case, you will get a real and clear picture that which element is impacted. And that's, I would say, the power CMDB has. It's a really powerful, I would say, powerful application for any organization to use to identify issues, to fix them, to resolve them as soon as possible. So this is what this is what the glimpse of CMDB, which you have to use in your different records, you create like incident change problem. Knowledge check three. Question number one, what is collection of structured variables which can be reused in catalog items? Your time starts now. And the answer is variable sets. Question number two, which type of catalog item that allows end users to create task based records like incident? Your time starts now. And answer is record producer. Question number three, catalog editor can update the catalog manager of a catalog. True or false? Your time starts now. And answer is false. Catalog editor cannot update the catalog manager. Question number four, what are three types of task records created when catalog item is submitted? Your time starts now. And answer is request, requested item and catalog task. Question number five, flow and workflow can be used together for a catalog item. True or false? Your time starts now. And answer is false. Flow and workflow cannot be selected together. You have to select one of them for your catalog item. Question number six, what is called as column of a table? Your time starts now. And answer is field. Field is basically the column of a table. Question number seven, name two base tables in service now. Your time starts now. And the answer is task table and CMDB underscore CI table. Question number eight, incident change problem are extended from which table in service now? Your time starts now. And the answer is task table. All these tables are extended from task table, which is also the base table. Question number nine, which functionality displays the details of tables and their relationships in a visual manner? Your time starts now. And answer is table schema map. Question number 10, extended tables inherit fields of parent table. True or false? Your time starts now. And answer is true. Whenever the table is extended from a parent table or base table like task table, it also inherits the fields of parent table, the table from which it is extended from. Question number 11, what is full form of ACL? Your time starts now. Answer is access control list. Question number 12, what are main four types of operations of access? Your time starts now. Answer is crude operations, create, read, update and delete. Question number 13, in which application you will find ACL module? Your time starts now. Answer is under system security application, you will find access control module. Question number 14, what type of ACL will be applied if user can access the records in a table except one field? Your time starts now. Answer is table dot field ACL will be applied to secure the field. Question number 15, which kind of ACL will be created to restrict some fields to be available to use for templates? Your time starts now. Answer is save as template ACL. Question number 16, what is a set of field maps that determine the relationships between fields in an import set and fields in an existing ServiceNow table? Your time starts now. And the answer is transform map. Question number 17, which types of file format can be imported via import functionality available in the list context menu? Your time starts now. And the answer is Excel format. Question number 18, what is used to update existing records rather than inserting new record during transformation of data? Your time starts now. And the answer is making field as colase. Question number 19, what is called a staging table which is stored source data? Your time starts now. And the answer is import table. Question number 20, what type of records tracks the information about the insert, update, skipped, error for the records imported? Your time starts now. Answer is import set record. Question number 21, which table stores the detail about configuration items? Your time starts now. And the answer is CMDB underscore CI. Question number 22, database instance is configuration item, true or false? Your time starts now. And the answer is true. Database is one of the configuration item. Question number 23, how configuration items are categorized in CMDB? Your time starts now. And the answer is configuration items are categorized in CMDB classes. So you have different CMDB classes and that's how CMDB items are categorized. Question number 24, name three key tables of CMDB. Your time starts now. And the answer is base configuration item, configuration item and CI relationships. Question number 25, name the feature which shows the graphical infrastructure view of a CI and all other CI connected or related to the CI. Your time starts now. And the answer is dependency view. Next topic is integration. ServiceNow can share data with third party applications or external systems with integration. Some of the integrations which are used in ServiceNow are SSO, LDAP, monitoring, notifications, events. Now what exactly we integrate in ServiceNow? Common integrations are done with CMDB, incident management, problem management, change management, user administration and single sign on, which is used for login to ServiceNow platform. You can use different ways for integration like web services, LDAP, Excel, email. These are different ways of integration with ServiceNow. Now we also have another great feature in ServiceNow that is integration hub. Integration hub provides a single solution to quickly integrate with third party applications to share the data with ServiceNow or other system. It provides capability to perform integration without any coding as it uses flow designer functionality. Each integration with different third party applications like MS Teams, Google, Exchange, Zeta is referred as a spoke. Integration hub comes with license cost and has subscription packages as standard, professional and enterprise, which gives access to different spokes for integration. Enterprise package includes all spokes developed by ServiceNow. If you want to learn more about integration hub, then you can refer ServiceNow documentation or learning website. This session is about ServiceNow update sets. As a developer or administrator, you must have done a lot of configurations or developments in ServiceNow. Now, in order to move those changes into different instances, you need update sets. So let's start with the definition of update set. So what is an update set? An update set is a group of configuration changes that can be moved from one instance to another. This feature allows administrators to group a series of changes into a named set and then move them as a unit to other systems for testing or deployment. If I give you a quick example. That you want to perform some changes on the form. You add two fields on that form. That means you have changed the layout of that form. At the same time, you have also added a UI action, a button on the form as well. Now, how exactly you can move these changes to the different instances? So in that case, you can capture these changes that you have done in just one unit. And then you can move them into a different instance. Now, this particular unit, which will have a name, is an update set. Update sets movement. Let's say you have instance one. So this is your maybe development instance. And then you have instance two. This is your production instance. Now, you have to move some changes. That means you have done some changes in this particular instance. So you have changed one, changed two, changed three, changed four. Like I said, form changes, layout changes, you have added a button, you have created a client script, you have added a business rule, four different changes. But you have changed those configuration or development in instance one. Now, how this will be moved? So basically, you will capture all these changes. And these changes will be moved to another instance with the help of update set. That means same change that you have in instance one will be replicated in instance two as well. Update sets application. In order to perform all these update sets capturing a movement, ServiceNow has a separate application that is system update sets, which has different modules to manage these update sets. Let's take a look in my personal developer instance. In order to go to the application, you need to type system update. When you will type system update, you will see this application with some modules. If I click on the first update sources, so this is the first module where you have to configure all your remote instances configurations. Because you can only move the update sets, the changes you will capture with the help of update sets. But those configuration has to be there so that it can know from where I have to pull the data. I have to pull the update sets changes in this instance. Then we have retrieved update sets. So basically, this is like a primary instance or maybe a destination instance, you can say. Now, this is like a production instance and you're pulling some data from your dev or UAT instance. In that case, whatever changes you are pulling from your lower instances, you can see here. Then we have update log. So whatever data, whatever changes you retrieve, all actions are being logged and you can see here. Then you have local update sets. So similarly, in production as well, even you are pulling some data, you are pulling some customizations from another instance. Those are also being stayed here as a local update sets. That means those are the update sets for this particular instance. So whatever changes we have in form of update sets that you will find here. Then we have merge update sets. So you can also merge if you have different update sets and you want to merge them into one. You can also do that. ServiceNow provides you that feature as well. Then you have merge completed update sets. This already gives you functionality that the update sets which are already completed. You want to merge them. You can just merge here and then you have update sets to commit. That means any update set you have to commit. That means you have to install in your this instance that you can see from this particular module. When to use update sets? Now, this question is really important to know, but I will just explain you a little bit about update set. That whatever changes which are like development changes or configuration changes or should be captured as a development. They always get captured in an update set. Even you don't create any one, any, any single update set. And that update set is basically default update set. So ServiceNow automatically from the beginning keep one update set even as in a fresh instance. I will quickly show you one instance which I just recently enabled this one. And if I will go to update set and I will click on local update sets here. You will only see one update set that is default. That means whatever changes you will be doing even directly on instance that will be captured in this particular default update set. Now why ServiceNow does that? Because just to make sure that you don't miss or lose any kind of development or changes you do in this instance. And that's the reason ServiceNow automatically keep one update set that is a default updates always in progress. The question here is when to use update sets. So you should use update sets when the changes you want to keep in every instance. So maybe you have different instances in your organization and you want to keep those changes in every instance. And you don't have to change that manually. So just an example, you're writing a business rule in one instance. You don't want to write a business rule again in production. So in order to make sure that all the business rules are being written in every instance for the same functionality, then you have to move it to every instance. So then you need to use update sets. You have to use update sets when all the changes which can change the baseline and can give impact. So any change you want, it can it can give impact. It has to be done directly with the update sets. It should not be done directly in production. The reason I mention here that why we need update sets, because you should not do these changes directly in production. And that's the reason we have these update sets so that you can do those changes in lower environment, which is kind of a replica of production. And then you can move it to the different instances, even in production. And after testing as well. And that's the third point. The changes needs to be tested in lower instance before moving to production. Any kind of change, maybe you are creating a business rule. You can't directly create in production. Because you don't know whether that particular business rule will give any impact. So it's really better. I think it's mandatory. I would say that you perform that development into lower instances, move into different instances, tested thoroughly and then move it to production. Items captured in update sets. So there are a lot of different items in service now. Which are basically captured automatically. So you don't have to do anything manually to enforce them to be captured in update sets. So items like form configurations. So whatever configuration you do on form, it does capture in update sets. Related list configuration. Business rules. Client scripts. UI policy. UI actions. Notifications. Script includes. UI pages. And more. Basically, you can also change these items in production. And that will also be captured in default update set. However, as I mentioned, you shouldn't do that. So you have to create an update set in your environment. Capture these changes, which I am showing you on the on the screen and then move them. But as I mentioned, items captured in update set, that means you don't have to do anything, any extra activity. You just go into your lower instances, create updates that name it properly and then make it current, which we will see a little bit later. And once it is done, you just perform the changes, create a business rule, create a script, include all those changes will be captured in that particular unit. New unit, which you just created. Now, items not captured in update set. So that means there are some items as well in service now, which you cannot be captured, which cannot be captured in update sets. And those are task records like you have records like incident change problem, these records, whatever changes you do in these records, they don't change, they don't capture in update sets. Then we have users. You have user data, you do some changes, the users record, those doesn't change or does sorry, those doesn't capture in update set groups. Any records you have in groups table, those doesn't capture in update sets. Then you have scheduled jobs, scheduled jobs as well. Even scheduled jobs are part of kind of development, but they are still not captured. But you can still do force capturing. And that's kind of an additional feature in service now. That anything which is not captured and you want to make it capturable, in that case, you can directly push it into an update set as well. CMDB records. So all the CMDB repository we have, it cannot be captured in update set. System properties. And last, I think it's just more. So extract rather a lot of other things which we talk that a lot of things can be captured. A lot of things cannot be captured in update sets. Update sets planning process. Now, before you before you start moving the update sets. You have to make sure for some of the points. That means you have to plan your moving of the updates properly so that you don't get any kind of issues. Starting with same version instance. That means when you are promoting the update sets from instance one to instance two, instance one and instance two should be on the same service now version like Madrid, Orlando, New York. Both the instances cannot be different because the reason behind it, if you are performing a development and lower instance, maybe in Madrid version. And you are moving those changes into Orlando. Things might break. So it's really it's kind of a mandatory, I would say, from service now that both the instances should be on the same version. When you have correct update set is selected. As a developer or administrator, when you perform development or do any kind of changes which is being captured in update sets. You have to make sure that right update set is selected on your on your development screen. In your service now in the same session you're working on. Second thing is instance is third thing is instance is cloned. Now, you don't want that both the instances are on different maybe their societies are different or some data is changed. No, or different. In that case, the best way is you have to copy production to lower instance. And that's called cloning. So you have to make sure that whenever you do any kind of releases or maybe major releases, your instances are keep on cloned. Then we have identify path for update set movement. Now, this is also important point in the planning process of update sets. Because when you have different instances in your organization, you might have dev, you might have it, you have you at you, you might have staging, you might have production. Or maybe some temp instances or other instances as well. But you have to define a model path that how your update sets will be moved. That means from instance one to instance two, then since three, and then at last add in an instance forward. The next point we have is planned when to commit update sets in production. This is also really important because production changes can also will also give you any kind of impact. Or user may maybe get surprised why that new option got added. So in that case, you have to make sure that you are planning your movement of update sets in production properly. Then we have clear naming convention. That means whatever name you're providing to your update sets while creating a new update set, it should be pretty much understandable. If you're working in releases, some sprints in your development lifecycle for any module. In that case, you can define some standard naming convention for your organization so that everybody, every developer can understand that naming convention. Preview and commit. Now you move the changes, you move the update set into different instances. You have to make sure that you are properly previewing them so that you can see what all errors or any kind of warnings are there. You fix those warnings and errors. And then after review, that means you are reviewing it before moving as well. So when you are ready, that yes, I'm ready to move this update set. You have to make sure all the customizations which you have done has been captured. A lot of time it has been seen the developers sometimes forget to select the current update set, the update set which they want current development to be captured. So you have to make sure that you are reviewing your update set. You have proper customizations, all the expected customizations, and then only you are moving to the different instance. Update set promotion. Now, how exactly update sets are being promoted in different instances? So we will start with dev instance. So you perform the development in dev instance, any one of your dev instance. And then you have UAT instance. Then you have a staging instance. And then you have production. So dev is for development. UA is for user acceptance testing. Staging is like a pre-prod instance. And then you have production instance, main instance where all your business users, live users are working. Now, you perform the development, you capture the update sets in dev instance, and then you move that update set into UAT instance. Now, this was the identification of the path so that you can perform the development till production. That means move the changes till production. Then you perform the UAT, you perform the testing, all your end users perform the testing. Once everything is succeeded, you move those changes to next instance, that is staging. Now, in staging, you still do a one round of testing again, but if everything is good. Once those changes are being moved into staging, now you have a last stage that is production implementation. That means whenever you have planned for your production release, if that date has come, then you will move all the changes from staging instance to production instance. System update set tables. We also have two different tables for update sets. One is update set, the update bracket which you create, it's a different table. And that table is sys underscore update underscore set. And that's the update set table where you add different customizations. Now, all those customizations, basically, which are captured, maybe it's a form layout, related list layout, related list configuration, adding a business rule, all those, basically all data is in XML format. So those are called customer update. So for each entry, for each dictionary entry you have, it creates a customer update and then add into your update set. So basically, customer update is a related list of update set. So when you will open any update set, you will see the related list customer update and you will see all the changes you have done for any functionality you have changed. Events. Events are spatial log records that system generate when something notable has happened or certain condition occur, like user logged into ServiceNow platform, user approved the request or any particular request is submitted. Now, how these events are generated, events can be generated with business rules, event queue scripting, API flow or workflows. In business rules, you can define trigger condition, which becomes an event like record updated, inserted or deleted. Or you can process that particular event, which you are basically configuring when to run. You can basically configure actions as well. It is just a configuration that is an action which has to take when that particular condition is met. That means that event is basically occurred and you can also process that event with the help of action. But that is also in a scripting section that is an advanced section where you can write the script. Now, events can also be generated with the help of scripting by using GS dot event queue method. Now, this is something you can use if you want to generate any event from your script. It could be any server side script you have and you want to generate that as an event and you have to take some action maybe. In that case, you can use GS dot event queue. If I give you a quick example, maybe for notification. So if you're writing a server side script and you have to generate an event and that event you have to use maybe notification, you can use that. In that case, you can use GS dot event queue and you can provide all the parameters like you have name. Name is the name of the event and how that name basically come. We will talk about that as well. But then you have to provide the record which record you are basically generating this event. And then you have to provide parameters. You can provide two parameters, parameter one, parameter two, and that is a string. And then if you want to use default queue, then you don't have to mention any queue parameter. But if you want to specify a queue, that means a dedicated queue for that particular event, then you can specify the name of that particular queue. If you have any particular queue created in your platform. You can also generate an event in flow because in flow you have this trigger section and trigger. You can define you can configure whether the record is created, updated. If that particular event is triggered, then you can perform any action. Now, you can also generate an event in workflow because in workflow you have an activity that is called as create event. You can mention that what event if any action is being performed, let's say your workflow is running. And if on that workflow, let's say there is one activity is completed after that activity, you want to generate an event to perform some action. In that case, you can add this activity, which is create event, provide the details of the event. And on the basis of that event, you can perform some action. Maybe you can send notification. Maybe you can run some other type of scripts. It's totally up to you. But how as for the requirement you get from your customers, what action you want to take on the when when that event is basically occurred. Now, event registry. We were talking about specifying the event that the name which will be generated, which will be triggered in the system. And that is basically captured in event registry. So if you have to generate an event, that even first have to be captured in event registry. So you have to go to the registry. You have to create that event and you have to use the naming convention. It's basically the table name. And then you can use any particular action. Let's say incident dot inserted problem dot updated. These are basically name of the events which you can specify in event registry. And then you can use that event name in workflow or you can also use in GS dot event to API. And once you will mention that event, it will be generated and then you can perform any action as per the requirement you get from your customers. Then where exactly you can check that what kind of events are being generated. So that section, that module we have is event log. If you will go to event log under system policy, you will find all the events generated in your platform. You can mention the filter created today or any time. Basically, it can monitor it, capture all the events which are basically generated in the platform. And you can check when that particular event was triggered. It's basically sometimes used to troubleshoot as well, because let's say you have written a script and it is generating an event. And let's say your whatever action you have mentioned, it is not being triggered. That action is not taken yet. In that case, you can go to the script, this event log and check whether that event was processed or not. That's how you can troubleshoot by going to this event log section in event log module. Event actions. Now, once event is triggered, you can also perform action like sending notifications. Even in notifications, you can select the event, then actions configured in business rule because record inserted is also an event. So for that in business rule, you can perform any action, maybe in action section we have in business rule or you can write a script as well. Then you have action configured in flow. So similarly, like you have in business rule, flow also runs with the same concept, because even in flow, you can define record inserted, created or updated, and then you can perform any action. And then last thing is run a script because you also have a script action in basically event module. You have this another module that is script action. You can let's say if there is an event generated and what kind of action you want to take with the help of script, then you can use script action. But that's how you can use events and you can generate different events as per the requirement you get from your customers. Platform stats now ServiceNow provides a module stats, which basically provides statistics for system activities that affect performance, such as execution of queries, scripts and transactions. So if you will go to system diagnostic, you will see this module stats. Now, this stats will also give you other information like version of your ServiceNow instance. Like you can see on the screen, it also shows the cluster which is connected to it, shows the build name, San Diego. It shows the exact version that is San Diego patch one. It shows the name of the instance and all other instance, all other information as well, even the IP address, whether instance is online, offline and other like server.